ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBFS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBFS_Init,"ax",%progbits
  20              		.align	1
  21              		.global	USBFS_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBFS_Init, %function
  25              	USBFS_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\USBFS.c"
   1:Generated_Source\PSoC5/USBFS.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS.c **** * \file USBFS.c
   3:Generated_Source\PSoC5/USBFS.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBFS.c **** *
   5:Generated_Source\PSoC5/USBFS.c **** * \brief
   6:Generated_Source\PSoC5/USBFS.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBFS.c **** *
   8:Generated_Source\PSoC5/USBFS.c **** * Note:
   9:Generated_Source\PSoC5/USBFS.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBFS.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBFS.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBFS.c **** *
  13:Generated_Source\PSoC5/USBFS.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBFS.c **** * \copyright
  15:Generated_Source\PSoC5/USBFS.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBFS.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBFS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBFS.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBFS.c **** 
  21:Generated_Source\PSoC5/USBFS.c **** #include "USBFS_pvt.h"
  22:Generated_Source\PSoC5/USBFS.c **** #include "USBFS_cydmac.h"
  23:Generated_Source\PSoC5/USBFS.c **** #include "USBFS_hid.h"
  24:Generated_Source\PSoC5/USBFS.c **** #include "USBFS_Dp.h"
  25:Generated_Source\PSoC5/USBFS.c **** 
  26:Generated_Source\PSoC5/USBFS.c **** 
  27:Generated_Source\PSoC5/USBFS.c **** /***************************************
  28:Generated_Source\PSoC5/USBFS.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBFS.c **** ***************************************/
  30:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 2


  31:Generated_Source\PSoC5/USBFS.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBFS.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBFS.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBFS.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBFS.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBFS.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBFS.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBFS.c **** * functions.
  39:Generated_Source\PSoC5/USBFS.c **** */
  40:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_initVar = 0u;
  41:Generated_Source\PSoC5/USBFS.c **** 
  42:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBFS.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBFS.c ****         static void USBFS_InitEpDma(void);
  45:Generated_Source\PSoC5/USBFS.c **** 
  46:Generated_Source\PSoC5/USBFS.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBFS.c ****         const uint8 USBFS_DmaChan[USBFS_MAX_EP] =
  48:Generated_Source\PSoC5/USBFS.c ****         {
  49:Generated_Source\PSoC5/USBFS.c ****             0u,
  50:Generated_Source\PSoC5/USBFS.c ****             0u,
  51:Generated_Source\PSoC5/USBFS.c ****             0u,
  52:Generated_Source\PSoC5/USBFS.c ****             0u,
  53:Generated_Source\PSoC5/USBFS.c ****             0u,
  54:Generated_Source\PSoC5/USBFS.c ****             0u,
  55:Generated_Source\PSoC5/USBFS.c ****             0u,
  56:Generated_Source\PSoC5/USBFS.c ****             0u,
  57:Generated_Source\PSoC5/USBFS.c ****             0u,
  58:Generated_Source\PSoC5/USBFS.c ****         };        
  59:Generated_Source\PSoC5/USBFS.c ****     #else
  60:Generated_Source\PSoC5/USBFS.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBFS.c ****         uint8 USBFS_DmaChan[USBFS_MAX_EP];
  62:Generated_Source\PSoC5/USBFS.c ****         
  63:Generated_Source\PSoC5/USBFS.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBFS.c ****         uint8 USBFS_DmaTd[USBFS_MAX_EP];
  65:Generated_Source\PSoC5/USBFS.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBFS.c **** 
  68:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBFS.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBFS.c ****     uint8  USBFS_DmaEpBurstCnt   [USBFS_MAX_EP];
  72:Generated_Source\PSoC5/USBFS.c ****     
  73:Generated_Source\PSoC5/USBFS.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBFS.c ****     uint8  USBFS_DmaEpLastBurstEl[USBFS_MAX_EP];
  75:Generated_Source\PSoC5/USBFS.c **** 
  76:Generated_Source\PSoC5/USBFS.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBFS.c ****     uint8  USBFS_DmaEpBurstCntBackup  [USBFS_MAX_EP];
  78:Generated_Source\PSoC5/USBFS.c ****     uint32 USBFS_DmaEpBufferAddrBackup[USBFS_MAX_EP];
  79:Generated_Source\PSoC5/USBFS.c ****      
  80:Generated_Source\PSoC5/USBFS.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBFS.c ****     const uint8 USBFS_DmaReqOut[USBFS_MAX_EP] =
  82:Generated_Source\PSoC5/USBFS.c ****     {
  83:Generated_Source\PSoC5/USBFS.c ****         0u,
  84:Generated_Source\PSoC5/USBFS.c ****         USBFS_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBFS.c ****         USBFS_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBFS.c ****         0u,
  87:Generated_Source\PSoC5/USBFS.c ****         0u,
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 3


  88:Generated_Source\PSoC5/USBFS.c ****         0u,
  89:Generated_Source\PSoC5/USBFS.c ****         0u,
  90:Generated_Source\PSoC5/USBFS.c ****         0u,
  91:Generated_Source\PSoC5/USBFS.c ****         0u,
  92:Generated_Source\PSoC5/USBFS.c ****     };
  93:Generated_Source\PSoC5/USBFS.c **** 
  94:Generated_Source\PSoC5/USBFS.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBFS.c ****     const uint8 USBFS_DmaBurstEndOut[USBFS_MAX_EP] =
  96:Generated_Source\PSoC5/USBFS.c ****     {
  97:Generated_Source\PSoC5/USBFS.c ****         0u,
  98:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBFS.c ****         USBFS_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBFS.c ****     };
 107:Generated_Source\PSoC5/USBFS.c ****     
 108:Generated_Source\PSoC5/USBFS.c **** #else
 109:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBFS.c ****         static uint8 clearInDataRdyStatus = USBFS_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBFS.c ****         uint8 USBFS_DmaNextTd[USBFS_MAX_EP];
 112:Generated_Source\PSoC5/USBFS.c ****         const uint8 USBFS_epX_TD_TERMOUT_EN[USBFS_MAX_EP] =
 113:Generated_Source\PSoC5/USBFS.c ****         {
 114:Generated_Source\PSoC5/USBFS.c ****             0u,
 115:Generated_Source\PSoC5/USBFS.c ****             0u,
 116:Generated_Source\PSoC5/USBFS.c ****             0u,
 117:Generated_Source\PSoC5/USBFS.c ****             0u,
 118:Generated_Source\PSoC5/USBFS.c ****             0u,
 119:Generated_Source\PSoC5/USBFS.c ****             0u,
 120:Generated_Source\PSoC5/USBFS.c ****             0u,
 121:Generated_Source\PSoC5/USBFS.c ****             0u,
 122:Generated_Source\PSoC5/USBFS.c ****             0u,
 123:Generated_Source\PSoC5/USBFS.c ****         };
 124:Generated_Source\PSoC5/USBFS.c **** 
 125:Generated_Source\PSoC5/USBFS.c ****         volatile uint16 USBFS_inLength[USBFS_MAX_EP];
 126:Generated_Source\PSoC5/USBFS.c ****         const uint8 *USBFS_inDataPointer[USBFS_MAX_EP];
 127:Generated_Source\PSoC5/USBFS.c ****         volatile uint8 USBFS_inBufFull[USBFS_MAX_EP];
 128:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBFS.c **** 
 132:Generated_Source\PSoC5/USBFS.c **** 
 133:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Start
 135:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBFS.c **** *
 137:Generated_Source\PSoC5/USBFS.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBFS.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USBFS.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBFS.c **** *   operation.
 141:Generated_Source\PSoC5/USBFS.c **** *
 142:Generated_Source\PSoC5/USBFS.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBFS.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBFS.c **** *
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 4


 145:Generated_Source\PSoC5/USBFS.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBFS.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBFS.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBFS.c **** *
 149:Generated_Source\PSoC5/USBFS.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBFS.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBFS.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBFS.c **** *
 153:Generated_Source\PSoC5/USBFS.c **** *  \param device
 154:Generated_Source\PSoC5/USBFS.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBFS.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBFS.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBFS.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBFS.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBFS.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBFS.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBFS.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBFS.c **** *   following list.
 163:Generated_Source\PSoC5/USBFS.c **** *
 164:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBFS.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBFS.c **** *
 167:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBFS.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBFS.c **** *
 170:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBFS.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBFS.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBFS.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBFS.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBFS.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 177:Generated_Source\PSoC5/USBFS.c **** *  \ref USBFS_initVar
 178:Generated_Source\PSoC5/USBFS.c **** *
 179:Generated_Source\PSoC5/USBFS.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBFS.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBFS.c **** *
 182:Generated_Source\PSoC5/USBFS.c **** * \reentrant
 183:Generated_Source\PSoC5/USBFS.c **** *  No.
 184:Generated_Source\PSoC5/USBFS.c **** *
 185:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBFS.c **** void USBFS_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBFS.c **** {
 188:Generated_Source\PSoC5/USBFS.c ****     if (0u == USBFS_initVar)
 189:Generated_Source\PSoC5/USBFS.c ****     {
 190:Generated_Source\PSoC5/USBFS.c ****         USBFS_Init();
 191:Generated_Source\PSoC5/USBFS.c ****         USBFS_initVar = 1u;
 192:Generated_Source\PSoC5/USBFS.c ****     }
 193:Generated_Source\PSoC5/USBFS.c **** 
 194:Generated_Source\PSoC5/USBFS.c ****     USBFS_InitComponent(device, mode);
 195:Generated_Source\PSoC5/USBFS.c **** }
 196:Generated_Source\PSoC5/USBFS.c **** 
 197:Generated_Source\PSoC5/USBFS.c **** 
 198:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Init
 200:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBFS.c **** *
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 5


 202:Generated_Source\PSoC5/USBFS.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBFS.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBFS.c **** * USBFS_Init() because the USBFS_Start() routine calls
 205:Generated_Source\PSoC5/USBFS.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBFS.c **** *
 207:Generated_Source\PSoC5/USBFS.c **** * \reentrant
 208:Generated_Source\PSoC5/USBFS.c **** *  No.
 209:Generated_Source\PSoC5/USBFS.c **** *
 210:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBFS.c **** void USBFS_Init(void) 
 212:Generated_Source\PSoC5/USBFS.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
 213:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBFS.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBFS.c ****     USBFS_USB_CLK_EN_REG = USBFS_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBFS.c **** 
 217:Generated_Source\PSoC5/USBFS.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBFS.c ****     * USBFS_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBFS.c ****     */
 220:Generated_Source\PSoC5/USBFS.c **** 
 221:Generated_Source\PSoC5/USBFS.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG &= ~ (uint32) USBFS_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBFS.c **** 
 224:Generated_Source\PSoC5/USBFS.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBFS.c ****     USBFS_BUS_RST_CNT_REG = USBFS_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBFS.c **** 
 227:Generated_Source\PSoC5/USBFS.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBFS.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBFS.c ****     */
 230:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG = USBFS_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBFS.c **** 
 232:Generated_Source\PSoC5/USBFS.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG |= USBFS_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBFS.c **** 
 235:Generated_Source\PSoC5/USBFS.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG &= (uint32) ~USBFS_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG &= (uint32) ~USBFS_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBFS.c **** 
 240:Generated_Source\PSoC5/USBFS.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG = USBFS_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBFS.c **** 
 243:Generated_Source\PSoC5/USBFS.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBFS.c ****     USBFS_INTR_LVL_SEL_REG = USBFS_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBFS.c **** 
 246:Generated_Source\PSoC5/USBFS.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 6


 247:Generated_Source\PSoC5/USBFS.c ****     USBFS_INTR_SIE_MASK_REG = USBFS_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBFS.c **** 
 249:Generated_Source\PSoC5/USBFS.c **** #else
 250:Generated_Source\PSoC5/USBFS.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
  40              		.loc 1 250 0
  41 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  42              	.LVL0:
 251:Generated_Source\PSoC5/USBFS.c **** 
 252:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBFS.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBFS.c **** 
 256:Generated_Source\PSoC5/USBFS.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_ACT_CFG_REG |= USBFS_PM_ACT_EN_FSUSB;
  43              		.loc 1 257 0
  44 0006 3C4A     		ldr	r2, .L2
 258:Generated_Source\PSoC5/USBFS.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_STBY_CFG_REG |= USBFS_PM_STBY_EN_FSUSB;
 260:Generated_Source\PSoC5/USBFS.c **** 
 261:Generated_Source\PSoC5/USBFS.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBFS.c ****     USBFS_USB_CLK_EN_REG = USBFS_USB_CLK_ENABLE;
  45              		.loc 1 262 0
  46 0008 0125     		movs	r5, #1
 257:Generated_Source\PSoC5/USBFS.c ****     /* Enable USB block for Standby Power Mode. */
  47              		.loc 1 257 0
  48 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 263:Generated_Source\PSoC5/USBFS.c **** 
 264:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG = USBFS_CR1_ENABLE_LOCK;
  49              		.loc 1 264 0
  50 000c 0227     		movs	r7, #2
 257:Generated_Source\PSoC5/USBFS.c ****     /* Enable USB block for Standby Power Mode. */
  51              		.loc 1 257 0
  52 000e 43F00103 		orr	r3, r3, #1
  53 0012 1370     		strb	r3, [r2]
 259:Generated_Source\PSoC5/USBFS.c **** 
  54              		.loc 1 259 0
  55 0014 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
 265:Generated_Source\PSoC5/USBFS.c **** 
 266:Generated_Source\PSoC5/USBFS.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBFS.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR0_REG &= (uint8) ~USBFS_USBIO_CR0_TEN;
 269:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 270:Generated_Source\PSoC5/USBFS.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC5/USBFS.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBFS.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBFS.c ****     */
 274:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG &= (uint8) ~(USBFS_PM_USB_CR0_PD_N |
  56              		.loc 1 274 0
  57 0016 394C     		ldr	r4, .L2+4
 259:Generated_Source\PSoC5/USBFS.c **** 
  58              		.loc 1 259 0
  59 0018 43F00103 		orr	r3, r3, #1
  60 001c 1374     		strb	r3, [r2, #16]
 262:Generated_Source\PSoC5/USBFS.c **** 
  61              		.loc 1 262 0
  62 001e 384B     		ldr	r3, .L2+8
 268:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 7


  63              		.loc 1 268 0
  64 0020 02F5E352 		add	r2, r2, #7264
 262:Generated_Source\PSoC5/USBFS.c **** 
  65              		.loc 1 262 0
  66 0024 1D70     		strb	r5, [r3]
 268:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  67              		.loc 1 268 0
  68 0026 0B32     		adds	r2, r2, #11
 264:Generated_Source\PSoC5/USBFS.c **** 
  69              		.loc 1 264 0
  70 0028 03F8947C 		strb	r7, [r3, #-148]
 268:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  71              		.loc 1 268 0
  72 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 250:Generated_Source\PSoC5/USBFS.c **** 
  73              		.loc 1 250 0
  74 002e 0646     		mov	r6, r0
  75              	.LVL1:
 268:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  76              		.loc 1 268 0
  77 0030 03F07F03 		and	r3, r3, #127
  78 0034 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBFS.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
  79              		.loc 1 269 0
  80 0036 0020     		movs	r0, #0
  81 0038 FFF7FEFF 		bl	CyDelayUs
  82              	.LVL2:
  83              		.loc 1 274 0
  84 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 275:Generated_Source\PSoC5/USBFS.c ****                                                  USBFS_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBFS.c **** 
 277:Generated_Source\PSoC5/USBFS.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG &= (uint8) ~USBFS_USBIO_CR1_IOMODE;
  85              		.loc 1 278 0
  86 003e 314A     		ldr	r2, .L2+12
 274:Generated_Source\PSoC5/USBFS.c ****                                                  USBFS_PM_USB_CR0_PD_PULLUP_N);
  87              		.loc 1 274 0
  88 0040 03F0F903 		and	r3, r3, #249
  89 0044 2370     		strb	r3, [r4]
  90              		.loc 1 278 0
  91 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 279:Generated_Source\PSoC5/USBFS.c **** 
 280:Generated_Source\PSoC5/USBFS.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_REF_EN;
 282:Generated_Source\PSoC5/USBFS.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_REG_STABILITY_1US);
  92              		.loc 1 283 0
  93 0048 2846     		mov	r0, r5
 278:Generated_Source\PSoC5/USBFS.c **** 
  94              		.loc 1 278 0
  95 004a 03F0DF03 		and	r3, r3, #223
  96 004e 1370     		strb	r3, [r2]
 281:Generated_Source\PSoC5/USBFS.c ****     /* Reference is available for 1us after regulator is enabled. */
  97              		.loc 1 281 0
  98 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  99 0052 2B43     		orrs	r3, r3, r5
 100 0054 2370     		strb	r3, [r4]
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 8


 101              		.loc 1 283 0
 102 0056 FFF7FEFF 		bl	CyDelayUs
 103              	.LVL3:
 284:Generated_Source\PSoC5/USBFS.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_VREF_RESTORE);
 104              		.loc 1 285 0
 105 005a 2820     		movs	r0, #40
 106 005c FFF7FEFF 		bl	CyDelayUs
 107              	.LVL4:
 286:Generated_Source\PSoC5/USBFS.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBFS.c ****     USBFS_DM_INP_DIS_REG &= (uint8) ~USBFS_DM_MASK;
 108              		.loc 1 287 0
 109 0060 294B     		ldr	r3, .L2+16
 288:Generated_Source\PSoC5/USBFS.c ****     USBFS_DP_INP_DIS_REG &= (uint8) ~USBFS_DP_MASK;
 289:Generated_Source\PSoC5/USBFS.c **** 
 290:Generated_Source\PSoC5/USBFS.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_PD_N;
 292:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_PD_PULLUP_N_ENABLE);
 110              		.loc 1 292 0
 111 0062 3846     		mov	r0, r7
 287:Generated_Source\PSoC5/USBFS.c ****     USBFS_DP_INP_DIS_REG &= (uint8) ~USBFS_DP_MASK;
 112              		.loc 1 287 0
 113 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 114 0066 02F07F02 		and	r2, r2, #127
 115 006a 1A70     		strb	r2, [r3]
 288:Generated_Source\PSoC5/USBFS.c ****     USBFS_DP_INP_DIS_REG &= (uint8) ~USBFS_DP_MASK;
 116              		.loc 1 288 0
 117 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 118 006e 02F0BF02 		and	r2, r2, #191
 119 0072 1A70     		strb	r2, [r3]
 291:Generated_Source\PSoC5/USBFS.c ****     CyDelayUs(USBFS_WAIT_PD_PULLUP_N_ENABLE);
 120              		.loc 1 291 0
 121 0074 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 122 0076 3B43     		orrs	r3, r3, r7
 123 0078 2370     		strb	r3, [r4]
 124              		.loc 1 292 0
 125 007a FFF7FEFF 		bl	CyDelayUs
 126              	.LVL5:
 293:Generated_Source\PSoC5/USBFS.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_USB_CR0_REG |= USBFS_PM_USB_CR0_PD_PULLUP_N;
 127              		.loc 1 294 0
 128 007e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 295:Generated_Source\PSoC5/USBFS.c **** 
 296:Generated_Source\PSoC5/USBFS.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_ARB_RW1_WA_PTR,     0u);
 298:Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_ARB_RW1_WA_MSB_PTR, 0u);
 299:Generated_Source\PSoC5/USBFS.c **** 
 300:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBFS.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBFS.c ****     for (i = 0u; i < USBFS_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBFS.c ****     {
 304:Generated_Source\PSoC5/USBFS.c ****         USBFS_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBFS.c **** 
 306:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBFS.c ****         USBFS_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBFS.c ****     }
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 9


 310:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBFS.c **** 
 312:Generated_Source\PSoC5/USBFS.c ****     CyExitCriticalSection(enableInterrupts);
 129              		.loc 1 312 0
 130 0080 3046     		mov	r0, r6
 294:Generated_Source\PSoC5/USBFS.c **** 
 131              		.loc 1 294 0
 132 0082 43F00403 		orr	r3, r3, #4
 133 0086 2370     		strb	r3, [r4]
 297:Generated_Source\PSoC5/USBFS.c ****     CY_SET_REG8(USBFS_ARB_RW1_WA_MSB_PTR, 0u);
 134              		.loc 1 297 0
 135 0088 204B     		ldr	r3, .L2+20
 136 008a 0024     		movs	r4, #0
 137 008c 1C70     		strb	r4, [r3]
 298:Generated_Source\PSoC5/USBFS.c **** 
 138              		.loc 1 298 0
 139 008e 5C70     		strb	r4, [r3, #1]
 140              		.loc 1 312 0
 141 0090 FFF7FEFF 		bl	CyExitCriticalSection
 142              	.LVL6:
 313:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBFS.c **** 
 315:Generated_Source\PSoC5/USBFS.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBFS.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority     (USBFS_INTR_HI_VECT_NUM,  USBFS_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_INTR_HI_VECT_NUM, &USBFS_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBFS.c **** 
 321:Generated_Source\PSoC5/USBFS.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority     (USBFS_INTR_LO_VECT_NUM,  USBFS_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_INTR_LO_VECT_NUM, &USBFS_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBFS.c **** 
 325:Generated_Source\PSoC5/USBFS.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority     (USBFS_INTR_MED_VECT_NUM,  USBFS_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_INTR_MED_VECT_NUM, &USBFS_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBFS.c **** 
 329:Generated_Source\PSoC5/USBFS.c **** #else
 330:Generated_Source\PSoC5/USBFS.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority(USBFS_BUS_RESET_VECT_NUM, USBFS_BUS_RESET_PRIOR);
 143              		.loc 1 331 0
 144 0094 0721     		movs	r1, #7
 145 0096 1720     		movs	r0, #23
 146 0098 FFF7FEFF 		bl	CyIntSetPriority
 147              	.LVL7:
 332:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_BUS_RESET_VECT_NUM,   &USBFS_BUS_RESET_ISR);
 148              		.loc 1 332 0
 149 009c 1C49     		ldr	r1, .L2+24
 150 009e 1720     		movs	r0, #23
 151 00a0 FFF7FEFF 		bl	CyIntSetVector
 152              	.LVL8:
 333:Generated_Source\PSoC5/USBFS.c **** 
 334:Generated_Source\PSoC5/USBFS.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority(USBFS_EP_0_VECT_NUM, USBFS_EP_0_PRIOR);
 153              		.loc 1 335 0
 154 00a4 0721     		movs	r1, #7
 155 00a6 1820     		movs	r0, #24
 156 00a8 FFF7FEFF 		bl	CyIntSetPriority
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 10


 157              	.LVL9:
 336:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_EP_0_VECT_NUM,   &USBFS_EP_0_ISR);
 158              		.loc 1 336 0
 159 00ac 1949     		ldr	r1, .L2+28
 160 00ae 1820     		movs	r0, #24
 161 00b0 FFF7FEFF 		bl	CyIntSetVector
 162              	.LVL10:
 337:Generated_Source\PSoC5/USBFS.c **** 
 338:Generated_Source\PSoC5/USBFS.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_SOF_VECT_NUM,  USBFS_SOF_PRIOR);
 163              		.loc 1 340 0
 164 00b4 0721     		movs	r1, #7
 165 00b6 1520     		movs	r0, #21
 166 00b8 FFF7FEFF 		bl	CyIntSetPriority
 167              	.LVL11:
 341:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_SOF_VECT_NUM, &USBFS_SOF_ISR);
 168              		.loc 1 341 0
 169 00bc 1649     		ldr	r1, .L2+32
 170 00be 1520     		movs	r0, #21
 171 00c0 FFF7FEFF 		bl	CyIntSetVector
 172              	.LVL12:
 342:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBFS.c **** 
 344:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_1_VECT_NUM,  USBFS_EP_1_PRIOR);
 173              		.loc 1 346 0
 174 00c4 2046     		mov	r0, r4
 175 00c6 0721     		movs	r1, #7
 176 00c8 FFF7FEFF 		bl	CyIntSetPriority
 177              	.LVL13:
 347:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_1_VECT_NUM,  &USBFS_EP_1_ISR);
 178              		.loc 1 347 0
 179 00cc 1349     		ldr	r1, .L2+36
 180 00ce 2046     		mov	r0, r4
 181 00d0 FFF7FEFF 		bl	CyIntSetVector
 182              	.LVL14:
 348:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBFS.c **** 
 350:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_2_VECT_NUM,  USBFS_EP_2_PRIOR);
 183              		.loc 1 352 0
 184 00d4 2846     		mov	r0, r5
 185 00d6 0721     		movs	r1, #7
 186 00d8 FFF7FEFF 		bl	CyIntSetPriority
 187              	.LVL15:
 353:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_2_VECT_NUM, &USBFS_EP_2_ISR);
 188              		.loc 1 353 0
 189 00dc 1049     		ldr	r1, .L2+40
 190 00de 2846     		mov	r0, r5
 191 00e0 FFF7FEFF 		bl	CyIntSetVector
 192              	.LVL16:
 354:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBFS.c **** 
 356:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 3 Interrupt. */
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 11


 357:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_3_VECT_NUM,  USBFS_EP_3_PRIOR);
 359:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_3_VECT_NUM, &USBFS_EP_3_ISR);
 360:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBFS.c **** 
 362:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_4_VECT_NUM,  USBFS_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_4_VECT_NUM, &USBFS_EP_4_ISR);
 366:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBFS.c **** 
 368:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_5_VECT_NUM,  USBFS_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_5_VECT_NUM, &USBFS_EP_5_ISR);
 372:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBFS.c **** 
 374:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_6_VECT_NUM,  USBFS_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_6_VECT_NUM, &USBFS_EP_6_ISR);
 378:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBFS.c **** 
 380:Generated_Source\PSoC5/USBFS.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_7_VECT_NUM,  USBFS_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_7_VECT_NUM, &USBFS_EP_7_ISR);
 384:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USBFS.c **** 
 386:Generated_Source\PSoC5/USBFS.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_EP_8_VECT_NUM,  USBFS_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_EP_8_VECT_NUM, &USBFS_EP_8_ISR);
 390:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBFS.c **** 
 392:Generated_Source\PSoC5/USBFS.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBFS.c ****         CyIntSetPriority     (USBFS_ARB_VECT_NUM,  USBFS_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBFS.c ****         (void) CyIntSetVector(USBFS_ARB_VECT_NUM, &USBFS_ARB_ISR);
 396:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBFS.c **** 
 399:Generated_Source\PSoC5/USBFS.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBFS.c ****     CyIntSetPriority     (USBFS_DP_INTC_VECT_NUM,  USBFS_DP_INTC_PRIORITY);
 193              		.loc 1 401 0
 194 00e4 0721     		movs	r1, #7
 195 00e6 0C20     		movs	r0, #12
 196 00e8 FFF7FEFF 		bl	CyIntSetPriority
 197              	.LVL17:
 402:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_DP_INTC_VECT_NUM, &USBFS_DP_ISR);
 403:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBFS.c **** 
 405:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBFS.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBFS.c ****     USBFS_InitEpDma();
 408:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA && CY_PSOC4) */
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 12


 409:Generated_Source\PSoC5/USBFS.c **** }
 198              		.loc 1 409 0
 199 00ec BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 200              		.cfi_restore 14
 201              		.cfi_restore 7
 202              		.cfi_restore 6
 203              		.cfi_restore 5
 204              		.cfi_restore 4
 205              		.cfi_restore 3
 206              		.cfi_def_cfa_offset 0
 207              	.LVL18:
 402:Generated_Source\PSoC5/USBFS.c ****     (void) CyIntSetVector(USBFS_DP_INTC_VECT_NUM, &USBFS_DP_ISR);
 208              		.loc 1 402 0
 209 00f0 0C49     		ldr	r1, .L2+44
 210 00f2 0C20     		movs	r0, #12
 211 00f4 FFF7FEBF 		b	CyIntSetVector
 212              	.LVL19:
 213              	.L3:
 214              		.align	2
 215              	.L2:
 216 00f8 A5430040 		.word	1073759141
 217 00fc 94430040 		.word	1073759124
 218 0100 9D600040 		.word	1073766557
 219 0104 12600040 		.word	1073766418
 220 0108 F8510040 		.word	1073762808
 221 010c 84600040 		.word	1073766532
 222 0110 00000000 		.word	USBFS_BUS_RESET_ISR
 223 0114 00000000 		.word	USBFS_EP_0_ISR
 224 0118 00000000 		.word	USBFS_SOF_ISR
 225 011c 00000000 		.word	USBFS_EP_1_ISR
 226 0120 00000000 		.word	USBFS_EP_2_ISR
 227 0124 00000000 		.word	USBFS_DP_ISR
 228              		.cfi_endproc
 229              	.LFE1:
 230              		.size	USBFS_Init, .-USBFS_Init
 231              		.section	.text.USBFS_InitComponent,"ax",%progbits
 232              		.align	1
 233              		.global	USBFS_InitComponent
 234              		.thumb
 235              		.thumb_func
 236              		.type	USBFS_InitComponent, %function
 237              	USBFS_InitComponent:
 238              	.LFB2:
 410:Generated_Source\PSoC5/USBFS.c **** 
 411:Generated_Source\PSoC5/USBFS.c **** 
 412:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_InitComponent
 414:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBFS.c **** *
 416:Generated_Source\PSoC5/USBFS.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBFS.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBFS.c **** *
 419:Generated_Source\PSoC5/USBFS.c **** * \param device:
 420:Generated_Source\PSoC5/USBFS.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBFS.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBFS.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBFS.c **** *   field.
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 13


 424:Generated_Source\PSoC5/USBFS.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBFS.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBFS.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBFS.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBFS.c **** *   following list.
 429:Generated_Source\PSoC5/USBFS.c **** *
 430:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBFS.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBFS.c **** *
 433:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBFS.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBFS.c **** *
 436:Generated_Source\PSoC5/USBFS.c **** *       *USBFS_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBFS.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBFS.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBFS.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBFS.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBFS.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBFS.c **** *
 443:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 444:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_device
 445:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_transferState
 446:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_configuration
 447:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_deviceStatus
 448:Generated_Source\PSoC5/USBFS.c **** *
 449:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBFS.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBFS.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBFS.c **** *
 454:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBFS.c **** *
 456:Generated_Source\PSoC5/USBFS.c **** * \reentrant
 457:Generated_Source\PSoC5/USBFS.c **** *  No.
 458:Generated_Source\PSoC5/USBFS.c **** *
 459:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBFS.c **** void USBFS_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBFS.c **** {
 239              		.loc 1 461 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              	.LVL20:
 244 0000 08B5     		push	{r3, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 3, -8
 247              		.cfi_offset 14, -4
 462:Generated_Source\PSoC5/USBFS.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBFS.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBFS.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBFS.c ****     */
 466:Generated_Source\PSoC5/USBFS.c **** #if defined(USBFS_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBFS.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBFS.c **** 
 469:Generated_Source\PSoC5/USBFS.c ****     for (i = 0u; i < USBFS_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC5/USBFS.c ****     {
 471:Generated_Source\PSoC5/USBFS.c ****         USBFS_hidProtocol[i] = USBFS_PROTOCOL_REPORT;
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 14


 248              		.loc 1 471 0
 249 0002 1C4B     		ldr	r3, .L13
 250 0004 0122     		movs	r2, #1
 251 0006 1A70     		strb	r2, [r3]
 252              	.LVL21:
 472:Generated_Source\PSoC5/USBFS.c ****     }
 473:Generated_Source\PSoC5/USBFS.c **** #endif /* USBFS_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBFS.c **** 
 475:Generated_Source\PSoC5/USBFS.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBFS.c ****     USBFS_device = device;
 253              		.loc 1 476 0
 254 0008 1B4B     		ldr	r3, .L13+4
 255 000a 1870     		strb	r0, [r3]
 477:Generated_Source\PSoC5/USBFS.c **** 
 478:Generated_Source\PSoC5/USBFS.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBFS.c ****     USBFS_transferState   = USBFS_TRANS_STATE_IDLE;
 256              		.loc 1 479 0
 257 000c 1B48     		ldr	r0, .L13+8
 258              	.LVL22:
 259 000e 0023     		movs	r3, #0
 260              	.LVL23:
 261 0010 0370     		strb	r3, [r0]
 262              	.LVL24:
 480:Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 263              		.loc 1 480 0
 264 0012 1B48     		ldr	r0, .L13+12
 265 0014 0370     		strb	r3, [r0]
 481:Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration   = 0u;
 266              		.loc 1 481 0
 267 0016 1B48     		ldr	r0, .L13+16
 268 0018 0370     		strb	r3, [r0]
 482:Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 269              		.loc 1 482 0
 270 001a 1B48     		ldr	r0, .L13+20
 271 001c 0370     		strb	r3, [r0]
 483:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress   = 0u;
 272              		.loc 1 483 0
 273 001e 1B48     		ldr	r0, .L13+24
 274 0020 0370     		strb	r3, [r0]
 484:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus    = 0u;
 275              		.loc 1 484 0
 276 0022 1B48     		ldr	r0, .L13+28
 277 0024 0370     		strb	r3, [r0]
 485:Generated_Source\PSoC5/USBFS.c ****     USBFS_lastPacketSize  = 0u;
 278              		.loc 1 485 0
 279 0026 1B48     		ldr	r0, .L13+32
 280 0028 0370     		strb	r3, [r0]
 486:Generated_Source\PSoC5/USBFS.c **** 
 487:Generated_Source\PSoC5/USBFS.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBFS.c **** #else
 493:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_BUS_RESET_VECT_NUM);
 281              		.loc 1 493 0
 282 002a 1B4B     		ldr	r3, .L13+36
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 15


 283 002c 4FF40000 		mov	r0, #8388608
 284 0030 1860     		str	r0, [r3]
 494:Generated_Source\PSoC5/USBFS.c ****     CyIntEnable(USBFS_EP_0_VECT_NUM);
 285              		.loc 1 494 0
 286 0032 4FF08070 		mov	r0, #16777216
 287 0036 1860     		str	r0, [r3]
 495:Generated_Source\PSoC5/USBFS.c **** 
 496:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_SOF_VECT_NUM);
 288              		.loc 1 497 0
 289 0038 4FF40010 		mov	r0, #2097152
 290 003c 1860     		str	r0, [r3]
 498:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBFS.c **** 
 500:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_1_VECT_NUM);
 291              		.loc 1 501 0
 292 003e 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBFS.c **** 
 504:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_2_VECT_NUM);
 293              		.loc 1 505 0
 294 0040 0222     		movs	r2, #2
 295 0042 1A60     		str	r2, [r3]
 296 0044 154B     		ldr	r3, .L13+40
 506:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBFS.c **** 
 508:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_3_VECT_NUM);
 510:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBFS.c **** 
 512:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBFS.c **** 
 516:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBFS.c **** 
 520:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBFS.c ****     #endif /* USBFS_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBFS.c **** 
 524:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBFS.c **** 
 528:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBFS.c **** 
 533:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBFS.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBFS.c ****     USBFS_ARB_INT_EN_REG = USBFS_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 16


 537:Generated_Source\PSoC5/USBFS.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBFS.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBFS.c **** #endif   /* (USBFS_EP_MANAGEMENT_DMA && USBFS_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBFS.c **** 
 542:Generated_Source\PSoC5/USBFS.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBFS.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBFS.c ****     USBFS_ARB_CFG_REG = USBFS_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBFS.c **** 
 547:Generated_Source\PSoC5/USBFS.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBFS.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBFS.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBFS.c **** 
 551:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBFS.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBFS_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBFS.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBFS.c **** 
 557:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBFS.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBFS.c ****         #else
 562:Generated_Source\PSoC5/USBFS.c ****             #if (USBFS_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBFS.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP_DMA_Done_isr_StartEx(&USBFS_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBFS.c ****             #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBFS.c **** 
 572:Generated_Source\PSoC5/USBFS.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBFS.c ****     switch(mode)
 297              		.loc 1 573 0
 298 0046 19B9     		cbnz	r1, .L12
 574:Generated_Source\PSoC5/USBFS.c ****     {
 575:Generated_Source\PSoC5/USBFS.c ****     case USBFS_3V_OPERATION:
 576:Generated_Source\PSoC5/USBFS.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBFS.c ****         USBFS_CR1_REG &= (uint8) ~USBFS_CR1_REG_ENABLE;
 299              		.loc 1 577 0
 300 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 301 004a 02F0FE02 		and	r2, r2, #254
 302 004e 02E0     		b	.L10
 303              	.L12:
 578:Generated_Source\PSoC5/USBFS.c ****         break;
 579:Generated_Source\PSoC5/USBFS.c **** 
 580:Generated_Source\PSoC5/USBFS.c ****     case USBFS_5V_OPERATION:
 581:Generated_Source\PSoC5/USBFS.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBFS.c ****         USBFS_CR1_REG |= (uint8)  USBFS_CR1_REG_ENABLE;
 583:Generated_Source\PSoC5/USBFS.c ****         break;
 584:Generated_Source\PSoC5/USBFS.c **** 
 585:Generated_Source\PSoC5/USBFS.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_VDDD_MV < USBFS_3500MV)
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 17


 587:Generated_Source\PSoC5/USBFS.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBFS.c ****         USBFS_CR1_REG &= (uint8) ~USBFS_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBFS.c ****     #else
 590:Generated_Source\PSoC5/USBFS.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBFS.c ****         USBFS_CR1_REG |= (uint8)  USBFS_CR1_REG_ENABLE;
 304              		.loc 1 591 0
 305 0050 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 306 0052 42F00102 		orr	r2, r2, #1
 307              	.L10:
 308 0056 1A70     		strb	r2, [r3]
 592:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_VDDD_MV < USBFS_3500MV) */
 593:Generated_Source\PSoC5/USBFS.c ****         break;
 594:Generated_Source\PSoC5/USBFS.c ****     }
 595:Generated_Source\PSoC5/USBFS.c **** 
 596:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBFS.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG &= (uint32) ~USBFS_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBFS.c **** 
 600:Generated_Source\PSoC5/USBFS.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CNT_REG = USBFS_CLEAR_REG;
 602:Generated_Source\PSoC5/USBFS.c **** 
 603:Generated_Source\PSoC5/USBFS.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBFS.c **** 
 606:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBFS.c ****         if (NULL != USBFS_GetBOSPtr())
 608:Generated_Source\PSoC5/USBFS.c ****         {
 609:Generated_Source\PSoC5/USBFS.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBFS.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBFS.c ****             */
 612:Generated_Source\PSoC5/USBFS.c ****             USBFS_LPM_CTRL_REG = (USBFS_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBFS.c ****                                              USBFS_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBFS.c ****         }
 615:Generated_Source\PSoC5/USBFS.c ****         else
 616:Generated_Source\PSoC5/USBFS.c ****         {
 617:Generated_Source\PSoC5/USBFS.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBFS.c ****             USBFS_LPM_CTRL_REG &= (uint32) ~USBFS_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBFS.c ****         }
 620:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBFS.c **** 
 622:Generated_Source\PSoC5/USBFS.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG = USBFS_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBFS.c **** 
 625:Generated_Source\PSoC5/USBFS.c **** #else
 626:Generated_Source\PSoC5/USBFS.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_STALL_IN_OUT;
 309              		.loc 1 627 0
 310 0058 114B     		ldr	r3, .L13+44
 311 005a 0322     		movs	r2, #3
 312 005c 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBFS.c **** 
 629:Generated_Source\PSoC5/USBFS.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG = USBFS_DEFUALT_CR0;
 313              		.loc 1 630 0
 314 005e 8022     		movs	r2, #128
 315 0060 03F8202C 		strb	r2, [r3, #-32]
 631:Generated_Source\PSoC5/USBFS.c ****     CyDelayCycles(USBFS_WAIT_CR0_REG_STABILITY);
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 18


 316              		.loc 1 631 0
 317 0064 0120     		movs	r0, #1
 318 0066 FFF7FEFF 		bl	CyDelayCycles
 319              	.LVL25:
 632:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBFS.c **** 
 634:Generated_Source\PSoC5/USBFS.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG = USBFS_USBIO_CR1_USBPUEN;
 320              		.loc 1 635 0
 321 006a 0E4B     		ldr	r3, .L13+48
 322 006c 0422     		movs	r2, #4
 323 006e 1A70     		strb	r2, [r3]
 324 0070 08BD     		pop	{r3, pc}
 325              	.L14:
 326 0072 00BF     		.align	2
 327              	.L13:
 328 0074 00000000 		.word	USBFS_hidProtocol
 329 0078 00000000 		.word	USBFS_device
 330 007c 00000000 		.word	USBFS_transferState
 331 0080 00000000 		.word	USBFS_configurationChanged
 332 0084 00000000 		.word	USBFS_configuration
 333 0088 00000000 		.word	USBFS_interfaceNumber
 334 008c 00000000 		.word	USBFS_deviceAddress
 335 0090 00000000 		.word	USBFS_deviceStatus
 336 0094 00000000 		.word	USBFS_lastPacketSize
 337 0098 00E100E0 		.word	-536813312
 338 009c 09600040 		.word	1073766409
 339 00a0 28600040 		.word	1073766440
 340 00a4 12600040 		.word	1073766418
 341              		.cfi_endproc
 342              	.LFE2:
 343              		.size	USBFS_InitComponent, .-USBFS_InitComponent
 344              		.section	.text.USBFS_Start,"ax",%progbits
 345              		.align	1
 346              		.global	USBFS_Start
 347              		.thumb
 348              		.thumb_func
 349              		.type	USBFS_Start, %function
 350              	USBFS_Start:
 351              	.LFB0:
 187:Generated_Source\PSoC5/USBFS.c ****     if (0u == USBFS_initVar)
 352              		.loc 1 187 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356              	.LVL26:
 357 0000 70B5     		push	{r4, r5, r6, lr}
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 4, -16
 360              		.cfi_offset 5, -12
 361              		.cfi_offset 6, -8
 362              		.cfi_offset 14, -4
 188:Generated_Source\PSoC5/USBFS.c ****     {
 363              		.loc 1 188 0
 364 0002 074C     		ldr	r4, .L17
 187:Generated_Source\PSoC5/USBFS.c ****     if (0u == USBFS_initVar)
 365              		.loc 1 187 0
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 19


 366 0004 0546     		mov	r5, r0
 188:Generated_Source\PSoC5/USBFS.c ****     {
 367              		.loc 1 188 0
 368 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 187:Generated_Source\PSoC5/USBFS.c ****     if (0u == USBFS_initVar)
 369              		.loc 1 187 0
 370 0008 0E46     		mov	r6, r1
 188:Generated_Source\PSoC5/USBFS.c ****     {
 371              		.loc 1 188 0
 372 000a 1BB9     		cbnz	r3, .L16
 190:Generated_Source\PSoC5/USBFS.c ****         USBFS_initVar = 1u;
 373              		.loc 1 190 0
 374 000c FFF7FEFF 		bl	USBFS_Init
 375              	.LVL27:
 191:Generated_Source\PSoC5/USBFS.c ****     }
 376              		.loc 1 191 0
 377 0010 0123     		movs	r3, #1
 378 0012 2370     		strb	r3, [r4]
 379              	.L16:
 194:Generated_Source\PSoC5/USBFS.c **** }
 380              		.loc 1 194 0
 381 0014 3146     		mov	r1, r6
 382 0016 2846     		mov	r0, r5
 195:Generated_Source\PSoC5/USBFS.c **** 
 383              		.loc 1 195 0
 384 0018 BDE87040 		pop	{r4, r5, r6, lr}
 385              		.cfi_restore 14
 386              		.cfi_restore 6
 387              		.cfi_restore 5
 388              		.cfi_restore 4
 389              		.cfi_def_cfa_offset 0
 194:Generated_Source\PSoC5/USBFS.c **** }
 390              		.loc 1 194 0
 391 001c FFF7FEBF 		b	USBFS_InitComponent
 392              	.LVL28:
 393              	.L18:
 394              		.align	2
 395              	.L17:
 396 0020 00000000 		.word	.LANCHOR0
 397              		.cfi_endproc
 398              	.LFE0:
 399              		.size	USBFS_Start, .-USBFS_Start
 400              		.section	.text.USBFS_ReInitComponent,"ax",%progbits
 401              		.align	1
 402              		.global	USBFS_ReInitComponent
 403              		.thumb
 404              		.thumb_func
 405              		.type	USBFS_ReInitComponent, %function
 406              	USBFS_ReInitComponent:
 407              	.LFB3:
 636:Generated_Source\PSoC5/USBFS.c **** }
 637:Generated_Source\PSoC5/USBFS.c **** 
 638:Generated_Source\PSoC5/USBFS.c **** 
 639:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_ReInitComponent
 641:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBFS.c **** *
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 20


 643:Generated_Source\PSoC5/USBFS.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBFS.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBFS.c **** *
 646:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 647:Generated_Source\PSoC5/USBFS.c **** *   USBFS_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBFS.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBFS.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBFS.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBFS.c **** *   USBFS_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBFS.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBFS.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBFS.c **** *   USBFS_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBFS.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBFS.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBFS.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBFS.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBFS.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBFS.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBFS.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBFS.c **** *   USBFS_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBFS.c **** *
 667:Generated_Source\PSoC5/USBFS.c **** * \reentrant
 668:Generated_Source\PSoC5/USBFS.c **** *  No.
 669:Generated_Source\PSoC5/USBFS.c **** *
 670:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBFS.c **** void USBFS_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBFS.c **** {
 408              		.loc 1 672 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 413              	.LVL29:
 673:Generated_Source\PSoC5/USBFS.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBFS.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBFS.c ****     */
 676:Generated_Source\PSoC5/USBFS.c **** #if defined(USBFS_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBFS.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBFS.c **** 
 679:Generated_Source\PSoC5/USBFS.c ****     for (i = 0u; i < USBFS_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC5/USBFS.c ****     {
 681:Generated_Source\PSoC5/USBFS.c ****         USBFS_hidProtocol[i] = USBFS_PROTOCOL_REPORT;
 414              		.loc 1 681 0
 415 0000 0C4B     		ldr	r3, .L20
 416 0002 0122     		movs	r2, #1
 417 0004 1A70     		strb	r2, [r3]
 418              	.LVL30:
 682:Generated_Source\PSoC5/USBFS.c ****     }
 683:Generated_Source\PSoC5/USBFS.c **** #endif /* USBFS_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBFS.c **** 
 685:Generated_Source\PSoC5/USBFS.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBFS.c ****     USBFS_transferState   = USBFS_TRANS_STATE_IDLE;
 419              		.loc 1 686 0
 420 0006 0C4A     		ldr	r2, .L20+4
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 21


 421 0008 0023     		movs	r3, #0
 422 000a 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 423              		.loc 1 687 0
 424 000c 0B4A     		ldr	r2, .L20+8
 425 000e 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration   = 0u;
 426              		.loc 1 688 0
 427 0010 0B4A     		ldr	r2, .L20+12
 428 0012 1370     		strb	r3, [r2]
 689:Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 429              		.loc 1 689 0
 430 0014 0B4A     		ldr	r2, .L20+16
 431 0016 1370     		strb	r3, [r2]
 690:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress   = 0u;
 432              		.loc 1 690 0
 433 0018 0B4A     		ldr	r2, .L20+20
 434 001a 1370     		strb	r3, [r2]
 691:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus    = 0u;
 435              		.loc 1 691 0
 436 001c 0B4A     		ldr	r2, .L20+24
 437 001e 1370     		strb	r3, [r2]
 692:Generated_Source\PSoC5/USBFS.c ****     USBFS_lastPacketSize  = 0u;
 438              		.loc 1 692 0
 439 0020 0B4A     		ldr	r2, .L20+28
 440 0022 1370     		strb	r3, [r2]
 693:Generated_Source\PSoC5/USBFS.c **** 
 694:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBFS.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBFS.c **** #else
 698:Generated_Source\PSoC5/USBFS.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBFS.c ****     USBFS_EP0_CR_REG = USBFS_MODE_STALL_IN_OUT;
 441              		.loc 1 699 0
 442 0024 0B4B     		ldr	r3, .L20+32
 443 0026 0322     		movs	r2, #3
 444 0028 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBFS.c **** 
 702:Generated_Source\PSoC5/USBFS.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG = USBFS_DEFUALT_CR0;
 445              		.loc 1 703 0
 446 002a 8022     		movs	r2, #128
 447 002c 03F8202C 		strb	r2, [r3, #-32]
 448 0030 7047     		bx	lr
 449              	.L21:
 450 0032 00BF     		.align	2
 451              	.L20:
 452 0034 00000000 		.word	USBFS_hidProtocol
 453 0038 00000000 		.word	USBFS_transferState
 454 003c 00000000 		.word	USBFS_configurationChanged
 455 0040 00000000 		.word	USBFS_configuration
 456 0044 00000000 		.word	USBFS_interfaceNumber
 457 0048 00000000 		.word	USBFS_deviceAddress
 458 004c 00000000 		.word	USBFS_deviceStatus
 459 0050 00000000 		.word	USBFS_lastPacketSize
 460 0054 28600040 		.word	1073766440
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 22


 461              		.cfi_endproc
 462              	.LFE3:
 463              		.size	USBFS_ReInitComponent, .-USBFS_ReInitComponent
 464              		.section	.text.USBFS_Stop,"ax",%progbits
 465              		.align	1
 466              		.global	USBFS_Stop
 467              		.thumb
 468              		.thumb_func
 469              		.type	USBFS_Stop, %function
 470              	USBFS_Stop:
 471              	.LFB4:
 704:Generated_Source\PSoC5/USBFS.c **** }
 705:Generated_Source\PSoC5/USBFS.c **** 
 706:Generated_Source\PSoC5/USBFS.c **** 
 707:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Stop
 709:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBFS.c **** *
 711:Generated_Source\PSoC5/USBFS.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBFS.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBFS.c **** *
 714:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 715:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_configuration
 716:Generated_Source\PSoC5/USBFS.c **** *
 717:Generated_Source\PSoC5/USBFS.c **** *   USBFS_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBFS.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBFS.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBFS.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBFS.c **** *
 722:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_deviceStatus
 723:Generated_Source\PSoC5/USBFS.c **** *
 724:Generated_Source\PSoC5/USBFS.c **** *   \ref USBFS_configurationChanged
 725:Generated_Source\PSoC5/USBFS.c **** *
 726:Generated_Source\PSoC5/USBFS.c **** *   USBFS_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBFS.c **** *
 728:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBFS.c **** void USBFS_Stop(void) 
 730:Generated_Source\PSoC5/USBFS.c **** {
 472              		.loc 1 730 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476 0000 08B5     		push	{r3, lr}
 477              		.cfi_def_cfa_offset 8
 478              		.cfi_offset 3, -8
 479              		.cfi_offset 14, -4
 731:Generated_Source\PSoC5/USBFS.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBFS.c **** 
 733:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBFS.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBFS.c ****     USBFS_Stop_DMA(USBFS_MAX_EP);
 736:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBFS.c **** 
 738:Generated_Source\PSoC5/USBFS.c ****     enableInterrupts = CyEnterCriticalSection();
 480              		.loc 1 738 0
 481 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 482              	.LVL31:
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 23


 739:Generated_Source\PSoC5/USBFS.c **** 
 740:Generated_Source\PSoC5/USBFS.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR0_REG &= (uint8) ~USBFS_CR0_ENABLE;
 483              		.loc 1 741 0
 484 0006 204A     		ldr	r2, .L23
 485 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 486 000a 03F07F03 		and	r3, r3, #127
 487 000e 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBFS.c **** 
 743:Generated_Source\PSoC5/USBFS.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR1_REG &= (uint8) ~ USBFS_USBIO_CR1_USBPUEN;
 488              		.loc 1 744 0
 489 0010 937A     		ldrb	r3, [r2, #10]	@ zero_extendqisi2
 490 0012 03F0FB03 		and	r3, r3, #251
 491 0016 9372     		strb	r3, [r2, #10]
 745:Generated_Source\PSoC5/USBFS.c **** 
 746:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBFS.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBFS.c ****     USBFS_POWER_CTRL_REG &= (uint32) ~USBFS_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBFS.c **** #else
 750:Generated_Source\PSoC5/USBFS.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_ACT_CFG_REG  &= (uint8) ~USBFS_PM_ACT_EN_FSUSB;
 492              		.loc 1 751 0
 493 0018 A2F5E352 		sub	r2, r2, #7264
 494 001c 033A     		subs	r2, r2, #3
 495 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 496 0020 03F0FE03 		and	r3, r3, #254
 497 0024 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBFS.c ****     USBFS_PM_STBY_CFG_REG &= (uint8) ~USBFS_PM_STBY_EN_FSUSB;
 498              		.loc 1 752 0
 499 0026 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
 500 0028 03F0FE03 		and	r3, r3, #254
 501 002c 1374     		strb	r3, [r2, #16]
 753:Generated_Source\PSoC5/USBFS.c **** 
 754:Generated_Source\PSoC5/USBFS.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBFS.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBFS.c ****     USBFS_DM_INP_DIS_REG |= (uint8) USBFS_DM_MASK;
 502              		.loc 1 756 0
 503 002e 174B     		ldr	r3, .L23+4
 504 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 505 0032 42F08002 		orr	r2, r2, #128
 506 0036 1A70     		strb	r2, [r3]
 757:Generated_Source\PSoC5/USBFS.c ****     USBFS_DP_INP_DIS_REG |= (uint8) USBFS_DP_MASK;
 507              		.loc 1 757 0
 508 0038 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 509 003a 42F04002 		orr	r2, r2, #64
 510 003e 1A70     		strb	r2, [r3]
 758:Generated_Source\PSoC5/USBFS.c **** 
 759:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBFS.c **** 
 761:Generated_Source\PSoC5/USBFS.c ****     CyExitCriticalSection(enableInterrupts);
 511              		.loc 1 761 0
 512 0040 FFF7FEFF 		bl	CyExitCriticalSection
 513              	.LVL32:
 762:Generated_Source\PSoC5/USBFS.c **** 
 763:Generated_Source\PSoC5/USBFS.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 24


 765:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBFS.c **** #else
 769:Generated_Source\PSoC5/USBFS.c **** 
 770:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_BUS_RESET_VECT_NUM);
 514              		.loc 1 770 0
 515 0044 124B     		ldr	r3, .L23+8
 516 0046 4FF40002 		mov	r2, #8388608
 517 004a 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBFS.c ****     CyIntDisable(USBFS_EP_0_VECT_NUM);
 518              		.loc 1 771 0
 519 004c 4FF08072 		mov	r2, #16777216
 520 0050 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBFS.c **** 
 773:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_SOF_VECT_NUM);
 521              		.loc 1 774 0
 522 0052 4FF40012 		mov	r2, #2097152
 523 0056 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBFS.c **** 
 777:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_1_VECT_NUM);
 524              		.loc 1 778 0
 525 0058 0122     		movs	r2, #1
 526 005a 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBFS.c **** 
 781:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_2_VECT_NUM);
 527              		.loc 1 782 0
 528 005c 0222     		movs	r2, #2
 529 005e 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBFS.c **** 
 785:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_3_VECT_NUM);
 787:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBFS.c **** 
 789:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBFS.c **** 
 793:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBFS.c **** 
 797:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBFS.c ****     #endif /* USBFS_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBFS.c **** 
 801:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBFS.c **** 
 805:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP8_ISR_ACTIVE)
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 25


 806:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBFS.c **** 
 809:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBFS.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBFS.c ****         (void) USBFS_Dp_ClearInterrupt();
 530              		.loc 1 811 0
 531 0060 FFF7FEFF 		bl	USBFS_Dp_ClearInterrupt
 532              	.LVL33:
 812:Generated_Source\PSoC5/USBFS.c ****         CyIntClearPending(USBFS_DP_INTC_VECT_NUM);
 533              		.loc 1 812 0
 534 0064 0B4B     		ldr	r3, .L23+12
 535 0066 4FF48052 		mov	r2, #4096
 536 006a 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBFS.c **** 
 815:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBFS.c **** 
 817:Generated_Source\PSoC5/USBFS.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBFS.c ****     USBFS_configurationChanged = 0u;
 537              		.loc 1 818 0
 538 006c 0A4A     		ldr	r2, .L23+16
 539 006e 0023     		movs	r3, #0
 540 0070 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC5/USBFS.c ****     USBFS_configuration   = 0u;
 541              		.loc 1 819 0
 542 0072 0A4A     		ldr	r2, .L23+20
 543 0074 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC5/USBFS.c ****     USBFS_interfaceNumber = 0u;
 544              		.loc 1 820 0
 545 0076 0A4A     		ldr	r2, .L23+24
 546 0078 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceAddress   = 0u;
 547              		.loc 1 821 0
 548 007a 0A4A     		ldr	r2, .L23+28
 549 007c 1370     		strb	r3, [r2]
 822:Generated_Source\PSoC5/USBFS.c ****     USBFS_deviceStatus    = 0u;
 550              		.loc 1 822 0
 551 007e 0A4A     		ldr	r2, .L23+32
 552 0080 1370     		strb	r3, [r2]
 823:Generated_Source\PSoC5/USBFS.c **** 
 824:Generated_Source\PSoC5/USBFS.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBFS.c ****     USBFS_initVar = 0u;
 553              		.loc 1 825 0
 554 0082 0A4A     		ldr	r2, .L23+36
 555 0084 1370     		strb	r3, [r2]
 556 0086 08BD     		pop	{r3, pc}
 557              	.L24:
 558              		.align	2
 559              	.L23:
 560 0088 08600040 		.word	1073766408
 561 008c F8510040 		.word	1073762808
 562 0090 80E100E0 		.word	-536813184
 563 0094 80E200E0 		.word	-536812928
 564 0098 00000000 		.word	USBFS_configurationChanged
 565 009c 00000000 		.word	USBFS_configuration
 566 00a0 00000000 		.word	USBFS_interfaceNumber
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 26


 567 00a4 00000000 		.word	USBFS_deviceAddress
 568 00a8 00000000 		.word	USBFS_deviceStatus
 569 00ac 00000000 		.word	.LANCHOR0
 570              		.cfi_endproc
 571              	.LFE4:
 572              		.size	USBFS_Stop, .-USBFS_Stop
 573              		.section	.text.USBFS_CheckActivity,"ax",%progbits
 574              		.align	1
 575              		.global	USBFS_CheckActivity
 576              		.thumb
 577              		.thumb_func
 578              		.type	USBFS_CheckActivity, %function
 579              	USBFS_CheckActivity:
 580              	.LFB5:
 826:Generated_Source\PSoC5/USBFS.c **** }
 827:Generated_Source\PSoC5/USBFS.c **** 
 828:Generated_Source\PSoC5/USBFS.c **** 
 829:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_CheckActivity
 831:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBFS.c **** *
 833:Generated_Source\PSoC5/USBFS.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBFS.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBFS.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBFS.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBFS.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBFS.c **** *
 839:Generated_Source\PSoC5/USBFS.c **** *
 840:Generated_Source\PSoC5/USBFS.c **** * \return
 841:Generated_Source\PSoC5/USBFS.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBFS.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBFS.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBFS.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBFS.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBFS.c **** *
 847:Generated_Source\PSoC5/USBFS.c **** *
 848:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBFS.c **** {
 581              		.loc 1 850 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 851:Generated_Source\PSoC5/USBFS.c ****     uint8 cr1Reg = USBFS_CR1_REG;
 586              		.loc 1 851 0
 587 0000 044B     		ldr	r3, .L26
 588 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 589 0004 C0B2     		uxtb	r0, r0
 590              	.LVL34:
 852:Generated_Source\PSoC5/USBFS.c **** 
 853:Generated_Source\PSoC5/USBFS.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBFS.c ****     USBFS_CR1_REG = (cr1Reg & (uint8) ~USBFS_CR1_BUS_ACTIVITY);
 591              		.loc 1 854 0
 592 0006 00F0FB02 		and	r2, r0, #251
 593 000a 1A70     		strb	r2, [r3]
 855:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 27


 856:Generated_Source\PSoC5/USBFS.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBFS.c ****     return ((0u != (cr1Reg & USBFS_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 858:Generated_Source\PSoC5/USBFS.c **** }
 594              		.loc 1 858 0
 595 000c C0F38000 		ubfx	r0, r0, #2, #1
 596              	.LVL35:
 597 0010 7047     		bx	lr
 598              	.L27:
 599 0012 00BF     		.align	2
 600              	.L26:
 601 0014 09600040 		.word	1073766409
 602              		.cfi_endproc
 603              	.LFE5:
 604              		.size	USBFS_CheckActivity, .-USBFS_CheckActivity
 605              		.section	.text.USBFS_GetConfiguration,"ax",%progbits
 606              		.align	1
 607              		.global	USBFS_GetConfiguration
 608              		.thumb
 609              		.thumb_func
 610              		.type	USBFS_GetConfiguration, %function
 611              	USBFS_GetConfiguration:
 612              	.LFB6:
 859:Generated_Source\PSoC5/USBFS.c **** 
 860:Generated_Source\PSoC5/USBFS.c **** 
 861:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetConfiguration
 863:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBFS.c **** *
 865:Generated_Source\PSoC5/USBFS.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBFS.c **** *
 867:Generated_Source\PSoC5/USBFS.c **** * \return
 868:Generated_Source\PSoC5/USBFS.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBFS.c **** *  is not configured
 870:Generated_Source\PSoC5/USBFS.c **** *
 871:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBFS.c **** {
 613              		.loc 1 873 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 874:Generated_Source\PSoC5/USBFS.c ****     return (USBFS_configuration);
 618              		.loc 1 874 0
 619 0000 014B     		ldr	r3, .L29
 620 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 875:Generated_Source\PSoC5/USBFS.c **** }
 621              		.loc 1 875 0
 622 0004 7047     		bx	lr
 623              	.L30:
 624 0006 00BF     		.align	2
 625              	.L29:
 626 0008 00000000 		.word	USBFS_configuration
 627              		.cfi_endproc
 628              	.LFE6:
 629              		.size	USBFS_GetConfiguration, .-USBFS_GetConfiguration
 630              		.section	.text.USBFS_IsConfigurationChanged,"ax",%progbits
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 28


 631              		.align	1
 632              		.global	USBFS_IsConfigurationChanged
 633              		.thumb
 634              		.thumb_func
 635              		.type	USBFS_IsConfigurationChanged, %function
 636              	USBFS_IsConfigurationChanged:
 637              	.LFB7:
 876:Generated_Source\PSoC5/USBFS.c **** 
 877:Generated_Source\PSoC5/USBFS.c **** 
 878:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBFS.c **** *
 882:Generated_Source\PSoC5/USBFS.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBFS.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBFS.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBFS.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBFS.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBFS.c **** *
 888:Generated_Source\PSoC5/USBFS.c **** * \return
 889:Generated_Source\PSoC5/USBFS.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBFS.c **** *  returned.
 891:Generated_Source\PSoC5/USBFS.c **** *
 892:Generated_Source\PSoC5/USBFS.c **** * \globalvars
 893:Generated_Source\PSoC5/USBFS.c **** *
 894:Generated_Source\PSoC5/USBFS.c **** *  \ref USBFS_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBFS.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBFS.c **** *
 897:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBFS.c **** {
 638              		.loc 1 899 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
 642              		@ link register save eliminated.
 643              	.LVL36:
 900:Generated_Source\PSoC5/USBFS.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC5/USBFS.c **** 
 902:Generated_Source\PSoC5/USBFS.c ****     if (USBFS_configurationChanged != 0u)
 644              		.loc 1 902 0
 645 0000 044B     		ldr	r3, .L34
 646 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 647 0004 02F0FF00 		and	r0, r2, #255
 648 0008 1AB1     		cbz	r2, .L32
 903:Generated_Source\PSoC5/USBFS.c ****     {
 904:Generated_Source\PSoC5/USBFS.c ****         res = USBFS_configurationChanged;
 649              		.loc 1 904 0
 650 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 905:Generated_Source\PSoC5/USBFS.c ****         USBFS_configurationChanged = 0u;
 651              		.loc 1 905 0
 652 000c 0022     		movs	r2, #0
 904:Generated_Source\PSoC5/USBFS.c ****         USBFS_configurationChanged = 0u;
 653              		.loc 1 904 0
 654 000e C0B2     		uxtb	r0, r0
 655              	.LVL37:
 656              		.loc 1 905 0
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 29


 657 0010 1A70     		strb	r2, [r3]
 658              	.LVL38:
 659              	.L32:
 906:Generated_Source\PSoC5/USBFS.c ****     }
 907:Generated_Source\PSoC5/USBFS.c **** 
 908:Generated_Source\PSoC5/USBFS.c ****     return (res);
 909:Generated_Source\PSoC5/USBFS.c **** }
 660              		.loc 1 909 0
 661 0012 7047     		bx	lr
 662              	.L35:
 663              		.align	2
 664              	.L34:
 665 0014 00000000 		.word	USBFS_configurationChanged
 666              		.cfi_endproc
 667              	.LFE7:
 668              		.size	USBFS_IsConfigurationChanged, .-USBFS_IsConfigurationChanged
 669              		.section	.text.USBFS_GetInterfaceSetting,"ax",%progbits
 670              		.align	1
 671              		.global	USBFS_GetInterfaceSetting
 672              		.thumb
 673              		.thumb_func
 674              		.type	USBFS_GetInterfaceSetting, %function
 675              	USBFS_GetInterfaceSetting:
 676              	.LFB8:
 910:Generated_Source\PSoC5/USBFS.c **** 
 911:Generated_Source\PSoC5/USBFS.c **** 
 912:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBFS.c **** *
 916:Generated_Source\PSoC5/USBFS.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBFS.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBFS.c **** *  interface.
 919:Generated_Source\PSoC5/USBFS.c **** *
 920:Generated_Source\PSoC5/USBFS.c **** *  \param
 921:Generated_Source\PSoC5/USBFS.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBFS.c **** *
 923:Generated_Source\PSoC5/USBFS.c **** * \return
 924:Generated_Source\PSoC5/USBFS.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBFS.c **** *
 926:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBFS.c **** uint8  USBFS_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBFS.c ****                                                     
 929:Generated_Source\PSoC5/USBFS.c **** {
 677              		.loc 1 929 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682              	.LVL39:
 930:Generated_Source\PSoC5/USBFS.c ****     return (USBFS_interfaceSetting[interfaceNumber]);
 683              		.loc 1 930 0
 684 0000 014B     		ldr	r3, .L37
 685 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 686              	.LVL40:
 931:Generated_Source\PSoC5/USBFS.c **** }
 687              		.loc 1 931 0
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 30


 688 0004 7047     		bx	lr
 689              	.L38:
 690 0006 00BF     		.align	2
 691              	.L37:
 692 0008 00000000 		.word	USBFS_interfaceSetting
 693              		.cfi_endproc
 694              	.LFE8:
 695              		.size	USBFS_GetInterfaceSetting, .-USBFS_GetInterfaceSetting
 696              		.section	.text.USBFS_GetEPState,"ax",%progbits
 697              		.align	1
 698              		.global	USBFS_GetEPState
 699              		.thumb
 700              		.thumb_func
 701              		.type	USBFS_GetEPState, %function
 702              	USBFS_GetEPState:
 703              	.LFB9:
 932:Generated_Source\PSoC5/USBFS.c **** 
 933:Generated_Source\PSoC5/USBFS.c **** 
 934:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPState
 936:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBFS.c **** *
 938:Generated_Source\PSoC5/USBFS.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBFS.c **** *
 940:Generated_Source\PSoC5/USBFS.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBFS.c **** *
 942:Generated_Source\PSoC5/USBFS.c **** * \return
 943:Generated_Source\PSoC5/USBFS.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBFS.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBFS.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBFS.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBFS.c **** *
 948:Generated_Source\PSoC5/USBFS.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBFS.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBFS.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBFS.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBFS.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBFS.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBFS.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBFS.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBFS.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBFS.c **** *
 958:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBFS.c **** {
 704              		.loc 1 960 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 0
 707              		@ frame_needed = 0, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709              	.LVL41:
 961:Generated_Source\PSoC5/USBFS.c ****     return (USBFS_EP[epNumber].apiEpState);
 710              		.loc 1 961 0
 711 0000 024A     		ldr	r2, .L40
 712 0002 0C23     		movs	r3, #12
 713 0004 03FB0020 		mla	r0, r3, r0, r2
 714              	.LVL42:
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 31


 715 0008 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 962:Generated_Source\PSoC5/USBFS.c **** }
 716              		.loc 1 962 0
 717 000a 7047     		bx	lr
 718              	.L41:
 719              		.align	2
 720              	.L40:
 721 000c 00000000 		.word	USBFS_EP
 722              		.cfi_endproc
 723              	.LFE9:
 724              		.size	USBFS_GetEPState, .-USBFS_GetEPState
 725              		.section	.text.USBFS_GetEPCount,"ax",%progbits
 726              		.align	1
 727              		.global	USBFS_GetEPCount
 728              		.thumb
 729              		.thumb_func
 730              		.type	USBFS_GetEPCount, %function
 731              	USBFS_GetEPCount:
 732              	.LFB10:
 963:Generated_Source\PSoC5/USBFS.c **** 
 964:Generated_Source\PSoC5/USBFS.c **** 
 965:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPCount
 967:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBFS.c **** *
 969:Generated_Source\PSoC5/USBFS.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBFS.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBFS.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBFS.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBFS.c **** *
 974:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBFS.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBFS.c **** *
 977:Generated_Source\PSoC5/USBFS.c **** * \return
 978:Generated_Source\PSoC5/USBFS.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBFS.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBFS.c **** *
 981:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBFS.c **** uint16 USBFS_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBFS.c **** {
 733              		.loc 1 983 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              		@ link register save eliminated.
 738              	.LVL43:
 984:Generated_Source\PSoC5/USBFS.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC5/USBFS.c **** 
 986:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 739              		.loc 1 986 0
 740 0000 431E     		subs	r3, r0, #1
 741 0002 072B     		cmp	r3, #7
 742 0004 0CD8     		bhi	.L44
 743              	.LVL44:
 744              	.LBB4:
 745              	.LBB5:
 987:Generated_Source\PSoC5/USBFS.c ****     {
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 32


 988:Generated_Source\PSoC5/USBFS.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBFS.c ****         cntr  = ((uint16) USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBFS_EPX_CNT0_MASK;
 746              		.loc 1 989 0
 747 0006 074A     		ldr	r2, .L45
 748 0008 064B     		ldr	r3, .L45
 749 000a 0001     		lsls	r0, r0, #4
 750              	.LVL45:
 751 000c 0344     		add	r3, r3, r0
 752 000e 805C     		ldrb	r0, [r0, r2]	@ zero_extendqisi2
 753              	.LVL46:
 990:Generated_Source\PSoC5/USBFS.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 754              		.loc 1 990 0
 755 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 756 0012 00F00F00 		and	r0, r0, #15
 757              	.LVL47:
 991:Generated_Source\PSoC5/USBFS.c ****         cntr -= USBFS_EPX_CNTX_CRC_COUNT;
 758              		.loc 1 991 0
 759 0016 43EA0020 		orr	r0, r3, r0, lsl #8
 760              	.LVL48:
 761 001a 0238     		subs	r0, r0, #2
 762 001c 80B2     		uxth	r0, r0
 763              	.LVL49:
 764 001e 7047     		bx	lr
 765              	.LVL50:
 766              	.L44:
 767              	.LBE5:
 768              	.LBE4:
 984:Generated_Source\PSoC5/USBFS.c **** 
 769              		.loc 1 984 0
 770 0020 0020     		movs	r0, #0
 771              	.LVL51:
 992:Generated_Source\PSoC5/USBFS.c ****     }
 993:Generated_Source\PSoC5/USBFS.c **** 
 994:Generated_Source\PSoC5/USBFS.c ****     return (cntr);
 995:Generated_Source\PSoC5/USBFS.c **** }
 772              		.loc 1 995 0
 773 0022 7047     		bx	lr
 774              	.L46:
 775              		.align	2
 776              	.L45:
 777 0024 FC5F0040 		.word	1073766396
 778              		.cfi_endproc
 779              	.LFE10:
 780              		.size	USBFS_GetEPCount, .-USBFS_GetEPCount
 781              		.section	.text.USBFS_LoadInEP,"ax",%progbits
 782              		.align	1
 783              		.global	USBFS_LoadInEP
 784              		.thumb
 785              		.thumb_func
 786              		.type	USBFS_LoadInEP, %function
 787              	USBFS_LoadInEP:
 788              	.LFB11:
 996:Generated_Source\PSoC5/USBFS.c **** 
 997:Generated_Source\PSoC5/USBFS.c **** 
 998:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBFS.c ****     /*******************************************************************************
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 33


1001:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_InitEpDma
1002:Generated_Source\PSoC5/USBFS.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBFS.c ****     *
1004:Generated_Source\PSoC5/USBFS.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBFS.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBFS.c ****     *
1007:Generated_Source\PSoC5/USBFS.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBFS.c ****     static void USBFS_InitEpDma(void)
1009:Generated_Source\PSoC5/USBFS.c ****     {
1010:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep1_dma_CHANNEL] = USBFS_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBFS.c **** 
1014:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep2_dma_CHANNEL] = USBFS_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBFS.c **** 
1018:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep3_dma_CHANNEL] = USBFS_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBFS.c **** 
1022:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep4_dma_CHANNEL] = USBFS_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBFS.c **** 
1026:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep5_dma_CHANNEL] = USBFS_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBFS.c **** 
1030:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep6_dma_CHANNEL] = USBFS_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBFS.c **** 
1034:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep7_dma_CHANNEL] = USBFS_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBFS.c **** 
1038:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBFS.c ****         CYDMA_CH_CTL_BASE.ctl[USBFS_ep8_dma_CHANNEL] = USBFS_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBFS.c **** 
1042:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBFS.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep1_dma_SetInterruptCallback(&USBFS_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBFS.c **** 
1048:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep2_dma_SetInterruptCallback(&USBFS_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBFS.c **** 
1052:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep3_dma_SetInterruptCallback(&USBFS_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBFS.c **** 
1056:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep4_dma_SetInterruptCallback(&USBFS_EP4_DMA_DONE_ISR);
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 34


1058:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBFS.c **** 
1060:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep5_dma_SetInterruptCallback(&USBFS_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBFS.c **** 
1064:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep6_dma_SetInterruptCallback(&USBFS_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBFS.c **** 
1068:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep7_dma_SetInterruptCallback(&USBFS_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBFS.c **** 
1072:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBFS.c ****             (void) USBFS_ep8_dma_SetInterruptCallback(&USBFS_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBFS.c ****     }
1077:Generated_Source\PSoC5/USBFS.c **** #else
1078:Generated_Source\PSoC5/USBFS.c **** 
1079:Generated_Source\PSoC5/USBFS.c **** 
1080:Generated_Source\PSoC5/USBFS.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_InitEP_DMA
1082:Generated_Source\PSoC5/USBFS.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBFS.c ****     *
1084:Generated_Source\PSoC5/USBFS.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBFS.c ****     *  USBFS_LoadInEP() or USBFS_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBFS.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBFS.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBFS.c ****     *
1089:Generated_Source\PSoC5/USBFS.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBFS.c ****     *
1091:Generated_Source\PSoC5/USBFS.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBFS.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBFS.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBFS.c ****     *
1095:Generated_Source\PSoC5/USBFS.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBFS.c ****     *
1097:Generated_Source\PSoC5/USBFS.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBFS.c ****     void USBFS_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBFS.c ****                                                                     
1100:Generated_Source\PSoC5/USBFS.c ****     {
1101:Generated_Source\PSoC5/USBFS.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBFS.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBFS.c **** 
1104:Generated_Source\PSoC5/USBFS.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBFS.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBFS.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBFS.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBFS.c ****     #else
1109:Generated_Source\PSoC5/USBFS.c ****         if ((USBFS_EP[epNumber].addr & USBFS_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBFS.c ****         {
1111:Generated_Source\PSoC5/USBFS.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBFS.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBFS.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBFS.c ****         }
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 35


1115:Generated_Source\PSoC5/USBFS.c ****         else
1116:Generated_Source\PSoC5/USBFS.c ****         {
1117:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBFS.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBFS.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USBFS.c ****         }
1121:Generated_Source\PSoC5/USBFS.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBFS.c **** 
1123:Generated_Source\PSoC5/USBFS.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBFS.c ****         {
1125:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP1:
1127:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaChan[epNumber] = USBFS_ep1_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBFS.c ****                                                                                     USBFS_DMA_REQUE
1129:Generated_Source\PSoC5/USBFS.c ****             break;
1130:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBFS.c **** 
1132:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP2:
1134:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaChan[epNumber] = USBFS_ep2_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBFS.c ****                                                                                     USBFS_DMA_REQUE
1136:Generated_Source\PSoC5/USBFS.c ****             break;
1137:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBFS.c **** 
1139:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP3:
1141:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep3_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1143:Generated_Source\PSoC5/USBFS.c ****             break;
1144:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBFS.c **** 
1146:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP4:
1148:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep4_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1150:Generated_Source\PSoC5/USBFS.c ****             break;
1151:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBFS.c **** 
1153:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBFS.c ****             case USBFS_EP5:
1155:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep5_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1157:Generated_Source\PSoC5/USBFS.c ****             break;
1158:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBFS.c **** 
1160:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP6:
1162:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaChan[epNumber] = USBFS_ep6_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBFS.c ****                                                                                     USBFS_DMA_REQUE
1164:Generated_Source\PSoC5/USBFS.c ****             break;
1165:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBFS.c **** 
1167:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP7:
1169:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep7_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1171:Generated_Source\PSoC5/USBFS.c ****             break;
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 36


1172:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBFS.c **** 
1174:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBFS.c ****         case USBFS_EP8:
1176:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaChan[epNumber] = USBFS_ep8_DmaInitialize(USBFS_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBFS.c ****                                                                                         USBFS_DMA_R
1178:Generated_Source\PSoC5/USBFS.c ****             break;
1179:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBFS.c **** 
1181:Generated_Source\PSoC5/USBFS.c ****         default:
1182:Generated_Source\PSoC5/USBFS.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBFS.c ****             break;
1184:Generated_Source\PSoC5/USBFS.c ****         }
1185:Generated_Source\PSoC5/USBFS.c **** 
1186:Generated_Source\PSoC5/USBFS.c ****         if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
1187:Generated_Source\PSoC5/USBFS.c ****         {
1188:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBFS.c **** 
1190:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBFS.c ****         }
1194:Generated_Source\PSoC5/USBFS.c ****     }
1195:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBFS.c **** 
1197:Generated_Source\PSoC5/USBFS.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_Stop_DMA
1199:Generated_Source\PSoC5/USBFS.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBFS.c ****     *  
1201:Generated_Source\PSoC5/USBFS.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBFS.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBFS.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBFS.c ****     *  to trigger DMA re-configuration when USBFS_LoadInEP() or 
1205:Generated_Source\PSoC5/USBFS.c ****     *  USBFS_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBFS.c ****     *  
1207:Generated_Source\PSoC5/USBFS.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBFS.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBFS.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBFS.c ****     *  USBFS_MAX_EP argument.
1211:Generated_Source\PSoC5/USBFS.c ****     *
1212:Generated_Source\PSoC5/USBFS.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBFS.c ****     *  No.
1214:Generated_Source\PSoC5/USBFS.c ****     *
1215:Generated_Source\PSoC5/USBFS.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBFS.c ****     void USBFS_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBFS.c ****     {
1218:Generated_Source\PSoC5/USBFS.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBFS.c **** 
1220:Generated_Source\PSoC5/USBFS.c ****         i = (epNumber < USBFS_MAX_EP) ? epNumber : USBFS_EP1;
1221:Generated_Source\PSoC5/USBFS.c **** 
1222:Generated_Source\PSoC5/USBFS.c ****         do
1223:Generated_Source\PSoC5/USBFS.c ****         {
1224:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBFS.c ****             if (0u != USBFS_DmaChan[i])
1226:Generated_Source\PSoC5/USBFS.c ****             {
1227:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(USBFS_DmaChan[i]);
1228:Generated_Source\PSoC5/USBFS.c ****             }
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 37


1229:Generated_Source\PSoC5/USBFS.c ****         #else
1230:Generated_Source\PSoC5/USBFS.c ****             if(USBFS_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBFS.c ****             {
1232:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[i]);
1233:Generated_Source\PSoC5/USBFS.c ****                 CyDmaTdFree(USBFS_DmaTd[i]);
1234:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBFS.c ****             }
1236:Generated_Source\PSoC5/USBFS.c **** 
1237:Generated_Source\PSoC5/USBFS.c ****             #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBFS.c ****                 if(USBFS_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBFS.c ****                 {
1240:Generated_Source\PSoC5/USBFS.c ****                     CyDmaTdFree(USBFS_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBFS.c ****                 }
1243:Generated_Source\PSoC5/USBFS.c ****             #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBFS.c **** 
1245:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBFS.c ****             i++;
1247:Generated_Source\PSoC5/USBFS.c ****         }
1248:Generated_Source\PSoC5/USBFS.c ****         while ((i < USBFS_MAX_EP) && (epNumber == USBFS_MAX_EP));
1249:Generated_Source\PSoC5/USBFS.c ****     }
1250:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBFS.c **** 
1252:Generated_Source\PSoC5/USBFS.c **** 
1253:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBFS.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_LoadNextInEP
1257:Generated_Source\PSoC5/USBFS.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBFS.c ****     *
1259:Generated_Source\PSoC5/USBFS.c ****     * Summary:
1260:Generated_Source\PSoC5/USBFS.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBFS.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBFS.c ****     *
1263:Generated_Source\PSoC5/USBFS.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBFS.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBFS.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBFS.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBFS.c ****     *
1268:Generated_Source\PSoC5/USBFS.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBFS.c ****     void USBFS_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBFS.c ****     {
1271:Generated_Source\PSoC5/USBFS.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBFS.c **** 
1273:Generated_Source\PSoC5/USBFS.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBFS.c ****         {
1275:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBFS.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert, USBFS_inLength[epNumber] - USBFS_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert, LO16((uint32)USBFS_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBFS.c ****                                             USBFS_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBFS.c ****             USBFS_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBFS.c ****         }
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 38


1286:Generated_Source\PSoC5/USBFS.c ****         else
1287:Generated_Source\PSoC5/USBFS.c ****         {
1288:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBFS.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert, USBFS_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBFS.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBFS.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBFS_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBFS.c ****             CY_SET_REG16(convert,  LO16((uint32)USBFS_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBFS.c ****                                    (USBFS_DMA_BYTES_PER_BURST - USBFS_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBFS.c ****         }
1298:Generated_Source\PSoC5/USBFS.c **** 
1299:Generated_Source\PSoC5/USBFS.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBFS.c ****         CY_DMA_CH_STRUCT_PTR[USBFS_DmaChan[epNumber]].basic_status[1u] = USBFS_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBFS.c ****     }
1302:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO && (USBFS_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBFS.c **** 
1305:Generated_Source\PSoC5/USBFS.c **** 
1306:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_LoadInEP
1308:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBFS.c **** *
1310:Generated_Source\PSoC5/USBFS.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBFS.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBFS.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBFS.c **** *
1314:Generated_Source\PSoC5/USBFS.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBFS.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBFS.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBFS.c **** *
1318:Generated_Source\PSoC5/USBFS.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBFS.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBFS.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBFS.c **** *
1322:Generated_Source\PSoC5/USBFS.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBFS.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBFS.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBFS.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBFS.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBFS.c **** *
1328:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBFS.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBFS.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBFS.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBFS.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBFS.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBFS.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBFS.c **** *
1337:Generated_Source\PSoC5/USBFS.c **** *
1338:Generated_Source\PSoC5/USBFS.c **** * \reentrant
1339:Generated_Source\PSoC5/USBFS.c **** *  No.
1340:Generated_Source\PSoC5/USBFS.c **** *
1341:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBFS.c **** void USBFS_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 39


1343:Generated_Source\PSoC5/USBFS.c ****                                                                         
1344:Generated_Source\PSoC5/USBFS.c **** {
 789              		.loc 1 1344 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              	.LVL52:
1345:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 794              		.loc 1 1345 0
 795 0000 431E     		subs	r3, r0, #1
 796 0002 072B     		cmp	r3, #7
1344:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 797              		.loc 1 1344 0
 798 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 799              		.cfi_def_cfa_offset 20
 800              		.cfi_offset 4, -20
 801              		.cfi_offset 5, -16
 802              		.cfi_offset 6, -12
 803              		.cfi_offset 7, -8
 804              		.cfi_offset 14, -4
 805              		.loc 1 1345 0
 806 0006 31D8     		bhi	.L47
1346:Generated_Source\PSoC5/USBFS.c ****     {
1347:Generated_Source\PSoC5/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBFS.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBFS.c ****         if (length > (USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset))
 807              		.loc 1 1349 0
 808 0008 194B     		ldr	r3, .L54
 809 000a 0C25     		movs	r5, #12
 810 000c 05FB0035 		mla	r5, r5, r0, r3
 811 0010 EC88     		ldrh	r4, [r5, #6]
1350:Generated_Source\PSoC5/USBFS.c ****         {
1351:Generated_Source\PSoC5/USBFS.c ****             length = USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset;
1352:Generated_Source\PSoC5/USBFS.c ****         }
1353:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBFS.c **** 
1355:Generated_Source\PSoC5/USBFS.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBFS_EP[epNumber].epToggl
 812              		.loc 1 1356 0
 813 0012 184F     		ldr	r7, .L54+4
1349:Generated_Source\PSoC5/USBFS.c ****         {
 814              		.loc 1 1349 0
 815 0014 A4B2     		uxth	r4, r4
 816 0016 C4F50074 		rsb	r4, r4, #512
 817 001a A242     		cmp	r2, r4
 818              		.loc 1 1356 0
 819 001c 4FF00C04 		mov	r4, #12
 820 0020 04FB0034 		mla	r4, r4, r0, r3
1351:Generated_Source\PSoC5/USBFS.c ****         }
 821              		.loc 1 1351 0
 822 0024 88BF     		it	hi
 823 0026 EA88     		ldrhhi	r2, [r5, #6]
 824              	.LVL53:
 825              		.loc 1 1356 0
 826 0028 E678     		ldrb	r6, [r4, #3]	@ zero_extendqisi2
1351:Generated_Source\PSoC5/USBFS.c ****         }
 827              		.loc 1 1351 0
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 40


 828 002a 84BF     		itt	hi
 829 002c C2F50072 		rsbhi	r2, r2, #512
 830 0030 92B2     		uxthhi	r2, r2
 831              	.LVL54:
 832 0032 104C     		ldr	r4, .L54+4
 833              		.loc 1 1356 0
 834 0034 46EA1226 		orr	r6, r6, r2, lsr #8
 835 0038 0501     		lsls	r5, r0, #4
 836 003a EE55     		strb	r6, [r5, r7]
 837 003c 2C44     		add	r4, r4, r5
1357:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 838              		.loc 1 1357 0
 839 003e D6B2     		uxtb	r6, r2
 840 0040 6670     		strb	r6, [r4, #1]
1358:Generated_Source\PSoC5/USBFS.c **** 
1359:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBFS.c ****         if (NULL != pData)
 841              		.loc 1 1360 0
 842 0042 41B9     		cbnz	r1, .L50
 843              	.L53:
1361:Generated_Source\PSoC5/USBFS.c ****         {
1362:Generated_Source\PSoC5/USBFS.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBFS.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC5/USBFS.c ****             {
1366:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
1367:Generated_Source\PSoC5/USBFS.c ****             }
1368:Generated_Source\PSoC5/USBFS.c ****         }
1369:Generated_Source\PSoC5/USBFS.c **** 
1370:Generated_Source\PSoC5/USBFS.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
 844              		.loc 1 1371 0
 845 0044 0C22     		movs	r2, #12
 846              	.LVL55:
 847 0046 02FB0030 		mla	r0, r2, r0, r3
 848              	.LVL56:
 849 004a 0023     		movs	r3, #0
 850 004c 4370     		strb	r3, [r0, #1]
1372:Generated_Source\PSoC5/USBFS.c **** 
1373:Generated_Source\PSoC5/USBFS.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
 851              		.loc 1 1374 0
 852 004e 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 853 0050 DBB2     		uxtb	r3, r3
 854 0052 A370     		strb	r3, [r4, #2]
 855 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 856              	.LVL57:
 857              	.L50:
1360:Generated_Source\PSoC5/USBFS.c ****         {
 858              		.loc 1 1360 0
 859 0056 0E46     		mov	r6, r1
 860              	.LBB6:
1366:Generated_Source\PSoC5/USBFS.c ****             }
 861              		.loc 1 1366 0
 862 0058 074F     		ldr	r7, .L54+8
 863 005a 2F44     		add	r7, r7, r5
 864              	.L51:
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 41


 865              	.LVL58:
1364:Generated_Source\PSoC5/USBFS.c ****             {
 866              		.loc 1 1364 0 discriminator 1
 867 005c 751A     		subs	r5, r6, r1
 868 005e ADB2     		uxth	r5, r5
 869 0060 AA42     		cmp	r2, r5
 870 0062 EFD9     		bls	.L53
1366:Generated_Source\PSoC5/USBFS.c ****             }
 871              		.loc 1 1366 0 discriminator 3
 872 0064 16F8015B 		ldrb	r5, [r6], #1	@ zero_extendqisi2
 873              	.LVL59:
 874 0068 3D72     		strb	r5, [r7, #8]
 875              	.LVL60:
 876 006a F7E7     		b	.L51
 877              	.LVL61:
 878              	.L47:
 879 006c F0BD     		pop	{r4, r5, r6, r7, pc}
 880              	.L55:
 881 006e 00BF     		.align	2
 882              	.L54:
 883 0070 00000000 		.word	USBFS_EP
 884 0074 FC5F0040 		.word	1073766396
 885 0078 70600040 		.word	1073766512
 886              	.LBE6:
 887              		.cfi_endproc
 888              	.LFE11:
 889              		.size	USBFS_LoadInEP, .-USBFS_LoadInEP
 890              		.section	.text.USBFS_EnableOutEP,"ax",%progbits
 891              		.align	1
 892              		.global	USBFS_EnableOutEP
 893              		.thumb
 894              		.thumb_func
 895              		.type	USBFS_EnableOutEP, %function
 896              	USBFS_EnableOutEP:
 897              	.LFB13:
1375:Generated_Source\PSoC5/USBFS.c **** 
1376:Generated_Source\PSoC5/USBFS.c ****     #else
1377:Generated_Source\PSoC5/USBFS.c **** 
1378:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBFS.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBFS.c ****             if (DMA_INVALID_TD == USBFS_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBFS.c ****             {
1382:Generated_Source\PSoC5/USBFS.c ****                 USBFS_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBFS.c ****             }
1384:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBFS.c **** 
1386:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBFS.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBFS.c ****             USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBFS.c **** 
1390:Generated_Source\PSoC5/USBFS.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USBFS.c ****             {
1392:Generated_Source\PSoC5/USBFS.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBFS.c **** 
1395:Generated_Source\PSoC5/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 42


1397:Generated_Source\PSoC5/USBFS.c **** 
1398:Generated_Source\PSoC5/USBFS.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.a
1401:Generated_Source\PSoC5/USBFS.c **** 
1402:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBFS.c ****                 --length;
1404:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | le
1405:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBFS.c **** 
1407:Generated_Source\PSoC5/USBFS.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBFS.c **** 
1410:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBFS.c ****             #else
1413:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD
1416:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) pData), LO16((uint32)
1417:Generated_Source\PSoC5/USBFS.c **** 
1418:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBFS.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBFS.c **** 
1423:Generated_Source\PSoC5/USBFS.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBFS_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBFS_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBFS.c **** 
1427:Generated_Source\PSoC5/USBFS.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBFS.c ****             }
1429:Generated_Source\PSoC5/USBFS.c ****             else
1430:Generated_Source\PSoC5/USBFS.c ****             {
1431:Generated_Source\PSoC5/USBFS.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBFS.c ****                 USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBFS.c ****             }
1434:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBFS.c **** 
1436:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBFS.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBFS.c ****             {
1439:Generated_Source\PSoC5/USBFS.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBFS.c **** 
1442:Generated_Source\PSoC5/USBFS.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBFS.c **** 
1445:Generated_Source\PSoC5/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBFS.c **** 
1448:Generated_Source\PSoC5/USBFS.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.a
1450:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP_BASE.a
1451:Generated_Source\PSoC5/USBFS.c **** 
1452:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  |
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 43


1454:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBFS.c **** 
1456:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  |
1458:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBFS.c **** 
1460:Generated_Source\PSoC5/USBFS.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBFS.c **** 
1463:Generated_Source\PSoC5/USBFS.c **** 
1464:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBFS.c **** 
1467:Generated_Source\PSoC5/USBFS.c ****             #else
1468:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBFS.c **** 
1470:Generated_Source\PSoC5/USBFS.c ****                 #if (USBFS_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBFS.c ****                     USBFS_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBFS.c ****                     USBFS_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBFS.c **** 
1474:Generated_Source\PSoC5/USBFS.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBFS.c ****                         (length > USBFS_DMA_BYTES_PER_BURST) ? USBFS_DMA_BYTES_PER_BURST : length,
1477:Generated_Source\PSoC5/USBFS.c ****                         USBFS_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBFS.c ****                                                                                LO16((uint32) &USBFS
1480:Generated_Source\PSoC5/USBFS.c **** 
1481:Generated_Source\PSoC5/USBFS.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBFS.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBFS.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBFS.c ****                     */
1485:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetConfiguration(USBFS_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBFS.c ****                                                    USBFS_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBFS.c ****                                                    USBFS_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBFS.c **** 
1489:Generated_Source\PSoC5/USBFS.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaNextTd[epNumber], LO16((uint32) &clearInDataR
1491:Generated_Source\PSoC5/USBFS.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBFS.c ****                 #else
1493:Generated_Source\PSoC5/USBFS.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBFS.c ****                                                    USBFS_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_SRC
1496:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBFS.c ****                                                                                LO16((uint32) &USBFS
1498:Generated_Source\PSoC5/USBFS.c ****                 #endif /* (USBFS_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBFS.c **** 
1500:Generated_Source\PSoC5/USBFS.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBFS.c ****                 (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBFS.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBFS.c ****             }
1507:Generated_Source\PSoC5/USBFS.c ****             else
1508:Generated_Source\PSoC5/USBFS.c ****             {
1509:Generated_Source\PSoC5/USBFS.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 44


1511:Generated_Source\PSoC5/USBFS.c **** 
1512:Generated_Source\PSoC5/USBFS.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBFS.c ****                 {
1514:Generated_Source\PSoC5/USBFS.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBFS.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBFS.c ****                     uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBFS.c **** 
1518:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_DMA_BYTES_PER_BURST);
1520:Generated_Source\PSoC5/USBFS.c **** 
1521:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_DMA_BYTES_PER_BURST)
1523:Generated_Source\PSoC5/USBFS.c **** 
1524:Generated_Source\PSoC5/USBFS.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u 
1526:Generated_Source\PSoC5/USBFS.c **** 
1527:Generated_Source\PSoC5/USBFS.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
1529:Generated_Source\PSoC5/USBFS.c ****                                                                           (USBFS_DmaEpLastBurstEl[e
1530:Generated_Source\PSoC5/USBFS.c ****                                                                           (USBFS_DMA_BYTES_PER_BURS
1531:Generated_Source\PSoC5/USBFS.c **** 
1532:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBFS.c ****                     lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
1534:Generated_Source\PSoC5/USBFS.c ****                     lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
1535:Generated_Source\PSoC5/USBFS.c **** 
1536:Generated_Source\PSoC5/USBFS.c **** 
1537:Generated_Source\PSoC5/USBFS.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1
1539:Generated_Source\PSoC5/USBFS.c ****                                                                             USBFS_DMA_DESCR0_MASK :
1540:Generated_Source\PSoC5/USBFS.c **** 
1541:Generated_Source\PSoC5/USBFS.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBFS.c **** 
1544:Generated_Source\PSoC5/USBFS.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
1546:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
1547:Generated_Source\PSoC5/USBFS.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBFS.c **** 
1549:Generated_Source\PSoC5/USBFS.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBFS.c **** 
1553:Generated_Source\PSoC5/USBFS.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBFS.c **** 
1557:Generated_Source\PSoC5/USBFS.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBFS.c ****                     if (USBFS_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBFS.c ****                     {
1560:Generated_Source\PSoC5/USBFS.c ****                         USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBFS.c ****                     }                   
1562:Generated_Source\PSoC5/USBFS.c **** 
1563:Generated_Source\PSoC5/USBFS.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epN
1565:Generated_Source\PSoC5/USBFS.c **** 
1566:Generated_Source\PSoC5/USBFS.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaChEnable(channelNum);
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 45


1568:Generated_Source\PSoC5/USBFS.c **** 
1569:Generated_Source\PSoC5/USBFS.c ****                 #elif (USBFS_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBFS.c ****                     USBFS_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBFS.c ****                     USBFS_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBFS.c **** 
1573:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBFS.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBFS.c ****                         USBFS_DmaTd[epNumber], (length > USBFS_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBFS.c ****                         USBFS_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBFS.c ****                         USBFS_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32)  USBFS_inDataPoin
1580:Generated_Source\PSoC5/USBFS.c ****                                                                                LO16((uint32) &USBFS
1581:Generated_Source\PSoC5/USBFS.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBFS.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBFS.c ****                     (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBFS.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBFS.c **** 
1588:Generated_Source\PSoC5/USBFS.c ****                 #if !defined (USBFS_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBFS.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBFS.c ****                     USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBFS.c ****                 #endif  /* (USBFS_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBFS.c **** 
1593:Generated_Source\PSoC5/USBFS.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBFS.c ****                 }
1595:Generated_Source\PSoC5/USBFS.c ****                 else
1596:Generated_Source\PSoC5/USBFS.c ****                 {
1597:Generated_Source\PSoC5/USBFS.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBFS.c ****                     USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBFS.c ****                 }
1600:Generated_Source\PSoC5/USBFS.c ****             }
1601:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBFS.c ****     }
1604:Generated_Source\PSoC5/USBFS.c **** }
1605:Generated_Source\PSoC5/USBFS.c **** 
1606:Generated_Source\PSoC5/USBFS.c **** 
1607:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_ReadOutEP
1609:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBFS.c **** *
1611:Generated_Source\PSoC5/USBFS.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBFS.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBFS.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBFS.c **** *
1615:Generated_Source\PSoC5/USBFS.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBFS.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBFS.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBFS.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBFS.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBFS.c **** *
1621:Generated_Source\PSoC5/USBFS.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBFS.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBFS.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBFS.c **** *   transfer after calling the USBFS_ReadOutEP() API. For example,
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 46


1625:Generated_Source\PSoC5/USBFS.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBFS.c **** *
1627:Generated_Source\PSoC5/USBFS.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBFS.c **** *
1629:Generated_Source\PSoC5/USBFS.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBFS.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBFS.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBFS.c **** *
1633:Generated_Source\PSoC5/USBFS.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBFS.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBFS.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBFS.c **** *
1637:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBFS.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBFS.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBFS.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBFS.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBFS.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBFS.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBFS.c **** *
1646:Generated_Source\PSoC5/USBFS.c **** * \return
1647:Generated_Source\PSoC5/USBFS.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBFS.c **** *
1649:Generated_Source\PSoC5/USBFS.c **** * \reentrant
1650:Generated_Source\PSoC5/USBFS.c **** *  No.
1651:Generated_Source\PSoC5/USBFS.c **** *
1652:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBFS.c **** uint16 USBFS_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBFS.c ****                                                                         
1655:Generated_Source\PSoC5/USBFS.c **** {
1656:Generated_Source\PSoC5/USBFS.c ****     if ((pData != NULL) && (epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
1657:Generated_Source\PSoC5/USBFS.c ****     {
1658:Generated_Source\PSoC5/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBFS.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBFS.c ****         length = (length > USBFS_GetEPCount(epNumber)) ? USBFS_GetEPCount(epNumber) : length;
1661:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBFS.c **** 
1663:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBFS.c ****         {
1665:Generated_Source\PSoC5/USBFS.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBFS.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC5/USBFS.c ****             {
1669:Generated_Source\PSoC5/USBFS.c ****                 pData[i] = (uint8) USBFS_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC5/USBFS.c ****             }
1671:Generated_Source\PSoC5/USBFS.c ****         }
1672:Generated_Source\PSoC5/USBFS.c **** 
1673:Generated_Source\PSoC5/USBFS.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBFS.c ****         USBFS_EnableOutEP(epNumber);
1675:Generated_Source\PSoC5/USBFS.c ****     #else
1676:Generated_Source\PSoC5/USBFS.c **** 
1677:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBFS.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBFS.c ****             if (DMA_INVALID_TD == USBFS_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBFS.c ****             {
1681:Generated_Source\PSoC5/USBFS.c ****                 USBFS_InitEP_DMA(epNumber, pData);
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 47


1682:Generated_Source\PSoC5/USBFS.c ****             }
1683:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBFS.c **** 
1685:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBFS.c ****         {
1688:Generated_Source\PSoC5/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBFS.c **** 
1690:Generated_Source\PSoC5/USBFS.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBFS.c **** 
1693:Generated_Source\PSoC5/USBFS.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.arbEp
1695:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBFS.c **** 
1697:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | (uint1
1699:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBFS.c **** 
1701:Generated_Source\PSoC5/USBFS.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBFS.c **** 
1704:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBFS.c ****         }
1707:Generated_Source\PSoC5/USBFS.c ****         #else
1708:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_TER
1711:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) &USBFS_ARB_EP_BASE.arbEp[
1712:Generated_Source\PSoC5/USBFS.c **** 
1713:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBFS.c **** 
1718:Generated_Source\PSoC5/USBFS.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBFS_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBFS_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBFS.c **** 
1722:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBFS.c ****             */
1725:Generated_Source\PSoC5/USBFS.c **** 
1726:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBFS.c **** 
1728:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBFS.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBFS.c ****         {
1731:Generated_Source\PSoC5/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBFS.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBFS.c **** 
1734:Generated_Source\PSoC5/USBFS.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBFS.c **** 
1737:Generated_Source\PSoC5/USBFS.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_DMA_BYTES_PER_BURST);
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 48


1739:Generated_Source\PSoC5/USBFS.c **** 
1740:Generated_Source\PSoC5/USBFS.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u : 0u;
1742:Generated_Source\PSoC5/USBFS.c **** 
1743:Generated_Source\PSoC5/USBFS.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBFS.c ****                                                                   (USBFS_DmaEpLastBurstEl[epNumber]
1746:Generated_Source\PSoC5/USBFS.c ****                                                                   (USBFS_DMA_BYTES_PER_BURST - 1u);
1747:Generated_Source\PSoC5/USBFS.c **** 
1748:Generated_Source\PSoC5/USBFS.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBFS.c ****             lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
1750:Generated_Source\PSoC5/USBFS.c ****             lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
1751:Generated_Source\PSoC5/USBFS.c **** 
1752:Generated_Source\PSoC5/USBFS.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (USBFS_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_DMA_DE
1754:Generated_Source\PSoC5/USBFS.c **** 
1755:Generated_Source\PSoC5/USBFS.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1u)) ?
1757:Generated_Source\PSoC5/USBFS.c ****                                                                     USBFS_DMA_DESCR0_MASK : USBFS_D
1758:Generated_Source\PSoC5/USBFS.c **** 
1759:Generated_Source\PSoC5/USBFS.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCntBackup[epNumber]   = USBFS_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBFS.c **** 
1763:Generated_Source\PSoC5/USBFS.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epNumber]);
1765:Generated_Source\PSoC5/USBFS.c **** 
1766:Generated_Source\PSoC5/USBFS.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBFS.c **** 
1769:Generated_Source\PSoC5/USBFS.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP_BASE.arbEp
1771:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP_BASE.arbEp
1772:Generated_Source\PSoC5/USBFS.c **** 
1773:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) pData + USBFS_
1775:Generated_Source\PSoC5/USBFS.c **** 
1776:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  | lengt
1778:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBFS.c **** 
1780:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  | lengt
1782:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBFS.c **** 
1784:Generated_Source\PSoC5/USBFS.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBFS.c **** 
1787:Generated_Source\PSoC5/USBFS.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBFS.c **** 
1790:Generated_Source\PSoC5/USBFS.c ****             if (USBFS_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBFS.c ****             {
1792:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBFS.c ****             }
1794:Generated_Source\PSoC5/USBFS.c **** 
1795:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel: configuration complete. */
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 49


1796:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBFS.c ****         }
1798:Generated_Source\PSoC5/USBFS.c ****         #else
1799:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChDisable(USBFS_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetConfiguration(USBFS_DmaTd[epNumber], length,  USBFS_DmaTd[epNumber], T
1801:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaTdSetAddress(USBFS_DmaTd[epNumber], LO16((uint32) &USBFS_ARB_EP_BASE.arbEp[
1802:Generated_Source\PSoC5/USBFS.c **** 
1803:Generated_Source\PSoC5/USBFS.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaClearPendingDrq(USBFS_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBFS.c **** 
1806:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChSetInitialTd(USBFS_DmaChan[epNumber], USBFS_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBFS.c ****             (void) CyDmaChEnable(USBFS_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBFS.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBFS.c **** 
1811:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBFS.c ****             */
1814:Generated_Source\PSoC5/USBFS.c **** 
1815:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBFS.c ****     }
1818:Generated_Source\PSoC5/USBFS.c ****     else
1819:Generated_Source\PSoC5/USBFS.c ****     {
1820:Generated_Source\PSoC5/USBFS.c ****         length = 0u;
1821:Generated_Source\PSoC5/USBFS.c ****     }
1822:Generated_Source\PSoC5/USBFS.c **** 
1823:Generated_Source\PSoC5/USBFS.c ****     return (length);
1824:Generated_Source\PSoC5/USBFS.c **** }
1825:Generated_Source\PSoC5/USBFS.c **** 
1826:Generated_Source\PSoC5/USBFS.c **** 
1827:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_LoadInEP16
1830:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBFS.c **** *
1832:Generated_Source\PSoC5/USBFS.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBFS.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBFS.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBFS.c **** *
1836:Generated_Source\PSoC5/USBFS.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBFS.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBFS.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBFS.c **** *
1840:Generated_Source\PSoC5/USBFS.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBFS.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBFS.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBFS.c **** *
1844:Generated_Source\PSoC5/USBFS.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBFS.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBFS.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBFS.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBFS.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBFS.c **** *
1850:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBFS.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBFS.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 50


1853:Generated_Source\PSoC5/USBFS.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBFS.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBFS.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBFS.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBFS.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBFS.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBFS.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBFS.c **** *
1861:Generated_Source\PSoC5/USBFS.c **** * \reentrant
1862:Generated_Source\PSoC5/USBFS.c **** *  No.
1863:Generated_Source\PSoC5/USBFS.c **** *
1864:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBFS.c **** void USBFS_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBFS.c **** {
1867:Generated_Source\PSoC5/USBFS.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBFS.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBFS.c **** 
1870:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
1871:Generated_Source\PSoC5/USBFS.c ****     {
1872:Generated_Source\PSoC5/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBFS.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBFS.c ****         if (length > (USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBFS.c ****         {
1876:Generated_Source\PSoC5/USBFS.c ****             length = USBFS_EPX_DATA_BUF_MAX - USBFS_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBFS.c ****         }
1878:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBFS.c **** 
1880:Generated_Source\PSoC5/USBFS.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBFS_EP[epNumber].epTogg
1882:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBFS.c **** 
1884:Generated_Source\PSoC5/USBFS.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBFS.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBFS.c **** 
1887:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBFS.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBFS.c ****         {
1890:Generated_Source\PSoC5/USBFS.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBFS.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBFS.c **** 
1893:Generated_Source\PSoC5/USBFS.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBFS.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBFS.c ****             {
1897:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBFS.c ****             }
1899:Generated_Source\PSoC5/USBFS.c ****         }
1900:Generated_Source\PSoC5/USBFS.c **** 
1901:Generated_Source\PSoC5/USBFS.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBFS.c **** 
1904:Generated_Source\PSoC5/USBFS.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBFS.c **** 
1907:Generated_Source\PSoC5/USBFS.c ****     #else
1908:Generated_Source\PSoC5/USBFS.c **** 
1909:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 51


1910:Generated_Source\PSoC5/USBFS.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBFS.c ****             USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBFS.c **** 
1913:Generated_Source\PSoC5/USBFS.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBFS.c ****             {
1915:Generated_Source\PSoC5/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBFS.c **** 
1917:Generated_Source\PSoC5/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBFS.c **** 
1920:Generated_Source\PSoC5/USBFS.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE
1923:Generated_Source\PSoC5/USBFS.c **** 
1924:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBFS.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | le
1927:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBFS.c **** 
1929:Generated_Source\PSoC5/USBFS.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBFS.c **** 
1932:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBFS.c **** 
1935:Generated_Source\PSoC5/USBFS.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_ARB_EPX_CFG_DMA_REQ;
1937:Generated_Source\PSoC5/USBFS.c ****                 USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_ARB_EPX_CFG_DMA_REQ;
1938:Generated_Source\PSoC5/USBFS.c **** 
1939:Generated_Source\PSoC5/USBFS.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBFS.c ****             }
1941:Generated_Source\PSoC5/USBFS.c ****             else
1942:Generated_Source\PSoC5/USBFS.c ****             {
1943:Generated_Source\PSoC5/USBFS.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBFS.c ****                 USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBFS.c ****             }
1946:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBFS.c **** 
1948:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBFS.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBFS.c ****             {
1951:Generated_Source\PSoC5/USBFS.c ****                 uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBFS.c **** 
1953:Generated_Source\PSoC5/USBFS.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBFS.c ****                 USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBFS.c **** 
1956:Generated_Source\PSoC5/USBFS.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBFS.c **** 
1959:Generated_Source\PSoC5/USBFS.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE
1961:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP16_BASE
1962:Generated_Source\PSoC5/USBFS.c **** 
1963:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  |
1965:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 52


1967:Generated_Source\PSoC5/USBFS.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  |
1969:Generated_Source\PSoC5/USBFS.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBFS.c **** 
1971:Generated_Source\PSoC5/USBFS.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBFS.c **** 
1974:Generated_Source\PSoC5/USBFS.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBFS.c ****             }
1977:Generated_Source\PSoC5/USBFS.c ****             else
1978:Generated_Source\PSoC5/USBFS.c ****             {
1979:Generated_Source\PSoC5/USBFS.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBFS.c ****                 USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBFS.c **** 
1982:Generated_Source\PSoC5/USBFS.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBFS.c ****                 {
1984:Generated_Source\PSoC5/USBFS.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBFS.c ****                     uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBFS.c **** 
1987:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = (uint8) (length / USBFS_DMA_BYTES_PER_BURST);
1989:Generated_Source\PSoC5/USBFS.c **** 
1990:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBFS_DMA_BYTES_PER_BURST)
1992:Generated_Source\PSoC5/USBFS.c **** 
1993:Generated_Source\PSoC5/USBFS.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u 
1995:Generated_Source\PSoC5/USBFS.c **** 
1996:Generated_Source\PSoC5/USBFS.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
1998:Generated_Source\PSoC5/USBFS.c ****                                                                           ((USBFS_DmaEpLastBurstEl[
1999:Generated_Source\PSoC5/USBFS.c ****                                                                            (USBFS_DMA_HALFWORDS_PER
2000:Generated_Source\PSoC5/USBFS.c **** 
2001:Generated_Source\PSoC5/USBFS.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBFS.c ****                     lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
2003:Generated_Source\PSoC5/USBFS.c ****                     lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[e
2004:Generated_Source\PSoC5/USBFS.c **** 
2005:Generated_Source\PSoC5/USBFS.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1
2007:Generated_Source\PSoC5/USBFS.c ****                                                                             USBFS_DMA_DESCR0_MASK :
2008:Generated_Source\PSoC5/USBFS.c **** 
2009:Generated_Source\PSoC5/USBFS.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBFS.c **** 
2012:Generated_Source\PSoC5/USBFS.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) USBFS_
2014:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) USBFS_
2015:Generated_Source\PSoC5/USBFS.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBFS.c **** 
2017:Generated_Source\PSoC5/USBFS.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetNumDataElements(channelNum, USBFS_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBFS.c **** 
2021:Generated_Source\PSoC5/USBFS.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaSetDescriptor0Next(channelNum);
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 53


2024:Generated_Source\PSoC5/USBFS.c **** 
2025:Generated_Source\PSoC5/USBFS.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBFS.c ****                     if (USBFS_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBFS.c ****                     {
2028:Generated_Source\PSoC5/USBFS.c ****                         USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBFS.c ****                     }
2030:Generated_Source\PSoC5/USBFS.c **** 
2031:Generated_Source\PSoC5/USBFS.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBFS.c ****                     USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epN
2033:Generated_Source\PSoC5/USBFS.c **** 
2034:Generated_Source\PSoC5/USBFS.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBFS.c ****                     USBFS_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBFS.c **** 
2037:Generated_Source\PSoC5/USBFS.c ****                 #if !defined (USBFS_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBFS.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBFS.c ****                     USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBFS_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBFS.c ****                 #endif  /* (USBFS_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBFS.c **** 
2042:Generated_Source\PSoC5/USBFS.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBFS.c ****                 }
2044:Generated_Source\PSoC5/USBFS.c ****                 else
2045:Generated_Source\PSoC5/USBFS.c ****                 {
2046:Generated_Source\PSoC5/USBFS.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBFS.c ****                     USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBFS.c ****                 }
2049:Generated_Source\PSoC5/USBFS.c ****             }
2050:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBFS.c ****     }
2053:Generated_Source\PSoC5/USBFS.c **** }
2054:Generated_Source\PSoC5/USBFS.c **** 
2055:Generated_Source\PSoC5/USBFS.c **** 
2056:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_ReadOutEP16
2058:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBFS.c **** *
2060:Generated_Source\PSoC5/USBFS.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBFS.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBFS.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBFS.c **** *
2064:Generated_Source\PSoC5/USBFS.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBFS.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBFS.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBFS.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBFS.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBFS.c **** *
2070:Generated_Source\PSoC5/USBFS.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBFS.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBFS.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBFS.c **** *   transfer after calling the USBFS_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBFS.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBFS.c **** *
2076:Generated_Source\PSoC5/USBFS.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBFS.c **** *
2078:Generated_Source\PSoC5/USBFS.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBFS.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBFS.c **** *   buffer to SRAM.
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 54


2081:Generated_Source\PSoC5/USBFS.c **** *
2082:Generated_Source\PSoC5/USBFS.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBFS.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBFS.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBFS.c **** *
2086:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBFS.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBFS.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBFS.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBFS.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBFS.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBFS.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBFS.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBFS.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBFS.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBFS.c **** *
2097:Generated_Source\PSoC5/USBFS.c **** * \return
2098:Generated_Source\PSoC5/USBFS.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBFS.c **** *
2100:Generated_Source\PSoC5/USBFS.c **** * \reentrant
2101:Generated_Source\PSoC5/USBFS.c **** *  No.
2102:Generated_Source\PSoC5/USBFS.c **** *
2103:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBFS.c **** uint16 USBFS_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBFS.c **** {
2106:Generated_Source\PSoC5/USBFS.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBFS.c **** 
2108:Generated_Source\PSoC5/USBFS.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBFS.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBFS.c **** 
2111:Generated_Source\PSoC5/USBFS.c ****     if ((pData != NULL) && (epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
2112:Generated_Source\PSoC5/USBFS.c ****     {
2113:Generated_Source\PSoC5/USBFS.c ****     #if (!USBFS_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBFS.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBFS.c ****         length = (length > USBFS_GetEPCount(epNumber)) ? USBFS_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBFS.c **** 
2118:Generated_Source\PSoC5/USBFS.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBFS.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBFS.c **** 
2121:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBFS.c ****         {
2123:Generated_Source\PSoC5/USBFS.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBFS.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBFS.c **** 
2126:Generated_Source\PSoC5/USBFS.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBFS.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBFS.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBFS.c ****             {
2130:Generated_Source\PSoC5/USBFS.c ****                 dataBuf[i] = (uint16) USBFS_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBFS.c ****             }
2132:Generated_Source\PSoC5/USBFS.c ****         }
2133:Generated_Source\PSoC5/USBFS.c **** 
2134:Generated_Source\PSoC5/USBFS.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBFS.c ****         USBFS_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBFS.c ****     #else
2137:Generated_Source\PSoC5/USBFS.c **** 
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 55


2138:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBFS.c ****         {
2140:Generated_Source\PSoC5/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBFS.c **** 
2142:Generated_Source\PSoC5/USBFS.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBFS.c **** 
2145:Generated_Source\PSoC5/USBFS.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE.arb
2147:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBFS.c **** 
2149:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG | (uint1
2151:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBFS.c **** 
2153:Generated_Source\PSoC5/USBFS.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBFS.c **** 
2156:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBFS.c **** 
2159:Generated_Source\PSoC5/USBFS.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBFS_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBFS.c ****             USBFS_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBFS_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBFS.c **** 
2163:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBFS.c ****             */
2166:Generated_Source\PSoC5/USBFS.c ****         }
2167:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBFS.c **** 
2169:Generated_Source\PSoC5/USBFS.c ****         #if (USBFS_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBFS.c ****         {
2171:Generated_Source\PSoC5/USBFS.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBFS.c ****             uint32 channelNum = (uint32) USBFS_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBFS.c **** 
2174:Generated_Source\PSoC5/USBFS.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBFS_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBFS.c **** 
2177:Generated_Source\PSoC5/USBFS.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBFS_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBFS.c **** 
2180:Generated_Source\PSoC5/USBFS.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] += (0u != USBFS_DmaEpLastBurstEl[epNumber]) ? 1u : 0u;
2182:Generated_Source\PSoC5/USBFS.c **** 
2183:Generated_Source\PSoC5/USBFS.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] = (0u != USBFS_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBFS.c ****                                                                   ((USBFS_DmaEpLastBurstEl[epNumber
2186:Generated_Source\PSoC5/USBFS.c ****                                                                    (USBFS_DMA_HALFWORDS_PER_BURST -
2187:Generated_Source\PSoC5/USBFS.c **** 
2188:Generated_Source\PSoC5/USBFS.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBFS.c ****             lengthDescr0 = (1u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
2190:Generated_Source\PSoC5/USBFS.c ****             lengthDescr1 = (2u == USBFS_DmaEpBurstCnt[epNumber]) ? USBFS_DmaEpLastBurstEl[epNumber]
2191:Generated_Source\PSoC5/USBFS.c **** 
2192:Generated_Source\PSoC5/USBFS.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (0u != (USBFS_DmaEpBurstCnt[epNumber] & 0x1u)) ?
2194:Generated_Source\PSoC5/USBFS.c ****                                                                     USBFS_DMA_DESCR0_MASK : USBFS_D
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 56


2195:Generated_Source\PSoC5/USBFS.c **** 
2196:Generated_Source\PSoC5/USBFS.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= (USBFS_DmaEpBurstCnt[epNumber] > 2u) ? USBFS_DMA_DE
2198:Generated_Source\PSoC5/USBFS.c **** 
2199:Generated_Source\PSoC5/USBFS.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpLastBurstEl[epNumber] |= USBFS_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBFS.c **** 
2202:Generated_Source\PSoC5/USBFS.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCntBackup[epNumber]   = USBFS_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBFS.c **** 
2206:Generated_Source\PSoC5/USBFS.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBFS.c ****             USBFS_DmaEpBurstCnt[epNumber] = USBFS_DMA_GET_BURST_CNT(USBFS_DmaEpBurstCnt[epNumber]);
2208:Generated_Source\PSoC5/USBFS.c **** 
2209:Generated_Source\PSoC5/USBFS.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBFS.c **** 
2212:Generated_Source\PSoC5/USBFS.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR0, (void*) &USBFS_ARB_EP16_BASE.arb
2214:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetSrcAddress(channelNum, USBFS_DMA_DESCR1, (void*) &USBFS_ARB_EP16_BASE.arb
2215:Generated_Source\PSoC5/USBFS.c **** 
2216:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetDstAddress(channelNum, USBFS_DMA_DESCR1, (void*) ((uint32) pData + USBFS_
2218:Generated_Source\PSoC5/USBFS.c **** 
2219:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR0, USBFS_DMA_COMMON_CFG  | lengt
2221:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBFS.c **** 
2223:Generated_Source\PSoC5/USBFS.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetConfiguration(channelNum, USBFS_DMA_DESCR1, USBFS_DMA_COMMON_CFG  | lengt
2225:Generated_Source\PSoC5/USBFS.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBFS.c **** 
2227:Generated_Source\PSoC5/USBFS.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBFS.c **** 
2230:Generated_Source\PSoC5/USBFS.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBFS.c ****             
2233:Generated_Source\PSoC5/USBFS.c ****             if (USBFS_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBFS.c ****             {
2235:Generated_Source\PSoC5/USBFS.c ****                 USBFS_CyDmaValidateDescriptor(channelNum, USBFS_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBFS.c ****             }
2237:Generated_Source\PSoC5/USBFS.c **** 
2238:Generated_Source\PSoC5/USBFS.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBFS.c ****             USBFS_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBFS.c **** 
2241:Generated_Source\PSoC5/USBFS.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBFS.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBFS.c ****             */
2244:Generated_Source\PSoC5/USBFS.c ****         }
2245:Generated_Source\PSoC5/USBFS.c ****         #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBFS.c ****     }
2248:Generated_Source\PSoC5/USBFS.c ****     else
2249:Generated_Source\PSoC5/USBFS.c ****     {
2250:Generated_Source\PSoC5/USBFS.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBFS.c ****     }
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 57


2252:Generated_Source\PSoC5/USBFS.c **** 
2253:Generated_Source\PSoC5/USBFS.c ****     return (length);
2254:Generated_Source\PSoC5/USBFS.c **** }
2255:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBFS.c **** 
2257:Generated_Source\PSoC5/USBFS.c **** 
2258:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_EnableOutEP
2260:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBFS.c **** *
2262:Generated_Source\PSoC5/USBFS.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBFS.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBFS.c **** *
2265:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBFS.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBFS.c **** *
2268:Generated_Source\PSoC5/USBFS.c **** * \globalvars
2269:Generated_Source\PSoC5/USBFS.c **** *
2270:Generated_Source\PSoC5/USBFS.c **** *  \ref USBFS_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBFS.c **** *
2272:Generated_Source\PSoC5/USBFS.c **** * \reentrant
2273:Generated_Source\PSoC5/USBFS.c **** *  No.
2274:Generated_Source\PSoC5/USBFS.c **** *
2275:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBFS.c **** void USBFS_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBFS.c **** {
 898              		.loc 1 2277 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902              		@ link register save eliminated.
 903              	.LVL62:
2278:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 904              		.loc 1 2278 0
 905 0000 431E     		subs	r3, r0, #1
 906 0002 072B     		cmp	r3, #7
 907 0004 0AD8     		bhi	.L56
2279:Generated_Source\PSoC5/USBFS.c ****     {
2280:Generated_Source\PSoC5/USBFS.c ****         USBFS_EP[epNumber].apiEpState = USBFS_NO_EVENT_PENDING;
 908              		.loc 1 2280 0
 909 0006 064A     		ldr	r2, .L58
 910 0008 0C23     		movs	r3, #12
 911 000a 03FB0023 		mla	r3, r3, r0, r2
 912 000e 0022     		movs	r2, #0
 913 0010 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC5/USBFS.c **** 
2282:Generated_Source\PSoC5/USBFS.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_EP[epNumber].epMode;
 914              		.loc 1 2283 0
 915 0012 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 916 0014 034B     		ldr	r3, .L58+4
 917 0016 D2B2     		uxtb	r2, r2
 918 0018 0001     		lsls	r0, r0, #4
 919              	.LVL63:
 920 001a 1A54     		strb	r2, [r3, r0]
 921              	.L56:
 922 001c 7047     		bx	lr
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 58


 923              	.L59:
 924 001e 00BF     		.align	2
 925              	.L58:
 926 0020 00000000 		.word	USBFS_EP
 927 0024 FE5F0040 		.word	1073766398
 928              		.cfi_endproc
 929              	.LFE13:
 930              		.size	USBFS_EnableOutEP, .-USBFS_EnableOutEP
 931              		.section	.text.USBFS_ReadOutEP,"ax",%progbits
 932              		.align	1
 933              		.global	USBFS_ReadOutEP
 934              		.thumb
 935              		.thumb_func
 936              		.type	USBFS_ReadOutEP, %function
 937              	USBFS_ReadOutEP:
 938              	.LFB12:
1655:Generated_Source\PSoC5/USBFS.c ****     if ((pData != NULL) && (epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 939              		.loc 1 1655 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              	.LVL64:
 944 0000 38B5     		push	{r3, r4, r5, lr}
 945              		.cfi_def_cfa_offset 16
 946              		.cfi_offset 3, -16
 947              		.cfi_offset 4, -12
 948              		.cfi_offset 5, -8
 949              		.cfi_offset 14, -4
1655:Generated_Source\PSoC5/USBFS.c ****     if ((pData != NULL) && (epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 950              		.loc 1 1655 0
 951 0002 0546     		mov	r5, r0
 952 0004 1446     		mov	r4, r2
1656:Generated_Source\PSoC5/USBFS.c ****     {
 953              		.loc 1 1656 0
 954 0006 D1B1     		cbz	r1, .L65
1656:Generated_Source\PSoC5/USBFS.c ****     {
 955              		.loc 1 1656 0 is_stmt 0 discriminator 1
 956 0008 431E     		subs	r3, r0, #1
 957 000a 072B     		cmp	r3, #7
 958 000c 19D8     		bhi	.L66
1660:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
 959              		.loc 1 1660 0 is_stmt 1
 960 000e FFF7FEFF 		bl	USBFS_GetEPCount
 961              	.LVL65:
 962 0012 A042     		cmp	r0, r4
 963 0014 03D2     		bcs	.L62
1660:Generated_Source\PSoC5/USBFS.c ****     #endif /* (!USBFS_EP_MANAGEMENT_DMA_AUTO) */
 964              		.loc 1 1660 0 is_stmt 0 discriminator 1
 965 0016 2846     		mov	r0, r5
 966 0018 FFF7FEFF 		bl	USBFS_GetEPCount
 967              	.LVL66:
 968 001c 0446     		mov	r4, r0
 969              	.L62:
 970              	.LVL67:
 971              	.LBB7:
1667:Generated_Source\PSoC5/USBFS.c ****             {
 972              		.loc 1 1667 0 is_stmt 1 discriminator 4
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 59


 973 001e 0A46     		mov	r2, r1
1669:Generated_Source\PSoC5/USBFS.c ****             }
 974              		.loc 1 1669 0 discriminator 4
 975 0020 0948     		ldr	r0, .L68
 976 0022 2B01     		lsls	r3, r5, #4
 977 0024 1844     		add	r0, r0, r3
 978              	.LVL68:
 979              	.L63:
1667:Generated_Source\PSoC5/USBFS.c ****             {
 980              		.loc 1 1667 0 discriminator 1
 981 0026 531A     		subs	r3, r2, r1
 982 0028 9BB2     		uxth	r3, r3
 983 002a 9C42     		cmp	r4, r3
 984 002c 03D9     		bls	.L67
1669:Generated_Source\PSoC5/USBFS.c ****             }
 985              		.loc 1 1669 0 discriminator 3
 986 002e 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 987 0030 02F8013B 		strb	r3, [r2], #1
 988              	.LVL69:
 989 0034 F7E7     		b	.L63
 990              	.L67:
 991              	.LBE7:
1674:Generated_Source\PSoC5/USBFS.c ****     #else
 992              		.loc 1 1674 0
 993 0036 2846     		mov	r0, r5
 994 0038 FFF7FEFF 		bl	USBFS_EnableOutEP
 995              	.LVL70:
 996 003c 02E0     		b	.L61
 997              	.LVL71:
 998              	.L65:
1820:Generated_Source\PSoC5/USBFS.c ****     }
 999              		.loc 1 1820 0
 1000 003e 0C46     		mov	r4, r1
 1001 0040 00E0     		b	.L61
 1002              	.L66:
 1003 0042 0024     		movs	r4, #0
 1004              	.LVL72:
 1005              	.L61:
1824:Generated_Source\PSoC5/USBFS.c **** 
 1006              		.loc 1 1824 0
 1007 0044 2046     		mov	r0, r4
 1008 0046 38BD     		pop	{r3, r4, r5, pc}
 1009              	.LVL73:
 1010              	.L69:
 1011              		.align	2
 1012              	.L68:
 1013 0048 70600040 		.word	1073766512
 1014              		.cfi_endproc
 1015              	.LFE12:
 1016              		.size	USBFS_ReadOutEP, .-USBFS_ReadOutEP
 1017              		.section	.text.USBFS_DisableOutEP,"ax",%progbits
 1018              		.align	1
 1019              		.global	USBFS_DisableOutEP
 1020              		.thumb
 1021              		.thumb_func
 1022              		.type	USBFS_DisableOutEP, %function
 1023              	USBFS_DisableOutEP:
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 60


 1024              	.LFB14:
2284:Generated_Source\PSoC5/USBFS.c ****         
2285:Generated_Source\PSoC5/USBFS.c ****     }
2286:Generated_Source\PSoC5/USBFS.c **** }
2287:Generated_Source\PSoC5/USBFS.c **** 
2288:Generated_Source\PSoC5/USBFS.c **** 
2289:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_DisableOutEP
2291:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBFS.c **** *
2293:Generated_Source\PSoC5/USBFS.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBFS.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBFS.c **** *
2296:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBFS.c **** *
2299:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBFS.c **** void USBFS_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBFS.c **** {
 1025              		.loc 1 2301 0
 1026              		.cfi_startproc
 1027              		@ args = 0, pretend = 0, frame = 0
 1028              		@ frame_needed = 0, uses_anonymous_args = 0
 1029              		@ link register save eliminated.
 1030              	.LVL74:
2302:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1031              		.loc 1 2302 0
 1032 0000 431E     		subs	r3, r0, #1
 1033 0002 072B     		cmp	r3, #7
2303:Generated_Source\PSoC5/USBFS.c ****     {
2304:Generated_Source\PSoC5/USBFS.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBFS.c ****         USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBFS_MODE_NAK_OUT;
 1034              		.loc 1 2305 0
 1035 0004 9FBF     		itttt	ls
 1036 0006 024B     		ldrls	r3, .L72
 1037 0008 0001     		lslls	r0, r0, #4
 1038              	.LVL75:
 1039 000a 0822     		movls	r2, #8
 1040 000c 1A54     		strbls	r2, [r3, r0]
 1041 000e 7047     		bx	lr
 1042              	.L73:
 1043              		.align	2
 1044              	.L72:
 1045 0010 FE5F0040 		.word	1073766398
 1046              		.cfi_endproc
 1047              	.LFE14:
 1048              		.size	USBFS_DisableOutEP, .-USBFS_DisableOutEP
 1049              		.section	.text.USBFS_Force,"ax",%progbits
 1050              		.align	1
 1051              		.global	USBFS_Force
 1052              		.thumb
 1053              		.thumb_func
 1054              		.type	USBFS_Force, %function
 1055              	USBFS_Force:
 1056              	.LFB15:
2306:Generated_Source\PSoC5/USBFS.c ****     }
2307:Generated_Source\PSoC5/USBFS.c **** }
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 61


2308:Generated_Source\PSoC5/USBFS.c **** 
2309:Generated_Source\PSoC5/USBFS.c **** 
2310:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_Force
2312:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBFS.c **** *
2314:Generated_Source\PSoC5/USBFS.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBFS.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBFS.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBFS.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBFS.c **** *
2319:Generated_Source\PSoC5/USBFS.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBFS.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBFS.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBFS.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBFS.c **** *    USBFS_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBFS.c **** *
2328:Generated_Source\PSoC5/USBFS.c **** *
2329:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBFS.c **** void USBFS_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBFS.c **** {
 1057              		.loc 1 2331 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 0, uses_anonymous_args = 0
 1061              		@ link register save eliminated.
 1062              	.LVL76:
2332:Generated_Source\PSoC5/USBFS.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBFS.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBFS.c ****     */
2335:Generated_Source\PSoC5/USBFS.c ****     USBFS_USBIO_CR0_REG = bState;
 1063              		.loc 1 2335 0
 1064 0000 014B     		ldr	r3, .L75
 1065 0002 1870     		strb	r0, [r3]
 1066 0004 7047     		bx	lr
 1067              	.L76:
 1068 0006 00BF     		.align	2
 1069              	.L75:
 1070 0008 10600040 		.word	1073766416
 1071              		.cfi_endproc
 1072              	.LFE15:
 1073              		.size	USBFS_Force, .-USBFS_Force
 1074              		.section	.text.USBFS_GetEPAckState,"ax",%progbits
 1075              		.align	1
 1076              		.global	USBFS_GetEPAckState
 1077              		.thumb
 1078              		.thumb_func
 1079              		.type	USBFS_GetEPAckState, %function
 1080              	USBFS_GetEPAckState:
 1081              	.LFB16:
2336:Generated_Source\PSoC5/USBFS.c **** }
2337:Generated_Source\PSoC5/USBFS.c **** 
2338:Generated_Source\PSoC5/USBFS.c **** 
2339:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 62


2340:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetEPAckState
2341:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBFS.c **** *
2343:Generated_Source\PSoC5/USBFS.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBFS.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBFS.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBFS.c **** *
2347:Generated_Source\PSoC5/USBFS.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBFS.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBFS.c **** *
2350:Generated_Source\PSoC5/USBFS.c **** *  \return
2351:Generated_Source\PSoC5/USBFS.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBFS.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBFS.c **** *
2354:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBFS.c **** {
 1082              		.loc 1 2356 0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
 1085              		@ frame_needed = 0, uses_anonymous_args = 0
 1086              		@ link register save eliminated.
 1087              	.LVL77:
2357:Generated_Source\PSoC5/USBFS.c ****     uint8 cr = 0u;
2358:Generated_Source\PSoC5/USBFS.c **** 
2359:Generated_Source\PSoC5/USBFS.c ****     if ((epNumber > USBFS_EP0) && (epNumber < USBFS_MAX_EP))
 1088              		.loc 1 2359 0
 1089 0000 431E     		subs	r3, r0, #1
 1090 0002 072B     		cmp	r3, #7
2360:Generated_Source\PSoC5/USBFS.c ****     {
2361:Generated_Source\PSoC5/USBFS.c ****         cr = USBFS_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBFS_MODE_ACKD;
 1091              		.loc 1 2361 0
 1092 0004 9FBF     		itttt	ls
 1093 0006 044B     		ldrls	r3, .L80
 1094 0008 0001     		lslls	r0, r0, #4
 1095              	.LVL78:
 1096 000a 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 1097 000c 00F01000 		andls	r0, r0, #16
 1098 0010 94BF     		ite	ls
 1099 0012 C0B2     		uxtbls	r0, r0
 1100              	.LVL79:
2357:Generated_Source\PSoC5/USBFS.c ****     uint8 cr = 0u;
 1101              		.loc 1 2357 0
 1102 0014 0020     		movhi	r0, #0
 1103              	.LVL80:
2362:Generated_Source\PSoC5/USBFS.c ****     }
2363:Generated_Source\PSoC5/USBFS.c **** 
2364:Generated_Source\PSoC5/USBFS.c ****     return ((uint8) cr);
2365:Generated_Source\PSoC5/USBFS.c **** }
 1104              		.loc 1 2365 0
 1105 0016 7047     		bx	lr
 1106              	.L81:
 1107              		.align	2
 1108              	.L80:
 1109 0018 FE5F0040 		.word	1073766398
 1110              		.cfi_endproc
 1111              	.LFE16:
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 63


 1112              		.size	USBFS_GetEPAckState, .-USBFS_GetEPAckState
 1113              		.section	.text.USBFS_SetPowerStatus,"ax",%progbits
 1114              		.align	1
 1115              		.global	USBFS_SetPowerStatus
 1116              		.thumb
 1117              		.thumb_func
 1118              		.type	USBFS_SetPowerStatus, %function
 1119              	USBFS_SetPowerStatus:
 1120              	.LFB17:
2366:Generated_Source\PSoC5/USBFS.c **** 
2367:Generated_Source\PSoC5/USBFS.c **** 
2368:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_SetPowerStatus
2370:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBFS.c **** *
2372:Generated_Source\PSoC5/USBFS.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBFS.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBFS.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBFS.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBFS.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBFS.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBFS.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBFS.c **** *
2380:Generated_Source\PSoC5/USBFS.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBFS.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBFS.c **** *        given here:
2383:Generated_Source\PSoC5/USBFS.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBFS.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBFS.c **** *  USBFS_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBFS.c **** *  USBFS_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBFS.c **** *
2388:Generated_Source\PSoC5/USBFS.c **** * \globalvars
2389:Generated_Source\PSoC5/USBFS.c **** *
2390:Generated_Source\PSoC5/USBFS.c **** *  \ref USBFS_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBFS.c **** *
2392:Generated_Source\PSoC5/USBFS.c **** * \reentrant
2393:Generated_Source\PSoC5/USBFS.c **** *  No.
2394:Generated_Source\PSoC5/USBFS.c **** *
2395:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBFS.c **** void USBFS_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBFS.c **** {
 1121              		.loc 1 2397 0
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 0
 1124              		@ frame_needed = 0, uses_anonymous_args = 0
 1125              		@ link register save eliminated.
 1126              	.LVL81:
 1127 0000 044B     		ldr	r3, .L86
2398:Generated_Source\PSoC5/USBFS.c ****     if (powerStatus != USBFS_DEVICE_STATUS_BUS_POWERED)
2399:Generated_Source\PSoC5/USBFS.c ****     {
2400:Generated_Source\PSoC5/USBFS.c ****         USBFS_deviceStatus |= (uint8)  USBFS_DEVICE_STATUS_SELF_POWERED;
 1128              		.loc 1 2400 0
 1129 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
2398:Generated_Source\PSoC5/USBFS.c ****     if (powerStatus != USBFS_DEVICE_STATUS_BUS_POWERED)
 1130              		.loc 1 2398 0
 1131 0004 10B1     		cbz	r0, .L83
 1132              		.loc 1 2400 0
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 64


 1133 0006 42F00102 		orr	r2, r2, #1
 1134 000a 01E0     		b	.L85
 1135              	.L83:
2401:Generated_Source\PSoC5/USBFS.c ****     }
2402:Generated_Source\PSoC5/USBFS.c ****     else
2403:Generated_Source\PSoC5/USBFS.c ****     {
2404:Generated_Source\PSoC5/USBFS.c ****         USBFS_deviceStatus &= (uint8) ~USBFS_DEVICE_STATUS_SELF_POWERED;
 1136              		.loc 1 2404 0
 1137 000c 02F0FE02 		and	r2, r2, #254
 1138              	.L85:
 1139 0010 1A70     		strb	r2, [r3]
 1140 0012 7047     		bx	lr
 1141              	.L87:
 1142              		.align	2
 1143              	.L86:
 1144 0014 00000000 		.word	USBFS_deviceStatus
 1145              		.cfi_endproc
 1146              	.LFE17:
 1147              		.size	USBFS_SetPowerStatus, .-USBFS_SetPowerStatus
 1148              		.section	.text.USBFS_RWUEnabled,"ax",%progbits
 1149              		.align	1
 1150              		.global	USBFS_RWUEnabled
 1151              		.thumb
 1152              		.thumb_func
 1153              		.type	USBFS_RWUEnabled, %function
 1154              	USBFS_RWUEnabled:
 1155              	.LFB18:
2405:Generated_Source\PSoC5/USBFS.c ****     }
2406:Generated_Source\PSoC5/USBFS.c **** }
2407:Generated_Source\PSoC5/USBFS.c **** 
2408:Generated_Source\PSoC5/USBFS.c **** 
2409:Generated_Source\PSoC5/USBFS.c **** #if (USBFS_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBFS.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBFS.c ****     * Function Name: USBFS_VBusPresent
2412:Generated_Source\PSoC5/USBFS.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBFS.c ****     *
2414:Generated_Source\PSoC5/USBFS.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBFS.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBFS.c ****     *
2417:Generated_Source\PSoC5/USBFS.c ****     * \return
2418:Generated_Source\PSoC5/USBFS.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBFS.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBFS.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBFS.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBFS.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBFS.c ****     *
2424:Generated_Source\PSoC5/USBFS.c ****     *
2425:Generated_Source\PSoC5/USBFS.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBFS.c ****     uint8 USBFS_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBFS.c ****     {
2428:Generated_Source\PSoC5/USBFS.c ****         return ((0u != (USBFS_VBUS_STATUS_REG & USBFS_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBFS.c ****     }
2430:Generated_Source\PSoC5/USBFS.c **** #endif /* (USBFS_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBFS.c **** 
2432:Generated_Source\PSoC5/USBFS.c **** 
2433:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_RWUEnabled
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 65


2435:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBFS.c **** *
2437:Generated_Source\PSoC5/USBFS.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBFS.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBFS.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBFS.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBFS.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBFS.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBFS.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBFS.c **** *
2445:Generated_Source\PSoC5/USBFS.c **** *
2446:Generated_Source\PSoC5/USBFS.c **** * \return
2447:Generated_Source\PSoC5/USBFS.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBFS.c **** *
2449:Generated_Source\PSoC5/USBFS.c **** * \globalvars
2450:Generated_Source\PSoC5/USBFS.c **** *  USBFS_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBFS.c **** *
2452:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBFS.c **** {
 1156              		.loc 1 2454 0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 0
 1159              		@ frame_needed = 0, uses_anonymous_args = 0
 1160              		@ link register save eliminated.
 1161              	.LVL82:
2455:Generated_Source\PSoC5/USBFS.c ****     uint8 result = USBFS_FALSE;
2456:Generated_Source\PSoC5/USBFS.c **** 
2457:Generated_Source\PSoC5/USBFS.c ****     if (0u != (USBFS_deviceStatus & USBFS_DEVICE_STATUS_REMOTE_WAKEUP))
 1162              		.loc 1 2457 0
 1163 0000 024B     		ldr	r3, .L89
 1164 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1165              	.LVL83:
2458:Generated_Source\PSoC5/USBFS.c ****     {
2459:Generated_Source\PSoC5/USBFS.c ****         result = USBFS_TRUE;
2460:Generated_Source\PSoC5/USBFS.c ****     }
2461:Generated_Source\PSoC5/USBFS.c **** 
2462:Generated_Source\PSoC5/USBFS.c ****     return (result);
2463:Generated_Source\PSoC5/USBFS.c **** }
 1166              		.loc 1 2463 0
 1167 0004 C0F34000 		ubfx	r0, r0, #1, #1
 1168              	.LVL84:
 1169 0008 7047     		bx	lr
 1170              	.L90:
 1171 000a 00BF     		.align	2
 1172              	.L89:
 1173 000c 00000000 		.word	USBFS_deviceStatus
 1174              		.cfi_endproc
 1175              	.LFE18:
 1176              		.size	USBFS_RWUEnabled, .-USBFS_RWUEnabled
 1177              		.section	.text.USBFS_GetDeviceAddress,"ax",%progbits
 1178              		.align	1
 1179              		.global	USBFS_GetDeviceAddress
 1180              		.thumb
 1181              		.thumb_func
 1182              		.type	USBFS_GetDeviceAddress, %function
 1183              	USBFS_GetDeviceAddress:
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 66


 1184              	.LFB19:
2464:Generated_Source\PSoC5/USBFS.c **** 
2465:Generated_Source\PSoC5/USBFS.c **** 
2466:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_GetDeviceAddress
2468:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBFS.c **** *
2470:Generated_Source\PSoC5/USBFS.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBFS.c **** *
2472:Generated_Source\PSoC5/USBFS.c **** * \return
2473:Generated_Source\PSoC5/USBFS.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBFS.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBFS.c **** *
2476:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBFS.c **** uint8 USBFS_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBFS.c **** {
 1185              		.loc 1 2478 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 1189              		@ link register save eliminated.
2479:Generated_Source\PSoC5/USBFS.c ****     return (uint8)(USBFS_CR0_REG & USBFS_CR0_DEVICE_ADDRESS_MASK);
 1190              		.loc 1 2479 0
 1191 0000 024B     		ldr	r3, .L92
 1192 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
2480:Generated_Source\PSoC5/USBFS.c **** }
 1193              		.loc 1 2480 0
 1194 0004 00F07F00 		and	r0, r0, #127
 1195 0008 7047     		bx	lr
 1196              	.L93:
 1197 000a 00BF     		.align	2
 1198              	.L92:
 1199 000c 08600040 		.word	1073766408
 1200              		.cfi_endproc
 1201              	.LFE19:
 1202              		.size	USBFS_GetDeviceAddress, .-USBFS_GetDeviceAddress
 1203              		.section	.text.USBFS_EnableSofInt,"ax",%progbits
 1204              		.align	1
 1205              		.global	USBFS_EnableSofInt
 1206              		.thumb
 1207              		.thumb_func
 1208              		.type	USBFS_EnableSofInt, %function
 1209              	USBFS_EnableSofInt:
 1210              	.LFB20:
2481:Generated_Source\PSoC5/USBFS.c **** 
2482:Generated_Source\PSoC5/USBFS.c **** 
2483:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_EnableSofInt
2485:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBFS.c **** *
2487:Generated_Source\PSoC5/USBFS.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBFS.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBFS.c **** *
2490:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBFS.c **** void USBFS_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBFS.c **** {
 1211              		.loc 1 2492 0
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 67


 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215              		@ link register save eliminated.
2493:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBFS.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBFS.c ****     USBFS_INTR_SIE_MASK_REG |= (uint32) USBFS_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBFS.c **** #else
2497:Generated_Source\PSoC5/USBFS.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBFS.c ****         CyIntEnable(USBFS_SOF_VECT_NUM);
 1216              		.loc 1 2499 0
 1217 0000 024B     		ldr	r3, .L95
 1218 0002 4FF40012 		mov	r2, #2097152
 1219 0006 1A60     		str	r2, [r3]
 1220 0008 7047     		bx	lr
 1221              	.L96:
 1222 000a 00BF     		.align	2
 1223              	.L95:
 1224 000c 00E100E0 		.word	-536813312
 1225              		.cfi_endproc
 1226              	.LFE20:
 1227              		.size	USBFS_EnableSofInt, .-USBFS_EnableSofInt
 1228              		.section	.text.USBFS_DisableSofInt,"ax",%progbits
 1229              		.align	1
 1230              		.global	USBFS_DisableSofInt
 1231              		.thumb
 1232              		.thumb_func
 1233              		.type	USBFS_DisableSofInt, %function
 1234              	USBFS_DisableSofInt:
 1235              	.LFB21:
2500:Generated_Source\PSoC5/USBFS.c ****     #endif /* (USBFS_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBFS.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBFS.c **** }
2503:Generated_Source\PSoC5/USBFS.c **** 
2504:Generated_Source\PSoC5/USBFS.c **** 
2505:Generated_Source\PSoC5/USBFS.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBFS.c **** * Function Name: USBFS_DisableSofInt
2507:Generated_Source\PSoC5/USBFS.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBFS.c **** *
2509:Generated_Source\PSoC5/USBFS.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBFS.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBFS.c **** *
2512:Generated_Source\PSoC5/USBFS.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBFS.c **** void USBFS_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBFS.c **** {
 1236              		.loc 1 2514 0
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 0
 1239              		@ frame_needed = 0, uses_anonymous_args = 0
 1240              		@ link register save eliminated.
2515:Generated_Source\PSoC5/USBFS.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBFS.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBFS.c ****     USBFS_INTR_SIE_MASK_REG &= (uint32) ~USBFS_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBFS.c **** #else
2519:Generated_Source\PSoC5/USBFS.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBFS.c ****     #if (USBFS_SOF_ISR_ACTIVE)
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 68


2521:Generated_Source\PSoC5/USBFS.c ****         CyIntDisable(USBFS_SOF_VECT_NUM);
 1241              		.loc 1 2521 0
 1242 0000 024B     		ldr	r3, .L98
 1243 0002 4FF40012 		mov	r2, #2097152
 1244 0006 1A60     		str	r2, [r3]
 1245 0008 7047     		bx	lr
 1246              	.L99:
 1247 000a 00BF     		.align	2
 1248              	.L98:
 1249 000c 80E100E0 		.word	-536813184
 1250              		.cfi_endproc
 1251              	.LFE21:
 1252              		.size	USBFS_DisableSofInt, .-USBFS_DisableSofInt
 1253              		.global	USBFS_initVar
 1254              		.bss
 1255              		.set	.LANCHOR0,. + 0
 1256              		.type	USBFS_initVar, %object
 1257              		.size	USBFS_initVar, 1
 1258              	USBFS_initVar:
 1259 0000 00       		.space	1
 1260              		.text
 1261              	.Letext0:
 1262              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1263              		.file 3 "Generated_Source\\PSoC5\\USBFS.h"
 1264              		.file 4 "Generated_Source\\PSoC5\\USBFS_pvt.h"
 1265              		.file 5 "Generated_Source\\PSoC5\\CyLib.h"
 1266              		.file 6 "Generated_Source\\PSoC5\\USBFS_Dp.h"
 1267              		.section	.debug_info,"",%progbits
 1268              	.Ldebug_info0:
 1269 0000 C8090000 		.4byte	0x9c8
 1270 0004 0400     		.2byte	0x4
 1271 0006 00000000 		.4byte	.Ldebug_abbrev0
 1272 000a 04       		.byte	0x4
 1273 000b 01       		.uleb128 0x1
 1274 000c D3000000 		.4byte	.LASF98
 1275 0010 0C       		.byte	0xc
 1276 0011 72040000 		.4byte	.LASF99
 1277 0015 3F050000 		.4byte	.LASF100
 1278 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1279 001d 00000000 		.4byte	0
 1280 0021 00000000 		.4byte	.Ldebug_line0
 1281 0025 02       		.uleb128 0x2
 1282 0026 01       		.byte	0x1
 1283 0027 06       		.byte	0x6
 1284 0028 C7000000 		.4byte	.LASF0
 1285 002c 02       		.uleb128 0x2
 1286 002d 01       		.byte	0x1
 1287 002e 08       		.byte	0x8
 1288 002f 33040000 		.4byte	.LASF1
 1289 0033 02       		.uleb128 0x2
 1290 0034 02       		.byte	0x2
 1291 0035 05       		.byte	0x5
 1292 0036 41040000 		.4byte	.LASF2
 1293 003a 02       		.uleb128 0x2
 1294 003b 02       		.byte	0x2
 1295 003c 07       		.byte	0x7
 1296 003d C4020000 		.4byte	.LASF3
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 69


 1297 0041 02       		.uleb128 0x2
 1298 0042 04       		.byte	0x4
 1299 0043 05       		.byte	0x5
 1300 0044 DD010000 		.4byte	.LASF4
 1301 0048 02       		.uleb128 0x2
 1302 0049 04       		.byte	0x4
 1303 004a 07       		.byte	0x7
 1304 004b 87020000 		.4byte	.LASF5
 1305 004f 02       		.uleb128 0x2
 1306 0050 08       		.byte	0x8
 1307 0051 05       		.byte	0x5
 1308 0052 B9000000 		.4byte	.LASF6
 1309 0056 02       		.uleb128 0x2
 1310 0057 08       		.byte	0x8
 1311 0058 07       		.byte	0x7
 1312 0059 49000000 		.4byte	.LASF7
 1313 005d 03       		.uleb128 0x3
 1314 005e 04       		.byte	0x4
 1315 005f 05       		.byte	0x5
 1316 0060 696E7400 		.ascii	"int\000"
 1317 0064 02       		.uleb128 0x2
 1318 0065 04       		.byte	0x4
 1319 0066 07       		.byte	0x7
 1320 0067 7A020000 		.4byte	.LASF8
 1321 006b 04       		.uleb128 0x4
 1322 006c FD010000 		.4byte	.LASF9
 1323 0070 02       		.byte	0x2
 1324 0071 E901     		.2byte	0x1e9
 1325 0073 2C000000 		.4byte	0x2c
 1326 0077 04       		.uleb128 0x4
 1327 0078 00000000 		.4byte	.LASF10
 1328 007c 02       		.byte	0x2
 1329 007d EA01     		.2byte	0x1ea
 1330 007f 3A000000 		.4byte	0x3a
 1331 0083 04       		.uleb128 0x4
 1332 0084 33020000 		.4byte	.LASF11
 1333 0088 02       		.byte	0x2
 1334 0089 EB01     		.2byte	0x1eb
 1335 008b 48000000 		.4byte	0x48
 1336 008f 02       		.uleb128 0x2
 1337 0090 04       		.byte	0x4
 1338 0091 04       		.byte	0x4
 1339 0092 D3030000 		.4byte	.LASF12
 1340 0096 02       		.uleb128 0x2
 1341 0097 08       		.byte	0x8
 1342 0098 04       		.byte	0x4
 1343 0099 1B020000 		.4byte	.LASF13
 1344 009d 02       		.uleb128 0x2
 1345 009e 01       		.byte	0x1
 1346 009f 08       		.byte	0x8
 1347 00a0 EB040000 		.4byte	.LASF14
 1348 00a4 04       		.uleb128 0x4
 1349 00a5 1A040000 		.4byte	.LASF15
 1350 00a9 02       		.byte	0x2
 1351 00aa 9302     		.2byte	0x293
 1352 00ac B0000000 		.4byte	0xb0
 1353 00b0 05       		.uleb128 0x5
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 70


 1354 00b1 6B000000 		.4byte	0x6b
 1355 00b5 04       		.uleb128 0x4
 1356 00b6 43030000 		.4byte	.LASF16
 1357 00ba 02       		.byte	0x2
 1358 00bb 9502     		.2byte	0x295
 1359 00bd C1000000 		.4byte	0xc1
 1360 00c1 05       		.uleb128 0x5
 1361 00c2 83000000 		.4byte	0x83
 1362 00c6 02       		.uleb128 0x2
 1363 00c7 08       		.byte	0x8
 1364 00c8 04       		.byte	0x4
 1365 00c9 84030000 		.4byte	.LASF17
 1366 00cd 02       		.uleb128 0x2
 1367 00ce 04       		.byte	0x4
 1368 00cf 07       		.byte	0x7
 1369 00d0 7B030000 		.4byte	.LASF18
 1370 00d4 06       		.uleb128 0x6
 1371 00d5 0C       		.byte	0xc
 1372 00d6 03       		.byte	0x3
 1373 00d7 93       		.byte	0x93
 1374 00d8 49010000 		.4byte	0x149
 1375 00dc 07       		.uleb128 0x7
 1376 00dd 90030000 		.4byte	.LASF19
 1377 00e1 03       		.byte	0x3
 1378 00e2 95       		.byte	0x95
 1379 00e3 6B000000 		.4byte	0x6b
 1380 00e7 00       		.byte	0
 1381 00e8 07       		.uleb128 0x7
 1382 00e9 D9030000 		.4byte	.LASF20
 1383 00ed 03       		.byte	0x3
 1384 00ee 96       		.byte	0x96
 1385 00ef 6B000000 		.4byte	0x6b
 1386 00f3 01       		.byte	0x1
 1387 00f4 07       		.uleb128 0x7
 1388 00f5 5C030000 		.4byte	.LASF21
 1389 00f9 03       		.byte	0x3
 1390 00fa 97       		.byte	0x97
 1391 00fb 6B000000 		.4byte	0x6b
 1392 00ff 02       		.byte	0x2
 1393 0100 07       		.uleb128 0x7
 1394 0101 03020000 		.4byte	.LASF22
 1395 0105 03       		.byte	0x3
 1396 0106 98       		.byte	0x98
 1397 0107 6B000000 		.4byte	0x6b
 1398 010b 03       		.byte	0x3
 1399 010c 07       		.uleb128 0x7
 1400 010d 74000000 		.4byte	.LASF23
 1401 0111 03       		.byte	0x3
 1402 0112 99       		.byte	0x99
 1403 0113 6B000000 		.4byte	0x6b
 1404 0117 04       		.byte	0x4
 1405 0118 07       		.uleb128 0x7
 1406 0119 5A020000 		.4byte	.LASF24
 1407 011d 03       		.byte	0x3
 1408 011e 9A       		.byte	0x9a
 1409 011f 6B000000 		.4byte	0x6b
 1410 0123 05       		.byte	0x5
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 71


 1411 0124 07       		.uleb128 0x7
 1412 0125 0C050000 		.4byte	.LASF25
 1413 0129 03       		.byte	0x3
 1414 012a 9B       		.byte	0x9b
 1415 012b 77000000 		.4byte	0x77
 1416 012f 06       		.byte	0x6
 1417 0130 07       		.uleb128 0x7
 1418 0131 F5040000 		.4byte	.LASF26
 1419 0135 03       		.byte	0x3
 1420 0136 9C       		.byte	0x9c
 1421 0137 77000000 		.4byte	0x77
 1422 013b 08       		.byte	0x8
 1423 013c 07       		.uleb128 0x7
 1424 013d 17030000 		.4byte	.LASF27
 1425 0141 03       		.byte	0x3
 1426 0142 9D       		.byte	0x9d
 1427 0143 6B000000 		.4byte	0x6b
 1428 0147 0A       		.byte	0xa
 1429 0148 00       		.byte	0
 1430 0149 08       		.uleb128 0x8
 1431 014a A8040000 		.4byte	.LASF28
 1432 014e 03       		.byte	0x3
 1433 014f 9E       		.byte	0x9e
 1434 0150 D4000000 		.4byte	0xd4
 1435 0154 06       		.uleb128 0x6
 1436 0155 10       		.byte	0x10
 1437 0156 03       		.byte	0x3
 1438 0157 DA       		.byte	0xda
 1439 0158 8D010000 		.4byte	0x18d
 1440 015c 07       		.uleb128 0x7
 1441 015d AE030000 		.4byte	.LASF29
 1442 0161 03       		.byte	0x3
 1443 0162 DC       		.byte	0xdc
 1444 0163 6B000000 		.4byte	0x6b
 1445 0167 00       		.byte	0
 1446 0168 07       		.uleb128 0x7
 1447 0169 B5030000 		.4byte	.LASF30
 1448 016d 03       		.byte	0x3
 1449 016e DD       		.byte	0xdd
 1450 016f 6B000000 		.4byte	0x6b
 1451 0173 01       		.byte	0x1
 1452 0174 07       		.uleb128 0x7
 1453 0175 CD030000 		.4byte	.LASF31
 1454 0179 03       		.byte	0x3
 1455 017a DE       		.byte	0xde
 1456 017b 6B000000 		.4byte	0x6b
 1457 017f 02       		.byte	0x2
 1458 0180 09       		.uleb128 0x9
 1459 0181 67617000 		.ascii	"gap\000"
 1460 0185 03       		.byte	0x3
 1461 0186 DF       		.byte	0xdf
 1462 0187 8D010000 		.4byte	0x18d
 1463 018b 03       		.byte	0x3
 1464 018c 00       		.byte	0
 1465 018d 0A       		.uleb128 0xa
 1466 018e 6B000000 		.4byte	0x6b
 1467 0192 9D010000 		.4byte	0x19d
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 72


 1468 0196 0B       		.uleb128 0xb
 1469 0197 CD000000 		.4byte	0xcd
 1470 019b 0C       		.byte	0xc
 1471 019c 00       		.byte	0
 1472 019d 08       		.uleb128 0x8
 1473 019e E6020000 		.4byte	.LASF32
 1474 01a2 03       		.byte	0x3
 1475 01a3 E0       		.byte	0xe0
 1476 01a4 54010000 		.4byte	0x154
 1477 01a8 06       		.uleb128 0x6
 1478 01a9 10       		.byte	0x10
 1479 01aa 03       		.byte	0x3
 1480 01ab EC       		.byte	0xec
 1481 01ac 29020000 		.4byte	0x229
 1482 01b0 07       		.uleb128 0x7
 1483 01b1 79000000 		.4byte	.LASF33
 1484 01b5 03       		.byte	0x3
 1485 01b6 EE       		.byte	0xee
 1486 01b7 6B000000 		.4byte	0x6b
 1487 01bb 00       		.byte	0
 1488 01bc 07       		.uleb128 0x7
 1489 01bd 03060000 		.4byte	.LASF34
 1490 01c1 03       		.byte	0x3
 1491 01c2 EF       		.byte	0xef
 1492 01c3 6B000000 		.4byte	0x6b
 1493 01c7 01       		.byte	0x1
 1494 01c8 07       		.uleb128 0x7
 1495 01c9 2E020000 		.4byte	.LASF35
 1496 01cd 03       		.byte	0x3
 1497 01ce F0       		.byte	0xf0
 1498 01cf 6B000000 		.4byte	0x6b
 1499 01d3 02       		.byte	0x2
 1500 01d4 07       		.uleb128 0x7
 1501 01d5 61020000 		.4byte	.LASF36
 1502 01d9 03       		.byte	0x3
 1503 01da F1       		.byte	0xf1
 1504 01db 6B000000 		.4byte	0x6b
 1505 01df 03       		.byte	0x3
 1506 01e0 07       		.uleb128 0x7
 1507 01e1 0C020000 		.4byte	.LASF37
 1508 01e5 03       		.byte	0x3
 1509 01e6 F2       		.byte	0xf2
 1510 01e7 6B000000 		.4byte	0x6b
 1511 01eb 04       		.byte	0x4
 1512 01ec 07       		.uleb128 0x7
 1513 01ed FB050000 		.4byte	.LASF38
 1514 01f1 03       		.byte	0x3
 1515 01f2 F3       		.byte	0xf3
 1516 01f3 6B000000 		.4byte	0x6b
 1517 01f7 05       		.byte	0x5
 1518 01f8 07       		.uleb128 0x7
 1519 01f9 F6050000 		.4byte	.LASF39
 1520 01fd 03       		.byte	0x3
 1521 01fe F4       		.byte	0xf4
 1522 01ff 6B000000 		.4byte	0x6b
 1523 0203 06       		.byte	0x6
 1524 0204 07       		.uleb128 0x7
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 73


 1525 0205 A6030000 		.4byte	.LASF40
 1526 0209 03       		.byte	0x3
 1527 020a F5       		.byte	0xf5
 1528 020b 6B000000 		.4byte	0x6b
 1529 020f 07       		.byte	0x7
 1530 0210 07       		.uleb128 0x7
 1531 0211 DE050000 		.4byte	.LASF41
 1532 0215 03       		.byte	0x3
 1533 0216 F6       		.byte	0xf6
 1534 0217 6B000000 		.4byte	0x6b
 1535 021b 08       		.byte	0x8
 1536 021c 09       		.uleb128 0x9
 1537 021d 67617000 		.ascii	"gap\000"
 1538 0221 03       		.byte	0x3
 1539 0222 F7       		.byte	0xf7
 1540 0223 29020000 		.4byte	0x229
 1541 0227 09       		.byte	0x9
 1542 0228 00       		.byte	0
 1543 0229 0A       		.uleb128 0xa
 1544 022a 6B000000 		.4byte	0x6b
 1545 022e 39020000 		.4byte	0x239
 1546 0232 0B       		.uleb128 0xb
 1547 0233 CD000000 		.4byte	0xcd
 1548 0237 06       		.byte	0x6
 1549 0238 00       		.byte	0
 1550 0239 08       		.uleb128 0x8
 1551 023a B9010000 		.4byte	.LASF42
 1552 023e 03       		.byte	0x3
 1553 023f F8       		.byte	0xf8
 1554 0240 A8010000 		.4byte	0x1a8
 1555 0244 0C       		.uleb128 0xc
 1556 0245 90       		.byte	0x90
 1557 0246 03       		.byte	0x3
 1558 0247 1401     		.2byte	0x114
 1559 0249 5B020000 		.4byte	0x25b
 1560 024d 0D       		.uleb128 0xd
 1561 024e 54020000 		.4byte	.LASF43
 1562 0252 03       		.byte	0x3
 1563 0253 1601     		.2byte	0x116
 1564 0255 5B020000 		.4byte	0x25b
 1565 0259 00       		.byte	0
 1566 025a 00       		.byte	0
 1567 025b 0A       		.uleb128 0xa
 1568 025c 9D010000 		.4byte	0x19d
 1569 0260 6B020000 		.4byte	0x26b
 1570 0264 0B       		.uleb128 0xb
 1571 0265 CD000000 		.4byte	0xcd
 1572 0269 08       		.byte	0x8
 1573 026a 00       		.byte	0
 1574 026b 04       		.uleb128 0x4
 1575 026c 7F000000 		.4byte	.LASF44
 1576 0270 03       		.byte	0x3
 1577 0271 1701     		.2byte	0x117
 1578 0273 44020000 		.4byte	0x244
 1579 0277 0C       		.uleb128 0xc
 1580 0278 90       		.byte	0x90
 1581 0279 03       		.byte	0x3
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 74


 1582 027a 1A01     		.2byte	0x11a
 1583 027c 8E020000 		.4byte	0x28e
 1584 0280 0D       		.uleb128 0xd
 1585 0281 11030000 		.4byte	.LASF45
 1586 0285 03       		.byte	0x3
 1587 0286 1C01     		.2byte	0x11c
 1588 0288 8E020000 		.4byte	0x28e
 1589 028c 00       		.byte	0
 1590 028d 00       		.byte	0
 1591 028e 0A       		.uleb128 0xa
 1592 028f 39020000 		.4byte	0x239
 1593 0293 9E020000 		.4byte	0x29e
 1594 0297 0B       		.uleb128 0xb
 1595 0298 CD000000 		.4byte	0xcd
 1596 029c 08       		.byte	0x8
 1597 029d 00       		.byte	0
 1598 029e 04       		.uleb128 0x4
 1599 029f 94000000 		.4byte	.LASF46
 1600 02a3 03       		.byte	0x3
 1601 02a4 1D01     		.2byte	0x11d
 1602 02a6 77020000 		.4byte	0x277
 1603 02aa 0E       		.uleb128 0xe
 1604 02ab 25060000 		.4byte	.LASF101
 1605 02af 01       		.byte	0x1
 1606 02b0 D603     		.2byte	0x3d6
 1607 02b2 77000000 		.4byte	0x77
 1608 02b6 01       		.byte	0x1
 1609 02b7 D4020000 		.4byte	0x2d4
 1610 02bb 0F       		.uleb128 0xf
 1611 02bc A9000000 		.4byte	.LASF61
 1612 02c0 01       		.byte	0x1
 1613 02c1 D603     		.2byte	0x3d6
 1614 02c3 6B000000 		.4byte	0x6b
 1615 02c7 10       		.uleb128 0x10
 1616 02c8 CD010000 		.4byte	.LASF102
 1617 02cc 01       		.byte	0x1
 1618 02cd D803     		.2byte	0x3d8
 1619 02cf 77000000 		.4byte	0x77
 1620 02d3 00       		.byte	0
 1621 02d4 11       		.uleb128 0x11
 1622 02d5 ED030000 		.4byte	.LASF47
 1623 02d9 01       		.byte	0x1
 1624 02da D3       		.byte	0xd3
 1625 02db 00000000 		.4byte	.LFB1
 1626 02df 28010000 		.4byte	.LFE1-.LFB1
 1627 02e3 01       		.uleb128 0x1
 1628 02e4 9C       		.byte	0x9c
 1629 02e5 67040000 		.4byte	0x467
 1630 02e9 12       		.uleb128 0x12
 1631 02ea B9050000 		.4byte	.LASF51
 1632 02ee 01       		.byte	0x1
 1633 02ef FA       		.byte	0xfa
 1634 02f0 6B000000 		.4byte	0x6b
 1635 02f4 00000000 		.4byte	.LLST0
 1636 02f8 13       		.uleb128 0x13
 1637 02f9 06000000 		.4byte	.LVL0
 1638 02fd 7E090000 		.4byte	0x97e
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 75


 1639 0301 14       		.uleb128 0x14
 1640 0302 3C000000 		.4byte	.LVL2
 1641 0306 89090000 		.4byte	0x989
 1642 030a 14030000 		.4byte	0x314
 1643 030e 15       		.uleb128 0x15
 1644 030f 01       		.uleb128 0x1
 1645 0310 50       		.byte	0x50
 1646 0311 01       		.uleb128 0x1
 1647 0312 30       		.byte	0x30
 1648 0313 00       		.byte	0
 1649 0314 14       		.uleb128 0x14
 1650 0315 5A000000 		.4byte	.LVL3
 1651 0319 89090000 		.4byte	0x989
 1652 031d 28030000 		.4byte	0x328
 1653 0321 15       		.uleb128 0x15
 1654 0322 01       		.uleb128 0x1
 1655 0323 50       		.byte	0x50
 1656 0324 02       		.uleb128 0x2
 1657 0325 75       		.byte	0x75
 1658 0326 00       		.sleb128 0
 1659 0327 00       		.byte	0
 1660 0328 14       		.uleb128 0x14
 1661 0329 60000000 		.4byte	.LVL4
 1662 032d 89090000 		.4byte	0x989
 1663 0331 3C030000 		.4byte	0x33c
 1664 0335 15       		.uleb128 0x15
 1665 0336 01       		.uleb128 0x1
 1666 0337 50       		.byte	0x50
 1667 0338 02       		.uleb128 0x2
 1668 0339 08       		.byte	0x8
 1669 033a 28       		.byte	0x28
 1670 033b 00       		.byte	0
 1671 033c 14       		.uleb128 0x14
 1672 033d 7E000000 		.4byte	.LVL5
 1673 0341 89090000 		.4byte	0x989
 1674 0345 50030000 		.4byte	0x350
 1675 0349 15       		.uleb128 0x15
 1676 034a 01       		.uleb128 0x1
 1677 034b 50       		.byte	0x50
 1678 034c 02       		.uleb128 0x2
 1679 034d 77       		.byte	0x77
 1680 034e 00       		.sleb128 0
 1681 034f 00       		.byte	0
 1682 0350 14       		.uleb128 0x14
 1683 0351 94000000 		.4byte	.LVL6
 1684 0355 94090000 		.4byte	0x994
 1685 0359 64030000 		.4byte	0x364
 1686 035d 15       		.uleb128 0x15
 1687 035e 01       		.uleb128 0x1
 1688 035f 50       		.byte	0x50
 1689 0360 02       		.uleb128 0x2
 1690 0361 76       		.byte	0x76
 1691 0362 00       		.sleb128 0
 1692 0363 00       		.byte	0
 1693 0364 14       		.uleb128 0x14
 1694 0365 9C000000 		.4byte	.LVL7
 1695 0369 9F090000 		.4byte	0x99f
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 76


 1696 036d 7C030000 		.4byte	0x37c
 1697 0371 15       		.uleb128 0x15
 1698 0372 01       		.uleb128 0x1
 1699 0373 50       		.byte	0x50
 1700 0374 01       		.uleb128 0x1
 1701 0375 47       		.byte	0x47
 1702 0376 15       		.uleb128 0x15
 1703 0377 01       		.uleb128 0x1
 1704 0378 51       		.byte	0x51
 1705 0379 01       		.uleb128 0x1
 1706 037a 37       		.byte	0x37
 1707 037b 00       		.byte	0
 1708 037c 14       		.uleb128 0x14
 1709 037d A4000000 		.4byte	.LVL8
 1710 0381 AA090000 		.4byte	0x9aa
 1711 0385 8F030000 		.4byte	0x38f
 1712 0389 15       		.uleb128 0x15
 1713 038a 01       		.uleb128 0x1
 1714 038b 50       		.byte	0x50
 1715 038c 01       		.uleb128 0x1
 1716 038d 47       		.byte	0x47
 1717 038e 00       		.byte	0
 1718 038f 14       		.uleb128 0x14
 1719 0390 AC000000 		.4byte	.LVL9
 1720 0394 9F090000 		.4byte	0x99f
 1721 0398 A7030000 		.4byte	0x3a7
 1722 039c 15       		.uleb128 0x15
 1723 039d 01       		.uleb128 0x1
 1724 039e 50       		.byte	0x50
 1725 039f 01       		.uleb128 0x1
 1726 03a0 48       		.byte	0x48
 1727 03a1 15       		.uleb128 0x15
 1728 03a2 01       		.uleb128 0x1
 1729 03a3 51       		.byte	0x51
 1730 03a4 01       		.uleb128 0x1
 1731 03a5 37       		.byte	0x37
 1732 03a6 00       		.byte	0
 1733 03a7 14       		.uleb128 0x14
 1734 03a8 B4000000 		.4byte	.LVL10
 1735 03ac AA090000 		.4byte	0x9aa
 1736 03b0 BA030000 		.4byte	0x3ba
 1737 03b4 15       		.uleb128 0x15
 1738 03b5 01       		.uleb128 0x1
 1739 03b6 50       		.byte	0x50
 1740 03b7 01       		.uleb128 0x1
 1741 03b8 48       		.byte	0x48
 1742 03b9 00       		.byte	0
 1743 03ba 14       		.uleb128 0x14
 1744 03bb BC000000 		.4byte	.LVL11
 1745 03bf 9F090000 		.4byte	0x99f
 1746 03c3 D2030000 		.4byte	0x3d2
 1747 03c7 15       		.uleb128 0x15
 1748 03c8 01       		.uleb128 0x1
 1749 03c9 50       		.byte	0x50
 1750 03ca 01       		.uleb128 0x1
 1751 03cb 45       		.byte	0x45
 1752 03cc 15       		.uleb128 0x15
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 77


 1753 03cd 01       		.uleb128 0x1
 1754 03ce 51       		.byte	0x51
 1755 03cf 01       		.uleb128 0x1
 1756 03d0 37       		.byte	0x37
 1757 03d1 00       		.byte	0
 1758 03d2 14       		.uleb128 0x14
 1759 03d3 C4000000 		.4byte	.LVL12
 1760 03d7 AA090000 		.4byte	0x9aa
 1761 03db E5030000 		.4byte	0x3e5
 1762 03df 15       		.uleb128 0x15
 1763 03e0 01       		.uleb128 0x1
 1764 03e1 50       		.byte	0x50
 1765 03e2 01       		.uleb128 0x1
 1766 03e3 45       		.byte	0x45
 1767 03e4 00       		.byte	0
 1768 03e5 14       		.uleb128 0x14
 1769 03e6 CC000000 		.4byte	.LVL13
 1770 03ea 9F090000 		.4byte	0x99f
 1771 03ee FE030000 		.4byte	0x3fe
 1772 03f2 15       		.uleb128 0x15
 1773 03f3 01       		.uleb128 0x1
 1774 03f4 50       		.byte	0x50
 1775 03f5 02       		.uleb128 0x2
 1776 03f6 74       		.byte	0x74
 1777 03f7 00       		.sleb128 0
 1778 03f8 15       		.uleb128 0x15
 1779 03f9 01       		.uleb128 0x1
 1780 03fa 51       		.byte	0x51
 1781 03fb 01       		.uleb128 0x1
 1782 03fc 37       		.byte	0x37
 1783 03fd 00       		.byte	0
 1784 03fe 14       		.uleb128 0x14
 1785 03ff D4000000 		.4byte	.LVL14
 1786 0403 AA090000 		.4byte	0x9aa
 1787 0407 12040000 		.4byte	0x412
 1788 040b 15       		.uleb128 0x15
 1789 040c 01       		.uleb128 0x1
 1790 040d 50       		.byte	0x50
 1791 040e 02       		.uleb128 0x2
 1792 040f 74       		.byte	0x74
 1793 0410 00       		.sleb128 0
 1794 0411 00       		.byte	0
 1795 0412 14       		.uleb128 0x14
 1796 0413 DC000000 		.4byte	.LVL15
 1797 0417 9F090000 		.4byte	0x99f
 1798 041b 2B040000 		.4byte	0x42b
 1799 041f 15       		.uleb128 0x15
 1800 0420 01       		.uleb128 0x1
 1801 0421 50       		.byte	0x50
 1802 0422 02       		.uleb128 0x2
 1803 0423 75       		.byte	0x75
 1804 0424 00       		.sleb128 0
 1805 0425 15       		.uleb128 0x15
 1806 0426 01       		.uleb128 0x1
 1807 0427 51       		.byte	0x51
 1808 0428 01       		.uleb128 0x1
 1809 0429 37       		.byte	0x37
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 78


 1810 042a 00       		.byte	0
 1811 042b 14       		.uleb128 0x14
 1812 042c E4000000 		.4byte	.LVL16
 1813 0430 AA090000 		.4byte	0x9aa
 1814 0434 3F040000 		.4byte	0x43f
 1815 0438 15       		.uleb128 0x15
 1816 0439 01       		.uleb128 0x1
 1817 043a 50       		.byte	0x50
 1818 043b 02       		.uleb128 0x2
 1819 043c 75       		.byte	0x75
 1820 043d 00       		.sleb128 0
 1821 043e 00       		.byte	0
 1822 043f 14       		.uleb128 0x14
 1823 0440 EC000000 		.4byte	.LVL17
 1824 0444 9F090000 		.4byte	0x99f
 1825 0448 57040000 		.4byte	0x457
 1826 044c 15       		.uleb128 0x15
 1827 044d 01       		.uleb128 0x1
 1828 044e 50       		.byte	0x50
 1829 044f 01       		.uleb128 0x1
 1830 0450 3C       		.byte	0x3c
 1831 0451 15       		.uleb128 0x15
 1832 0452 01       		.uleb128 0x1
 1833 0453 51       		.byte	0x51
 1834 0454 01       		.uleb128 0x1
 1835 0455 37       		.byte	0x37
 1836 0456 00       		.byte	0
 1837 0457 16       		.uleb128 0x16
 1838 0458 F8000000 		.4byte	.LVL19
 1839 045c AA090000 		.4byte	0x9aa
 1840 0460 15       		.uleb128 0x15
 1841 0461 01       		.uleb128 0x1
 1842 0462 50       		.byte	0x50
 1843 0463 01       		.uleb128 0x1
 1844 0464 3C       		.byte	0x3c
 1845 0465 00       		.byte	0
 1846 0466 00       		.byte	0
 1847 0467 17       		.uleb128 0x17
 1848 0468 3A020000 		.4byte	.LASF48
 1849 046c 01       		.byte	0x1
 1850 046d CC01     		.2byte	0x1cc
 1851 046f 00000000 		.4byte	.LFB2
 1852 0473 A8000000 		.4byte	.LFE2-.LFB2
 1853 0477 01       		.uleb128 0x1
 1854 0478 9C       		.byte	0x9c
 1855 0479 BB040000 		.4byte	0x4bb
 1856 047d 18       		.uleb128 0x18
 1857 047e B2000000 		.4byte	.LASF49
 1858 0482 01       		.byte	0x1
 1859 0483 CC01     		.2byte	0x1cc
 1860 0485 6B000000 		.4byte	0x6b
 1861 0489 13000000 		.4byte	.LLST1
 1862 048d 18       		.uleb128 0x18
 1863 048e F0040000 		.4byte	.LASF50
 1864 0492 01       		.byte	0x1
 1865 0493 CC01     		.2byte	0x1cc
 1866 0495 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 79


 1867 0499 40000000 		.4byte	.LLST2
 1868 049d 19       		.uleb128 0x19
 1869 049e 6900     		.ascii	"i\000"
 1870 04a0 01       		.byte	0x1
 1871 04a1 D301     		.2byte	0x1d3
 1872 04a3 6B000000 		.4byte	0x6b
 1873 04a7 61000000 		.4byte	.LLST3
 1874 04ab 1A       		.uleb128 0x1a
 1875 04ac 6A000000 		.4byte	.LVL25
 1876 04b0 B5090000 		.4byte	0x9b5
 1877 04b4 15       		.uleb128 0x15
 1878 04b5 01       		.uleb128 0x1
 1879 04b6 50       		.byte	0x50
 1880 04b7 01       		.uleb128 0x1
 1881 04b8 31       		.byte	0x31
 1882 04b9 00       		.byte	0
 1883 04ba 00       		.byte	0
 1884 04bb 11       		.uleb128 0x11
 1885 04bc 00050000 		.4byte	.LASF52
 1886 04c0 01       		.byte	0x1
 1887 04c1 BA       		.byte	0xba
 1888 04c2 00000000 		.4byte	.LFB0
 1889 04c6 24000000 		.4byte	.LFE0-.LFB0
 1890 04ca 01       		.uleb128 0x1
 1891 04cb 9C       		.byte	0x9c
 1892 04cc 01050000 		.4byte	0x501
 1893 04d0 1B       		.uleb128 0x1b
 1894 04d1 B2000000 		.4byte	.LASF49
 1895 04d5 01       		.byte	0x1
 1896 04d6 BA       		.byte	0xba
 1897 04d7 6B000000 		.4byte	0x6b
 1898 04db 81000000 		.4byte	.LLST4
 1899 04df 1B       		.uleb128 0x1b
 1900 04e0 F0040000 		.4byte	.LASF50
 1901 04e4 01       		.byte	0x1
 1902 04e5 BA       		.byte	0xba
 1903 04e6 6B000000 		.4byte	0x6b
 1904 04ea A2000000 		.4byte	.LLST5
 1905 04ee 13       		.uleb128 0x13
 1906 04ef 10000000 		.4byte	.LVL27
 1907 04f3 D4020000 		.4byte	0x2d4
 1908 04f7 1C       		.uleb128 0x1c
 1909 04f8 20000000 		.4byte	.LVL28
 1910 04fc 67040000 		.4byte	0x467
 1911 0500 00       		.byte	0
 1912 0501 17       		.uleb128 0x17
 1913 0502 A3050000 		.4byte	.LASF53
 1914 0506 01       		.byte	0x1
 1915 0507 9F02     		.2byte	0x29f
 1916 0509 00000000 		.4byte	.LFB3
 1917 050d 58000000 		.4byte	.LFE3-.LFB3
 1918 0511 01       		.uleb128 0x1
 1919 0512 9C       		.byte	0x9c
 1920 0513 26050000 		.4byte	0x526
 1921 0517 19       		.uleb128 0x19
 1922 0518 6900     		.ascii	"i\000"
 1923 051a 01       		.byte	0x1
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 80


 1924 051b A502     		.2byte	0x2a5
 1925 051d 6B000000 		.4byte	0x6b
 1926 0521 C3000000 		.4byte	.LLST6
 1927 0525 00       		.byte	0
 1928 0526 17       		.uleb128 0x17
 1929 0527 D2010000 		.4byte	.LASF54
 1930 052b 01       		.byte	0x1
 1931 052c D902     		.2byte	0x2d9
 1932 052e 00000000 		.4byte	.LFB4
 1933 0532 B0000000 		.4byte	.LFE4-.LFB4
 1934 0536 01       		.uleb128 0x1
 1935 0537 9C       		.byte	0x9c
 1936 0538 68050000 		.4byte	0x568
 1937 053c 1D       		.uleb128 0x1d
 1938 053d B9050000 		.4byte	.LASF51
 1939 0541 01       		.byte	0x1
 1940 0542 DB02     		.2byte	0x2db
 1941 0544 6B000000 		.4byte	0x6b
 1942 0548 E3000000 		.4byte	.LLST7
 1943 054c 13       		.uleb128 0x13
 1944 054d 06000000 		.4byte	.LVL31
 1945 0551 7E090000 		.4byte	0x97e
 1946 0555 13       		.uleb128 0x13
 1947 0556 44000000 		.4byte	.LVL32
 1948 055a 94090000 		.4byte	0x994
 1949 055e 13       		.uleb128 0x13
 1950 055f 64000000 		.4byte	.LVL33
 1951 0563 C0090000 		.4byte	0x9c0
 1952 0567 00       		.byte	0
 1953 0568 1E       		.uleb128 0x1e
 1954 0569 CA050000 		.4byte	.LASF56
 1955 056d 01       		.byte	0x1
 1956 056e 5103     		.2byte	0x351
 1957 0570 6B000000 		.4byte	0x6b
 1958 0574 00000000 		.4byte	.LFB5
 1959 0578 18000000 		.4byte	.LFE5-.LFB5
 1960 057c 01       		.uleb128 0x1
 1961 057d 9C       		.byte	0x9c
 1962 057e 93050000 		.4byte	0x593
 1963 0582 1D       		.uleb128 0x1d
 1964 0583 21030000 		.4byte	.LASF55
 1965 0587 01       		.byte	0x1
 1966 0588 5303     		.2byte	0x353
 1967 058a 6B000000 		.4byte	0x6b
 1968 058e F6000000 		.4byte	.LLST8
 1969 0592 00       		.byte	0
 1970 0593 1F       		.uleb128 0x1f
 1971 0594 E6010000 		.4byte	.LASF75
 1972 0598 01       		.byte	0x1
 1973 0599 6803     		.2byte	0x368
 1974 059b 6B000000 		.4byte	0x6b
 1975 059f 00000000 		.4byte	.LFB6
 1976 05a3 0C000000 		.4byte	.LFE6-.LFB6
 1977 05a7 01       		.uleb128 0x1
 1978 05a8 9C       		.byte	0x9c
 1979 05a9 1E       		.uleb128 0x1e
 1980 05aa 61010000 		.4byte	.LASF57
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 81


 1981 05ae 01       		.byte	0x1
 1982 05af 8203     		.2byte	0x382
 1983 05b1 6B000000 		.4byte	0x6b
 1984 05b5 00000000 		.4byte	.LFB7
 1985 05b9 18000000 		.4byte	.LFE7-.LFB7
 1986 05bd 01       		.uleb128 0x1
 1987 05be 9C       		.byte	0x9c
 1988 05bf D4050000 		.4byte	0x5d4
 1989 05c3 19       		.uleb128 0x19
 1990 05c4 72657300 		.ascii	"res\000"
 1991 05c8 01       		.byte	0x1
 1992 05c9 8403     		.2byte	0x384
 1993 05cb 6B000000 		.4byte	0x6b
 1994 05cf 09010000 		.4byte	.LLST9
 1995 05d3 00       		.byte	0
 1996 05d4 1E       		.uleb128 0x1e
 1997 05d5 0B060000 		.4byte	.LASF58
 1998 05d9 01       		.byte	0x1
 1999 05da 9F03     		.2byte	0x39f
 2000 05dc 6B000000 		.4byte	0x6b
 2001 05e0 00000000 		.4byte	.LFB8
 2002 05e4 0C000000 		.4byte	.LFE8-.LFB8
 2003 05e8 01       		.uleb128 0x1
 2004 05e9 9C       		.byte	0x9c
 2005 05ea FF050000 		.4byte	0x5ff
 2006 05ee 18       		.uleb128 0x18
 2007 05ef 17050000 		.4byte	.LASF59
 2008 05f3 01       		.byte	0x1
 2009 05f4 9F03     		.2byte	0x39f
 2010 05f6 6B000000 		.4byte	0x6b
 2011 05fa 28010000 		.4byte	.LLST10
 2012 05fe 00       		.byte	0
 2013 05ff 1E       		.uleb128 0x1e
 2014 0600 92050000 		.4byte	.LASF60
 2015 0604 01       		.byte	0x1
 2016 0605 BF03     		.2byte	0x3bf
 2017 0607 6B000000 		.4byte	0x6b
 2018 060b 00000000 		.4byte	.LFB9
 2019 060f 10000000 		.4byte	.LFE9-.LFB9
 2020 0613 01       		.uleb128 0x1
 2021 0614 9C       		.byte	0x9c
 2022 0615 2A060000 		.4byte	0x62a
 2023 0619 18       		.uleb128 0x18
 2024 061a A9000000 		.4byte	.LASF61
 2025 061e 01       		.byte	0x1
 2026 061f BF03     		.2byte	0x3bf
 2027 0621 6B000000 		.4byte	0x6b
 2028 0625 49010000 		.4byte	.LLST11
 2029 0629 00       		.byte	0
 2030 062a 20       		.uleb128 0x20
 2031 062b AA020000 		.4byte	0x2aa
 2032 062f 00000000 		.4byte	.LFB10
 2033 0633 28000000 		.4byte	.LFE10-.LFB10
 2034 0637 01       		.uleb128 0x1
 2035 0638 9C       		.byte	0x9c
 2036 0639 76060000 		.4byte	0x676
 2037 063d 21       		.uleb128 0x21
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 82


 2038 063e BB020000 		.4byte	0x2bb
 2039 0642 6A010000 		.4byte	.LLST12
 2040 0646 22       		.uleb128 0x22
 2041 0647 C7020000 		.4byte	0x2c7
 2042 064b A4010000 		.4byte	.LLST13
 2043 064f 23       		.uleb128 0x23
 2044 0650 06000000 		.4byte	.LBB4
 2045 0654 1A000000 		.4byte	.LBE4-.LBB4
 2046 0658 21       		.uleb128 0x21
 2047 0659 BB020000 		.4byte	0x2bb
 2048 065d C3010000 		.4byte	.LLST14
 2049 0661 23       		.uleb128 0x23
 2050 0662 06000000 		.4byte	.LBB5
 2051 0666 1A000000 		.4byte	.LBE5-.LBB5
 2052 066a 22       		.uleb128 0x22
 2053 066b C7020000 		.4byte	0x2c7
 2054 066f E4010000 		.4byte	.LLST15
 2055 0673 00       		.byte	0
 2056 0674 00       		.byte	0
 2057 0675 00       		.byte	0
 2058 0676 17       		.uleb128 0x17
 2059 0677 97030000 		.4byte	.LASF62
 2060 067b 01       		.byte	0x1
 2061 067c 3E05     		.2byte	0x53e
 2062 067e 00000000 		.4byte	.LFB11
 2063 0682 7C000000 		.4byte	.LFE11-.LFB11
 2064 0686 01       		.uleb128 0x1
 2065 0687 9C       		.byte	0x9c
 2066 0688 D3060000 		.4byte	0x6d3
 2067 068c 18       		.uleb128 0x18
 2068 068d A9000000 		.4byte	.LASF61
 2069 0691 01       		.byte	0x1
 2070 0692 3E05     		.2byte	0x53e
 2071 0694 6B000000 		.4byte	0x6b
 2072 0698 13020000 		.4byte	.LLST16
 2073 069c 24       		.uleb128 0x24
 2074 069d 4E020000 		.4byte	.LASF63
 2075 06a1 01       		.byte	0x1
 2076 06a2 3E05     		.2byte	0x53e
 2077 06a4 D3060000 		.4byte	0x6d3
 2078 06a8 01       		.uleb128 0x1
 2079 06a9 51       		.byte	0x51
 2080 06aa 18       		.uleb128 0x18
 2081 06ab E4040000 		.4byte	.LASF64
 2082 06af 01       		.byte	0x1
 2083 06b0 3E05     		.2byte	0x53e
 2084 06b2 77000000 		.4byte	0x77
 2085 06b6 3F020000 		.4byte	.LLST17
 2086 06ba 23       		.uleb128 0x23
 2087 06bb 58000000 		.4byte	.LBB6
 2088 06bf 24000000 		.4byte	.LBE6-.LBB6
 2089 06c3 19       		.uleb128 0x19
 2090 06c4 6900     		.ascii	"i\000"
 2091 06c6 01       		.byte	0x1
 2092 06c7 5305     		.2byte	0x553
 2093 06c9 77000000 		.4byte	0x77
 2094 06cd 76020000 		.4byte	.LLST18
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 83


 2095 06d1 00       		.byte	0
 2096 06d2 00       		.byte	0
 2097 06d3 25       		.uleb128 0x25
 2098 06d4 04       		.byte	0x4
 2099 06d5 D9060000 		.4byte	0x6d9
 2100 06d9 26       		.uleb128 0x26
 2101 06da 6B000000 		.4byte	0x6b
 2102 06de 17       		.uleb128 0x17
 2103 06df 60040000 		.4byte	.LASF65
 2104 06e3 01       		.byte	0x1
 2105 06e4 E408     		.2byte	0x8e4
 2106 06e6 00000000 		.4byte	.LFB13
 2107 06ea 28000000 		.4byte	.LFE13-.LFB13
 2108 06ee 01       		.uleb128 0x1
 2109 06ef 9C       		.byte	0x9c
 2110 06f0 05070000 		.4byte	0x705
 2111 06f4 18       		.uleb128 0x18
 2112 06f5 A9000000 		.4byte	.LASF61
 2113 06f9 01       		.byte	0x1
 2114 06fa E408     		.2byte	0x8e4
 2115 06fc 6B000000 		.4byte	0x6b
 2116 0700 9E020000 		.4byte	.LLST19
 2117 0704 00       		.byte	0
 2118 0705 1E       		.uleb128 0x1e
 2119 0706 6A020000 		.4byte	.LASF66
 2120 070a 01       		.byte	0x1
 2121 070b 7506     		.2byte	0x675
 2122 070d 77000000 		.4byte	0x77
 2123 0711 00000000 		.4byte	.LFB12
 2124 0715 4C000000 		.4byte	.LFE12-.LFB12
 2125 0719 01       		.uleb128 0x1
 2126 071a 9C       		.byte	0x9c
 2127 071b A4070000 		.4byte	0x7a4
 2128 071f 18       		.uleb128 0x18
 2129 0720 A9000000 		.4byte	.LASF61
 2130 0724 01       		.byte	0x1
 2131 0725 7506     		.2byte	0x675
 2132 0727 6B000000 		.4byte	0x6b
 2133 072b BF020000 		.4byte	.LLST20
 2134 072f 18       		.uleb128 0x18
 2135 0730 4E020000 		.4byte	.LASF63
 2136 0734 01       		.byte	0x1
 2137 0735 7506     		.2byte	0x675
 2138 0737 A4070000 		.4byte	0x7a4
 2139 073b F9020000 		.4byte	.LLST21
 2140 073f 18       		.uleb128 0x18
 2141 0740 E4040000 		.4byte	.LASF64
 2142 0744 01       		.byte	0x1
 2143 0745 7506     		.2byte	0x675
 2144 0747 77000000 		.4byte	0x77
 2145 074b 33030000 		.4byte	.LLST22
 2146 074f 27       		.uleb128 0x27
 2147 0750 1E000000 		.4byte	.LBB7
 2148 0754 18000000 		.4byte	.LBE7-.LBB7
 2149 0758 6B070000 		.4byte	0x76b
 2150 075c 19       		.uleb128 0x19
 2151 075d 6900     		.ascii	"i\000"
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 84


 2152 075f 01       		.byte	0x1
 2153 0760 8206     		.2byte	0x682
 2154 0762 77000000 		.4byte	0x77
 2155 0766 75030000 		.4byte	.LLST23
 2156 076a 00       		.byte	0
 2157 076b 14       		.uleb128 0x14
 2158 076c 12000000 		.4byte	.LVL65
 2159 0770 AA020000 		.4byte	0x2aa
 2160 0774 7F070000 		.4byte	0x77f
 2161 0778 15       		.uleb128 0x15
 2162 0779 01       		.uleb128 0x1
 2163 077a 50       		.byte	0x50
 2164 077b 02       		.uleb128 0x2
 2165 077c 75       		.byte	0x75
 2166 077d 00       		.sleb128 0
 2167 077e 00       		.byte	0
 2168 077f 14       		.uleb128 0x14
 2169 0780 1C000000 		.4byte	.LVL66
 2170 0784 AA020000 		.4byte	0x2aa
 2171 0788 93070000 		.4byte	0x793
 2172 078c 15       		.uleb128 0x15
 2173 078d 01       		.uleb128 0x1
 2174 078e 50       		.byte	0x50
 2175 078f 02       		.uleb128 0x2
 2176 0790 75       		.byte	0x75
 2177 0791 00       		.sleb128 0
 2178 0792 00       		.byte	0
 2179 0793 1A       		.uleb128 0x1a
 2180 0794 3C000000 		.4byte	.LVL70
 2181 0798 DE060000 		.4byte	0x6de
 2182 079c 15       		.uleb128 0x15
 2183 079d 01       		.uleb128 0x1
 2184 079e 50       		.byte	0x50
 2185 079f 02       		.uleb128 0x2
 2186 07a0 75       		.byte	0x75
 2187 07a1 00       		.sleb128 0
 2188 07a2 00       		.byte	0
 2189 07a3 00       		.byte	0
 2190 07a4 25       		.uleb128 0x25
 2191 07a5 04       		.byte	0x4
 2192 07a6 6B000000 		.4byte	0x6b
 2193 07aa 17       		.uleb128 0x17
 2194 07ab E3050000 		.4byte	.LASF67
 2195 07af 01       		.byte	0x1
 2196 07b0 FC08     		.2byte	0x8fc
 2197 07b2 00000000 		.4byte	.LFB14
 2198 07b6 14000000 		.4byte	.LFE14-.LFB14
 2199 07ba 01       		.uleb128 0x1
 2200 07bb 9C       		.byte	0x9c
 2201 07bc D1070000 		.4byte	0x7d1
 2202 07c0 18       		.uleb128 0x18
 2203 07c1 A9000000 		.4byte	.LASF61
 2204 07c5 01       		.byte	0x1
 2205 07c6 FC08     		.2byte	0x8fc
 2206 07c8 6B000000 		.4byte	0x6b
 2207 07cc 9A030000 		.4byte	.LLST24
 2208 07d0 00       		.byte	0
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 85


 2209 07d1 17       		.uleb128 0x17
 2210 07d2 3D000000 		.4byte	.LASF68
 2211 07d6 01       		.byte	0x1
 2212 07d7 1A09     		.2byte	0x91a
 2213 07d9 00000000 		.4byte	.LFB15
 2214 07dd 0C000000 		.4byte	.LFE15-.LFB15
 2215 07e1 01       		.uleb128 0x1
 2216 07e2 9C       		.byte	0x9c
 2217 07e3 F6070000 		.4byte	0x7f6
 2218 07e7 24       		.uleb128 0x24
 2219 07e8 CA040000 		.4byte	.LASF69
 2220 07ec 01       		.byte	0x1
 2221 07ed 1A09     		.2byte	0x91a
 2222 07ef 6B000000 		.4byte	0x6b
 2223 07f3 01       		.uleb128 0x1
 2224 07f4 50       		.byte	0x50
 2225 07f5 00       		.byte	0
 2226 07f6 1E       		.uleb128 0x1e
 2227 07f7 60000000 		.4byte	.LASF70
 2228 07fb 01       		.byte	0x1
 2229 07fc 3309     		.2byte	0x933
 2230 07fe 6B000000 		.4byte	0x6b
 2231 0802 00000000 		.4byte	.LFB16
 2232 0806 1C000000 		.4byte	.LFE16-.LFB16
 2233 080a 01       		.uleb128 0x1
 2234 080b 9C       		.byte	0x9c
 2235 080c 30080000 		.4byte	0x830
 2236 0810 18       		.uleb128 0x18
 2237 0811 A9000000 		.4byte	.LASF61
 2238 0815 01       		.byte	0x1
 2239 0816 3309     		.2byte	0x933
 2240 0818 6B000000 		.4byte	0x6b
 2241 081c BB030000 		.4byte	.LLST25
 2242 0820 19       		.uleb128 0x19
 2243 0821 637200   		.ascii	"cr\000"
 2244 0824 01       		.byte	0x1
 2245 0825 3509     		.2byte	0x935
 2246 0827 6B000000 		.4byte	0x6b
 2247 082b DC030000 		.4byte	.LLST26
 2248 082f 00       		.byte	0
 2249 0830 17       		.uleb128 0x17
 2250 0831 66030000 		.4byte	.LASF71
 2251 0835 01       		.byte	0x1
 2252 0836 5C09     		.2byte	0x95c
 2253 0838 00000000 		.4byte	.LFB17
 2254 083c 18000000 		.4byte	.LFE17-.LFB17
 2255 0840 01       		.uleb128 0x1
 2256 0841 9C       		.byte	0x9c
 2257 0842 55080000 		.4byte	0x855
 2258 0846 24       		.uleb128 0x24
 2259 0847 22020000 		.4byte	.LASF72
 2260 084b 01       		.byte	0x1
 2261 084c 5C09     		.2byte	0x95c
 2262 084e 6B000000 		.4byte	0x6b
 2263 0852 01       		.uleb128 0x1
 2264 0853 50       		.byte	0x50
 2265 0854 00       		.byte	0
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 86


 2266 0855 1E       		.uleb128 0x1e
 2267 0856 A8010000 		.4byte	.LASF73
 2268 085a 01       		.byte	0x1
 2269 085b 9509     		.2byte	0x995
 2270 085d 6B000000 		.4byte	0x6b
 2271 0861 00000000 		.4byte	.LFB18
 2272 0865 10000000 		.4byte	.LFE18-.LFB18
 2273 0869 01       		.uleb128 0x1
 2274 086a 9C       		.byte	0x9c
 2275 086b 80080000 		.4byte	0x880
 2276 086f 1D       		.uleb128 0x1d
 2277 0870 36060000 		.4byte	.LASF74
 2278 0874 01       		.byte	0x1
 2279 0875 9709     		.2byte	0x997
 2280 0877 6B000000 		.4byte	0x6b
 2281 087b FB030000 		.4byte	.LLST27
 2282 087f 00       		.byte	0
 2283 0880 1F       		.uleb128 0x1f
 2284 0881 AD020000 		.4byte	.LASF76
 2285 0885 01       		.byte	0x1
 2286 0886 AD09     		.2byte	0x9ad
 2287 0888 6B000000 		.4byte	0x6b
 2288 088c 00000000 		.4byte	.LFB19
 2289 0890 10000000 		.4byte	.LFE19-.LFB19
 2290 0894 01       		.uleb128 0x1
 2291 0895 9C       		.byte	0x9c
 2292 0896 28       		.uleb128 0x28
 2293 0897 49030000 		.4byte	.LASF77
 2294 089b 01       		.byte	0x1
 2295 089c BB09     		.2byte	0x9bb
 2296 089e 00000000 		.4byte	.LFB20
 2297 08a2 10000000 		.4byte	.LFE20-.LFB20
 2298 08a6 01       		.uleb128 0x1
 2299 08a7 9C       		.byte	0x9c
 2300 08a8 28       		.uleb128 0x28
 2301 08a9 06040000 		.4byte	.LASF78
 2302 08ad 01       		.byte	0x1
 2303 08ae D109     		.2byte	0x9d1
 2304 08b0 00000000 		.4byte	.LFB21
 2305 08b4 10000000 		.4byte	.LFE21-.LFB21
 2306 08b8 01       		.uleb128 0x1
 2307 08b9 9C       		.byte	0x9c
 2308 08ba 29       		.uleb128 0x29
 2309 08bb 1D000000 		.4byte	.LASF79
 2310 08bf 01       		.byte	0x1
 2311 08c0 28       		.byte	0x28
 2312 08c1 6B000000 		.4byte	0x6b
 2313 08c5 05       		.uleb128 0x5
 2314 08c6 03       		.byte	0x3
 2315 08c7 00000000 		.4byte	USBFS_initVar
 2316 08cb 2A       		.uleb128 0x2a
 2317 08cc BD040000 		.4byte	.LASF80
 2318 08d0 03       		.byte	0x3
 2319 08d1 D802     		.2byte	0x2d8
 2320 08d3 B0000000 		.4byte	0xb0
 2321 08d7 2A       		.uleb128 0x2a
 2322 08d8 1F040000 		.4byte	.LASF81
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 87


 2323 08dc 03       		.byte	0x3
 2324 08dd D902     		.2byte	0x2d9
 2325 08df B0000000 		.4byte	0xb0
 2326 08e3 2A       		.uleb128 0x2a
 2327 08e4 99020000 		.4byte	.LASF82
 2328 08e8 03       		.byte	0x3
 2329 08e9 DA02     		.2byte	0x2da
 2330 08eb B0000000 		.4byte	0xb0
 2331 08ef 2A       		.uleb128 0x2a
 2332 08f0 28030000 		.4byte	.LASF83
 2333 08f4 03       		.byte	0x3
 2334 08f5 DB02     		.2byte	0x2db
 2335 08f7 B0000000 		.4byte	0xb0
 2336 08fb 2A       		.uleb128 0x2a
 2337 08fc D1040000 		.4byte	.LASF84
 2338 0900 03       		.byte	0x3
 2339 0901 DC02     		.2byte	0x2dc
 2340 0903 B0000000 		.4byte	0xb0
 2341 0907 0A       		.uleb128 0xa
 2342 0908 B0000000 		.4byte	0xb0
 2343 090c 17090000 		.4byte	0x917
 2344 0910 0B       		.uleb128 0xb
 2345 0911 CD000000 		.4byte	0xcd
 2346 0915 00       		.byte	0
 2347 0916 00       		.byte	0
 2348 0917 2A       		.uleb128 0x2a
 2349 0918 2B000000 		.4byte	.LASF85
 2350 091c 03       		.byte	0x3
 2351 091d E502     		.2byte	0x2e5
 2352 091f 23090000 		.4byte	0x923
 2353 0923 05       		.uleb128 0x5
 2354 0924 07090000 		.4byte	0x907
 2355 0928 2B       		.uleb128 0x2b
 2356 0929 92010000 		.4byte	.LASF86
 2357 092d 04       		.byte	0x4
 2358 092e 7D       		.byte	0x7d
 2359 092f B0000000 		.4byte	0xb0
 2360 0933 2B       		.uleb128 0x2b
 2361 0934 91040000 		.4byte	.LASF87
 2362 0938 04       		.byte	0x4
 2363 0939 7E       		.byte	0x7e
 2364 093a 3E090000 		.4byte	0x93e
 2365 093e 05       		.uleb128 0x5
 2366 093f 07090000 		.4byte	0x907
 2367 0943 2B       		.uleb128 0x2b
 2368 0944 7E010000 		.4byte	.LASF88
 2369 0948 04       		.byte	0x4
 2370 0949 80       		.byte	0x80
 2371 094a B0000000 		.4byte	0xb0
 2372 094e 0A       		.uleb128 0xa
 2373 094f 5E090000 		.4byte	0x95e
 2374 0953 5E090000 		.4byte	0x95e
 2375 0957 0B       		.uleb128 0xb
 2376 0958 CD000000 		.4byte	0xcd
 2377 095c 08       		.byte	0x8
 2378 095d 00       		.byte	0
 2379 095e 05       		.uleb128 0x5
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 88


 2380 095f 49010000 		.4byte	0x149
 2381 0963 2B       		.uleb128 0x2b
 2382 0964 E4030000 		.4byte	.LASF89
 2383 0968 04       		.byte	0x4
 2384 0969 84       		.byte	0x84
 2385 096a 6E090000 		.4byte	0x96e
 2386 096e 05       		.uleb128 0x5
 2387 096f 4E090000 		.4byte	0x94e
 2388 0973 2B       		.uleb128 0x2b
 2389 0974 4B040000 		.4byte	.LASF90
 2390 0978 04       		.byte	0x4
 2391 0979 A6       		.byte	0xa6
 2392 097a B0000000 		.4byte	0xb0
 2393 097e 2C       		.uleb128 0x2c
 2394 097f FA020000 		.4byte	.LASF91
 2395 0983 FA020000 		.4byte	.LASF91
 2396 0987 05       		.byte	0x5
 2397 0988 7D       		.byte	0x7d
 2398 0989 2C       		.uleb128 0x2c
 2399 098a 11020000 		.4byte	.LASF92
 2400 098e 11020000 		.4byte	.LASF92
 2401 0992 05       		.byte	0x5
 2402 0993 77       		.byte	0x77
 2403 0994 2C       		.uleb128 0x2c
 2404 0995 07000000 		.4byte	.LASF93
 2405 0999 07000000 		.4byte	.LASF93
 2406 099d 05       		.byte	0x5
 2407 099e 7E       		.byte	0x7e
 2408 099f 2C       		.uleb128 0x2c
 2409 09a0 BC030000 		.4byte	.LASF94
 2410 09a4 BC030000 		.4byte	.LASF94
 2411 09a8 05       		.byte	0x5
 2412 09a9 8B       		.byte	0x8b
 2413 09aa 2C       		.uleb128 0x2c
 2414 09ab D7020000 		.4byte	.LASF95
 2415 09af D7020000 		.4byte	.LASF95
 2416 09b3 05       		.byte	0x5
 2417 09b4 88       		.byte	0x88
 2418 09b5 2C       		.uleb128 0x2c
 2419 09b6 F8030000 		.4byte	.LASF96
 2420 09ba F8030000 		.4byte	.LASF96
 2421 09be 05       		.byte	0x5
 2422 09bf 79       		.byte	0x79
 2423 09c0 2C       		.uleb128 0x2c
 2424 09c1 27050000 		.4byte	.LASF97
 2425 09c5 27050000 		.4byte	.LASF97
 2426 09c9 06       		.byte	0x6
 2427 09ca 2B       		.byte	0x2b
 2428 09cb 00       		.byte	0
 2429              		.section	.debug_abbrev,"",%progbits
 2430              	.Ldebug_abbrev0:
 2431 0000 01       		.uleb128 0x1
 2432 0001 11       		.uleb128 0x11
 2433 0002 01       		.byte	0x1
 2434 0003 25       		.uleb128 0x25
 2435 0004 0E       		.uleb128 0xe
 2436 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 89


 2437 0006 0B       		.uleb128 0xb
 2438 0007 03       		.uleb128 0x3
 2439 0008 0E       		.uleb128 0xe
 2440 0009 1B       		.uleb128 0x1b
 2441 000a 0E       		.uleb128 0xe
 2442 000b 55       		.uleb128 0x55
 2443 000c 17       		.uleb128 0x17
 2444 000d 11       		.uleb128 0x11
 2445 000e 01       		.uleb128 0x1
 2446 000f 10       		.uleb128 0x10
 2447 0010 17       		.uleb128 0x17
 2448 0011 00       		.byte	0
 2449 0012 00       		.byte	0
 2450 0013 02       		.uleb128 0x2
 2451 0014 24       		.uleb128 0x24
 2452 0015 00       		.byte	0
 2453 0016 0B       		.uleb128 0xb
 2454 0017 0B       		.uleb128 0xb
 2455 0018 3E       		.uleb128 0x3e
 2456 0019 0B       		.uleb128 0xb
 2457 001a 03       		.uleb128 0x3
 2458 001b 0E       		.uleb128 0xe
 2459 001c 00       		.byte	0
 2460 001d 00       		.byte	0
 2461 001e 03       		.uleb128 0x3
 2462 001f 24       		.uleb128 0x24
 2463 0020 00       		.byte	0
 2464 0021 0B       		.uleb128 0xb
 2465 0022 0B       		.uleb128 0xb
 2466 0023 3E       		.uleb128 0x3e
 2467 0024 0B       		.uleb128 0xb
 2468 0025 03       		.uleb128 0x3
 2469 0026 08       		.uleb128 0x8
 2470 0027 00       		.byte	0
 2471 0028 00       		.byte	0
 2472 0029 04       		.uleb128 0x4
 2473 002a 16       		.uleb128 0x16
 2474 002b 00       		.byte	0
 2475 002c 03       		.uleb128 0x3
 2476 002d 0E       		.uleb128 0xe
 2477 002e 3A       		.uleb128 0x3a
 2478 002f 0B       		.uleb128 0xb
 2479 0030 3B       		.uleb128 0x3b
 2480 0031 05       		.uleb128 0x5
 2481 0032 49       		.uleb128 0x49
 2482 0033 13       		.uleb128 0x13
 2483 0034 00       		.byte	0
 2484 0035 00       		.byte	0
 2485 0036 05       		.uleb128 0x5
 2486 0037 35       		.uleb128 0x35
 2487 0038 00       		.byte	0
 2488 0039 49       		.uleb128 0x49
 2489 003a 13       		.uleb128 0x13
 2490 003b 00       		.byte	0
 2491 003c 00       		.byte	0
 2492 003d 06       		.uleb128 0x6
 2493 003e 13       		.uleb128 0x13
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 90


 2494 003f 01       		.byte	0x1
 2495 0040 0B       		.uleb128 0xb
 2496 0041 0B       		.uleb128 0xb
 2497 0042 3A       		.uleb128 0x3a
 2498 0043 0B       		.uleb128 0xb
 2499 0044 3B       		.uleb128 0x3b
 2500 0045 0B       		.uleb128 0xb
 2501 0046 01       		.uleb128 0x1
 2502 0047 13       		.uleb128 0x13
 2503 0048 00       		.byte	0
 2504 0049 00       		.byte	0
 2505 004a 07       		.uleb128 0x7
 2506 004b 0D       		.uleb128 0xd
 2507 004c 00       		.byte	0
 2508 004d 03       		.uleb128 0x3
 2509 004e 0E       		.uleb128 0xe
 2510 004f 3A       		.uleb128 0x3a
 2511 0050 0B       		.uleb128 0xb
 2512 0051 3B       		.uleb128 0x3b
 2513 0052 0B       		.uleb128 0xb
 2514 0053 49       		.uleb128 0x49
 2515 0054 13       		.uleb128 0x13
 2516 0055 38       		.uleb128 0x38
 2517 0056 0B       		.uleb128 0xb
 2518 0057 00       		.byte	0
 2519 0058 00       		.byte	0
 2520 0059 08       		.uleb128 0x8
 2521 005a 16       		.uleb128 0x16
 2522 005b 00       		.byte	0
 2523 005c 03       		.uleb128 0x3
 2524 005d 0E       		.uleb128 0xe
 2525 005e 3A       		.uleb128 0x3a
 2526 005f 0B       		.uleb128 0xb
 2527 0060 3B       		.uleb128 0x3b
 2528 0061 0B       		.uleb128 0xb
 2529 0062 49       		.uleb128 0x49
 2530 0063 13       		.uleb128 0x13
 2531 0064 00       		.byte	0
 2532 0065 00       		.byte	0
 2533 0066 09       		.uleb128 0x9
 2534 0067 0D       		.uleb128 0xd
 2535 0068 00       		.byte	0
 2536 0069 03       		.uleb128 0x3
 2537 006a 08       		.uleb128 0x8
 2538 006b 3A       		.uleb128 0x3a
 2539 006c 0B       		.uleb128 0xb
 2540 006d 3B       		.uleb128 0x3b
 2541 006e 0B       		.uleb128 0xb
 2542 006f 49       		.uleb128 0x49
 2543 0070 13       		.uleb128 0x13
 2544 0071 38       		.uleb128 0x38
 2545 0072 0B       		.uleb128 0xb
 2546 0073 00       		.byte	0
 2547 0074 00       		.byte	0
 2548 0075 0A       		.uleb128 0xa
 2549 0076 01       		.uleb128 0x1
 2550 0077 01       		.byte	0x1
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 91


 2551 0078 49       		.uleb128 0x49
 2552 0079 13       		.uleb128 0x13
 2553 007a 01       		.uleb128 0x1
 2554 007b 13       		.uleb128 0x13
 2555 007c 00       		.byte	0
 2556 007d 00       		.byte	0
 2557 007e 0B       		.uleb128 0xb
 2558 007f 21       		.uleb128 0x21
 2559 0080 00       		.byte	0
 2560 0081 49       		.uleb128 0x49
 2561 0082 13       		.uleb128 0x13
 2562 0083 2F       		.uleb128 0x2f
 2563 0084 0B       		.uleb128 0xb
 2564 0085 00       		.byte	0
 2565 0086 00       		.byte	0
 2566 0087 0C       		.uleb128 0xc
 2567 0088 13       		.uleb128 0x13
 2568 0089 01       		.byte	0x1
 2569 008a 0B       		.uleb128 0xb
 2570 008b 0B       		.uleb128 0xb
 2571 008c 3A       		.uleb128 0x3a
 2572 008d 0B       		.uleb128 0xb
 2573 008e 3B       		.uleb128 0x3b
 2574 008f 05       		.uleb128 0x5
 2575 0090 01       		.uleb128 0x1
 2576 0091 13       		.uleb128 0x13
 2577 0092 00       		.byte	0
 2578 0093 00       		.byte	0
 2579 0094 0D       		.uleb128 0xd
 2580 0095 0D       		.uleb128 0xd
 2581 0096 00       		.byte	0
 2582 0097 03       		.uleb128 0x3
 2583 0098 0E       		.uleb128 0xe
 2584 0099 3A       		.uleb128 0x3a
 2585 009a 0B       		.uleb128 0xb
 2586 009b 3B       		.uleb128 0x3b
 2587 009c 05       		.uleb128 0x5
 2588 009d 49       		.uleb128 0x49
 2589 009e 13       		.uleb128 0x13
 2590 009f 38       		.uleb128 0x38
 2591 00a0 0B       		.uleb128 0xb
 2592 00a1 00       		.byte	0
 2593 00a2 00       		.byte	0
 2594 00a3 0E       		.uleb128 0xe
 2595 00a4 2E       		.uleb128 0x2e
 2596 00a5 01       		.byte	0x1
 2597 00a6 3F       		.uleb128 0x3f
 2598 00a7 19       		.uleb128 0x19
 2599 00a8 03       		.uleb128 0x3
 2600 00a9 0E       		.uleb128 0xe
 2601 00aa 3A       		.uleb128 0x3a
 2602 00ab 0B       		.uleb128 0xb
 2603 00ac 3B       		.uleb128 0x3b
 2604 00ad 05       		.uleb128 0x5
 2605 00ae 27       		.uleb128 0x27
 2606 00af 19       		.uleb128 0x19
 2607 00b0 49       		.uleb128 0x49
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 92


 2608 00b1 13       		.uleb128 0x13
 2609 00b2 20       		.uleb128 0x20
 2610 00b3 0B       		.uleb128 0xb
 2611 00b4 01       		.uleb128 0x1
 2612 00b5 13       		.uleb128 0x13
 2613 00b6 00       		.byte	0
 2614 00b7 00       		.byte	0
 2615 00b8 0F       		.uleb128 0xf
 2616 00b9 05       		.uleb128 0x5
 2617 00ba 00       		.byte	0
 2618 00bb 03       		.uleb128 0x3
 2619 00bc 0E       		.uleb128 0xe
 2620 00bd 3A       		.uleb128 0x3a
 2621 00be 0B       		.uleb128 0xb
 2622 00bf 3B       		.uleb128 0x3b
 2623 00c0 05       		.uleb128 0x5
 2624 00c1 49       		.uleb128 0x49
 2625 00c2 13       		.uleb128 0x13
 2626 00c3 00       		.byte	0
 2627 00c4 00       		.byte	0
 2628 00c5 10       		.uleb128 0x10
 2629 00c6 34       		.uleb128 0x34
 2630 00c7 00       		.byte	0
 2631 00c8 03       		.uleb128 0x3
 2632 00c9 0E       		.uleb128 0xe
 2633 00ca 3A       		.uleb128 0x3a
 2634 00cb 0B       		.uleb128 0xb
 2635 00cc 3B       		.uleb128 0x3b
 2636 00cd 05       		.uleb128 0x5
 2637 00ce 49       		.uleb128 0x49
 2638 00cf 13       		.uleb128 0x13
 2639 00d0 00       		.byte	0
 2640 00d1 00       		.byte	0
 2641 00d2 11       		.uleb128 0x11
 2642 00d3 2E       		.uleb128 0x2e
 2643 00d4 01       		.byte	0x1
 2644 00d5 3F       		.uleb128 0x3f
 2645 00d6 19       		.uleb128 0x19
 2646 00d7 03       		.uleb128 0x3
 2647 00d8 0E       		.uleb128 0xe
 2648 00d9 3A       		.uleb128 0x3a
 2649 00da 0B       		.uleb128 0xb
 2650 00db 3B       		.uleb128 0x3b
 2651 00dc 0B       		.uleb128 0xb
 2652 00dd 27       		.uleb128 0x27
 2653 00de 19       		.uleb128 0x19
 2654 00df 11       		.uleb128 0x11
 2655 00e0 01       		.uleb128 0x1
 2656 00e1 12       		.uleb128 0x12
 2657 00e2 06       		.uleb128 0x6
 2658 00e3 40       		.uleb128 0x40
 2659 00e4 18       		.uleb128 0x18
 2660 00e5 9742     		.uleb128 0x2117
 2661 00e7 19       		.uleb128 0x19
 2662 00e8 01       		.uleb128 0x1
 2663 00e9 13       		.uleb128 0x13
 2664 00ea 00       		.byte	0
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 93


 2665 00eb 00       		.byte	0
 2666 00ec 12       		.uleb128 0x12
 2667 00ed 34       		.uleb128 0x34
 2668 00ee 00       		.byte	0
 2669 00ef 03       		.uleb128 0x3
 2670 00f0 0E       		.uleb128 0xe
 2671 00f1 3A       		.uleb128 0x3a
 2672 00f2 0B       		.uleb128 0xb
 2673 00f3 3B       		.uleb128 0x3b
 2674 00f4 0B       		.uleb128 0xb
 2675 00f5 49       		.uleb128 0x49
 2676 00f6 13       		.uleb128 0x13
 2677 00f7 02       		.uleb128 0x2
 2678 00f8 17       		.uleb128 0x17
 2679 00f9 00       		.byte	0
 2680 00fa 00       		.byte	0
 2681 00fb 13       		.uleb128 0x13
 2682 00fc 898201   		.uleb128 0x4109
 2683 00ff 00       		.byte	0
 2684 0100 11       		.uleb128 0x11
 2685 0101 01       		.uleb128 0x1
 2686 0102 31       		.uleb128 0x31
 2687 0103 13       		.uleb128 0x13
 2688 0104 00       		.byte	0
 2689 0105 00       		.byte	0
 2690 0106 14       		.uleb128 0x14
 2691 0107 898201   		.uleb128 0x4109
 2692 010a 01       		.byte	0x1
 2693 010b 11       		.uleb128 0x11
 2694 010c 01       		.uleb128 0x1
 2695 010d 31       		.uleb128 0x31
 2696 010e 13       		.uleb128 0x13
 2697 010f 01       		.uleb128 0x1
 2698 0110 13       		.uleb128 0x13
 2699 0111 00       		.byte	0
 2700 0112 00       		.byte	0
 2701 0113 15       		.uleb128 0x15
 2702 0114 8A8201   		.uleb128 0x410a
 2703 0117 00       		.byte	0
 2704 0118 02       		.uleb128 0x2
 2705 0119 18       		.uleb128 0x18
 2706 011a 9142     		.uleb128 0x2111
 2707 011c 18       		.uleb128 0x18
 2708 011d 00       		.byte	0
 2709 011e 00       		.byte	0
 2710 011f 16       		.uleb128 0x16
 2711 0120 898201   		.uleb128 0x4109
 2712 0123 01       		.byte	0x1
 2713 0124 11       		.uleb128 0x11
 2714 0125 01       		.uleb128 0x1
 2715 0126 9542     		.uleb128 0x2115
 2716 0128 19       		.uleb128 0x19
 2717 0129 31       		.uleb128 0x31
 2718 012a 13       		.uleb128 0x13
 2719 012b 00       		.byte	0
 2720 012c 00       		.byte	0
 2721 012d 17       		.uleb128 0x17
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 94


 2722 012e 2E       		.uleb128 0x2e
 2723 012f 01       		.byte	0x1
 2724 0130 3F       		.uleb128 0x3f
 2725 0131 19       		.uleb128 0x19
 2726 0132 03       		.uleb128 0x3
 2727 0133 0E       		.uleb128 0xe
 2728 0134 3A       		.uleb128 0x3a
 2729 0135 0B       		.uleb128 0xb
 2730 0136 3B       		.uleb128 0x3b
 2731 0137 05       		.uleb128 0x5
 2732 0138 27       		.uleb128 0x27
 2733 0139 19       		.uleb128 0x19
 2734 013a 11       		.uleb128 0x11
 2735 013b 01       		.uleb128 0x1
 2736 013c 12       		.uleb128 0x12
 2737 013d 06       		.uleb128 0x6
 2738 013e 40       		.uleb128 0x40
 2739 013f 18       		.uleb128 0x18
 2740 0140 9742     		.uleb128 0x2117
 2741 0142 19       		.uleb128 0x19
 2742 0143 01       		.uleb128 0x1
 2743 0144 13       		.uleb128 0x13
 2744 0145 00       		.byte	0
 2745 0146 00       		.byte	0
 2746 0147 18       		.uleb128 0x18
 2747 0148 05       		.uleb128 0x5
 2748 0149 00       		.byte	0
 2749 014a 03       		.uleb128 0x3
 2750 014b 0E       		.uleb128 0xe
 2751 014c 3A       		.uleb128 0x3a
 2752 014d 0B       		.uleb128 0xb
 2753 014e 3B       		.uleb128 0x3b
 2754 014f 05       		.uleb128 0x5
 2755 0150 49       		.uleb128 0x49
 2756 0151 13       		.uleb128 0x13
 2757 0152 02       		.uleb128 0x2
 2758 0153 17       		.uleb128 0x17
 2759 0154 00       		.byte	0
 2760 0155 00       		.byte	0
 2761 0156 19       		.uleb128 0x19
 2762 0157 34       		.uleb128 0x34
 2763 0158 00       		.byte	0
 2764 0159 03       		.uleb128 0x3
 2765 015a 08       		.uleb128 0x8
 2766 015b 3A       		.uleb128 0x3a
 2767 015c 0B       		.uleb128 0xb
 2768 015d 3B       		.uleb128 0x3b
 2769 015e 05       		.uleb128 0x5
 2770 015f 49       		.uleb128 0x49
 2771 0160 13       		.uleb128 0x13
 2772 0161 02       		.uleb128 0x2
 2773 0162 17       		.uleb128 0x17
 2774 0163 00       		.byte	0
 2775 0164 00       		.byte	0
 2776 0165 1A       		.uleb128 0x1a
 2777 0166 898201   		.uleb128 0x4109
 2778 0169 01       		.byte	0x1
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 95


 2779 016a 11       		.uleb128 0x11
 2780 016b 01       		.uleb128 0x1
 2781 016c 31       		.uleb128 0x31
 2782 016d 13       		.uleb128 0x13
 2783 016e 00       		.byte	0
 2784 016f 00       		.byte	0
 2785 0170 1B       		.uleb128 0x1b
 2786 0171 05       		.uleb128 0x5
 2787 0172 00       		.byte	0
 2788 0173 03       		.uleb128 0x3
 2789 0174 0E       		.uleb128 0xe
 2790 0175 3A       		.uleb128 0x3a
 2791 0176 0B       		.uleb128 0xb
 2792 0177 3B       		.uleb128 0x3b
 2793 0178 0B       		.uleb128 0xb
 2794 0179 49       		.uleb128 0x49
 2795 017a 13       		.uleb128 0x13
 2796 017b 02       		.uleb128 0x2
 2797 017c 17       		.uleb128 0x17
 2798 017d 00       		.byte	0
 2799 017e 00       		.byte	0
 2800 017f 1C       		.uleb128 0x1c
 2801 0180 898201   		.uleb128 0x4109
 2802 0183 00       		.byte	0
 2803 0184 11       		.uleb128 0x11
 2804 0185 01       		.uleb128 0x1
 2805 0186 9542     		.uleb128 0x2115
 2806 0188 19       		.uleb128 0x19
 2807 0189 31       		.uleb128 0x31
 2808 018a 13       		.uleb128 0x13
 2809 018b 00       		.byte	0
 2810 018c 00       		.byte	0
 2811 018d 1D       		.uleb128 0x1d
 2812 018e 34       		.uleb128 0x34
 2813 018f 00       		.byte	0
 2814 0190 03       		.uleb128 0x3
 2815 0191 0E       		.uleb128 0xe
 2816 0192 3A       		.uleb128 0x3a
 2817 0193 0B       		.uleb128 0xb
 2818 0194 3B       		.uleb128 0x3b
 2819 0195 05       		.uleb128 0x5
 2820 0196 49       		.uleb128 0x49
 2821 0197 13       		.uleb128 0x13
 2822 0198 02       		.uleb128 0x2
 2823 0199 17       		.uleb128 0x17
 2824 019a 00       		.byte	0
 2825 019b 00       		.byte	0
 2826 019c 1E       		.uleb128 0x1e
 2827 019d 2E       		.uleb128 0x2e
 2828 019e 01       		.byte	0x1
 2829 019f 3F       		.uleb128 0x3f
 2830 01a0 19       		.uleb128 0x19
 2831 01a1 03       		.uleb128 0x3
 2832 01a2 0E       		.uleb128 0xe
 2833 01a3 3A       		.uleb128 0x3a
 2834 01a4 0B       		.uleb128 0xb
 2835 01a5 3B       		.uleb128 0x3b
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 96


 2836 01a6 05       		.uleb128 0x5
 2837 01a7 27       		.uleb128 0x27
 2838 01a8 19       		.uleb128 0x19
 2839 01a9 49       		.uleb128 0x49
 2840 01aa 13       		.uleb128 0x13
 2841 01ab 11       		.uleb128 0x11
 2842 01ac 01       		.uleb128 0x1
 2843 01ad 12       		.uleb128 0x12
 2844 01ae 06       		.uleb128 0x6
 2845 01af 40       		.uleb128 0x40
 2846 01b0 18       		.uleb128 0x18
 2847 01b1 9742     		.uleb128 0x2117
 2848 01b3 19       		.uleb128 0x19
 2849 01b4 01       		.uleb128 0x1
 2850 01b5 13       		.uleb128 0x13
 2851 01b6 00       		.byte	0
 2852 01b7 00       		.byte	0
 2853 01b8 1F       		.uleb128 0x1f
 2854 01b9 2E       		.uleb128 0x2e
 2855 01ba 00       		.byte	0
 2856 01bb 3F       		.uleb128 0x3f
 2857 01bc 19       		.uleb128 0x19
 2858 01bd 03       		.uleb128 0x3
 2859 01be 0E       		.uleb128 0xe
 2860 01bf 3A       		.uleb128 0x3a
 2861 01c0 0B       		.uleb128 0xb
 2862 01c1 3B       		.uleb128 0x3b
 2863 01c2 05       		.uleb128 0x5
 2864 01c3 27       		.uleb128 0x27
 2865 01c4 19       		.uleb128 0x19
 2866 01c5 49       		.uleb128 0x49
 2867 01c6 13       		.uleb128 0x13
 2868 01c7 11       		.uleb128 0x11
 2869 01c8 01       		.uleb128 0x1
 2870 01c9 12       		.uleb128 0x12
 2871 01ca 06       		.uleb128 0x6
 2872 01cb 40       		.uleb128 0x40
 2873 01cc 18       		.uleb128 0x18
 2874 01cd 9742     		.uleb128 0x2117
 2875 01cf 19       		.uleb128 0x19
 2876 01d0 00       		.byte	0
 2877 01d1 00       		.byte	0
 2878 01d2 20       		.uleb128 0x20
 2879 01d3 2E       		.uleb128 0x2e
 2880 01d4 01       		.byte	0x1
 2881 01d5 31       		.uleb128 0x31
 2882 01d6 13       		.uleb128 0x13
 2883 01d7 11       		.uleb128 0x11
 2884 01d8 01       		.uleb128 0x1
 2885 01d9 12       		.uleb128 0x12
 2886 01da 06       		.uleb128 0x6
 2887 01db 40       		.uleb128 0x40
 2888 01dc 18       		.uleb128 0x18
 2889 01dd 9742     		.uleb128 0x2117
 2890 01df 19       		.uleb128 0x19
 2891 01e0 01       		.uleb128 0x1
 2892 01e1 13       		.uleb128 0x13
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 97


 2893 01e2 00       		.byte	0
 2894 01e3 00       		.byte	0
 2895 01e4 21       		.uleb128 0x21
 2896 01e5 05       		.uleb128 0x5
 2897 01e6 00       		.byte	0
 2898 01e7 31       		.uleb128 0x31
 2899 01e8 13       		.uleb128 0x13
 2900 01e9 02       		.uleb128 0x2
 2901 01ea 17       		.uleb128 0x17
 2902 01eb 00       		.byte	0
 2903 01ec 00       		.byte	0
 2904 01ed 22       		.uleb128 0x22
 2905 01ee 34       		.uleb128 0x34
 2906 01ef 00       		.byte	0
 2907 01f0 31       		.uleb128 0x31
 2908 01f1 13       		.uleb128 0x13
 2909 01f2 02       		.uleb128 0x2
 2910 01f3 17       		.uleb128 0x17
 2911 01f4 00       		.byte	0
 2912 01f5 00       		.byte	0
 2913 01f6 23       		.uleb128 0x23
 2914 01f7 0B       		.uleb128 0xb
 2915 01f8 01       		.byte	0x1
 2916 01f9 11       		.uleb128 0x11
 2917 01fa 01       		.uleb128 0x1
 2918 01fb 12       		.uleb128 0x12
 2919 01fc 06       		.uleb128 0x6
 2920 01fd 00       		.byte	0
 2921 01fe 00       		.byte	0
 2922 01ff 24       		.uleb128 0x24
 2923 0200 05       		.uleb128 0x5
 2924 0201 00       		.byte	0
 2925 0202 03       		.uleb128 0x3
 2926 0203 0E       		.uleb128 0xe
 2927 0204 3A       		.uleb128 0x3a
 2928 0205 0B       		.uleb128 0xb
 2929 0206 3B       		.uleb128 0x3b
 2930 0207 05       		.uleb128 0x5
 2931 0208 49       		.uleb128 0x49
 2932 0209 13       		.uleb128 0x13
 2933 020a 02       		.uleb128 0x2
 2934 020b 18       		.uleb128 0x18
 2935 020c 00       		.byte	0
 2936 020d 00       		.byte	0
 2937 020e 25       		.uleb128 0x25
 2938 020f 0F       		.uleb128 0xf
 2939 0210 00       		.byte	0
 2940 0211 0B       		.uleb128 0xb
 2941 0212 0B       		.uleb128 0xb
 2942 0213 49       		.uleb128 0x49
 2943 0214 13       		.uleb128 0x13
 2944 0215 00       		.byte	0
 2945 0216 00       		.byte	0
 2946 0217 26       		.uleb128 0x26
 2947 0218 26       		.uleb128 0x26
 2948 0219 00       		.byte	0
 2949 021a 49       		.uleb128 0x49
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 98


 2950 021b 13       		.uleb128 0x13
 2951 021c 00       		.byte	0
 2952 021d 00       		.byte	0
 2953 021e 27       		.uleb128 0x27
 2954 021f 0B       		.uleb128 0xb
 2955 0220 01       		.byte	0x1
 2956 0221 11       		.uleb128 0x11
 2957 0222 01       		.uleb128 0x1
 2958 0223 12       		.uleb128 0x12
 2959 0224 06       		.uleb128 0x6
 2960 0225 01       		.uleb128 0x1
 2961 0226 13       		.uleb128 0x13
 2962 0227 00       		.byte	0
 2963 0228 00       		.byte	0
 2964 0229 28       		.uleb128 0x28
 2965 022a 2E       		.uleb128 0x2e
 2966 022b 00       		.byte	0
 2967 022c 3F       		.uleb128 0x3f
 2968 022d 19       		.uleb128 0x19
 2969 022e 03       		.uleb128 0x3
 2970 022f 0E       		.uleb128 0xe
 2971 0230 3A       		.uleb128 0x3a
 2972 0231 0B       		.uleb128 0xb
 2973 0232 3B       		.uleb128 0x3b
 2974 0233 05       		.uleb128 0x5
 2975 0234 27       		.uleb128 0x27
 2976 0235 19       		.uleb128 0x19
 2977 0236 11       		.uleb128 0x11
 2978 0237 01       		.uleb128 0x1
 2979 0238 12       		.uleb128 0x12
 2980 0239 06       		.uleb128 0x6
 2981 023a 40       		.uleb128 0x40
 2982 023b 18       		.uleb128 0x18
 2983 023c 9742     		.uleb128 0x2117
 2984 023e 19       		.uleb128 0x19
 2985 023f 00       		.byte	0
 2986 0240 00       		.byte	0
 2987 0241 29       		.uleb128 0x29
 2988 0242 34       		.uleb128 0x34
 2989 0243 00       		.byte	0
 2990 0244 03       		.uleb128 0x3
 2991 0245 0E       		.uleb128 0xe
 2992 0246 3A       		.uleb128 0x3a
 2993 0247 0B       		.uleb128 0xb
 2994 0248 3B       		.uleb128 0x3b
 2995 0249 0B       		.uleb128 0xb
 2996 024a 49       		.uleb128 0x49
 2997 024b 13       		.uleb128 0x13
 2998 024c 3F       		.uleb128 0x3f
 2999 024d 19       		.uleb128 0x19
 3000 024e 02       		.uleb128 0x2
 3001 024f 18       		.uleb128 0x18
 3002 0250 00       		.byte	0
 3003 0251 00       		.byte	0
 3004 0252 2A       		.uleb128 0x2a
 3005 0253 34       		.uleb128 0x34
 3006 0254 00       		.byte	0
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 99


 3007 0255 03       		.uleb128 0x3
 3008 0256 0E       		.uleb128 0xe
 3009 0257 3A       		.uleb128 0x3a
 3010 0258 0B       		.uleb128 0xb
 3011 0259 3B       		.uleb128 0x3b
 3012 025a 05       		.uleb128 0x5
 3013 025b 49       		.uleb128 0x49
 3014 025c 13       		.uleb128 0x13
 3015 025d 3F       		.uleb128 0x3f
 3016 025e 19       		.uleb128 0x19
 3017 025f 3C       		.uleb128 0x3c
 3018 0260 19       		.uleb128 0x19
 3019 0261 00       		.byte	0
 3020 0262 00       		.byte	0
 3021 0263 2B       		.uleb128 0x2b
 3022 0264 34       		.uleb128 0x34
 3023 0265 00       		.byte	0
 3024 0266 03       		.uleb128 0x3
 3025 0267 0E       		.uleb128 0xe
 3026 0268 3A       		.uleb128 0x3a
 3027 0269 0B       		.uleb128 0xb
 3028 026a 3B       		.uleb128 0x3b
 3029 026b 0B       		.uleb128 0xb
 3030 026c 49       		.uleb128 0x49
 3031 026d 13       		.uleb128 0x13
 3032 026e 3F       		.uleb128 0x3f
 3033 026f 19       		.uleb128 0x19
 3034 0270 3C       		.uleb128 0x3c
 3035 0271 19       		.uleb128 0x19
 3036 0272 00       		.byte	0
 3037 0273 00       		.byte	0
 3038 0274 2C       		.uleb128 0x2c
 3039 0275 2E       		.uleb128 0x2e
 3040 0276 00       		.byte	0
 3041 0277 3F       		.uleb128 0x3f
 3042 0278 19       		.uleb128 0x19
 3043 0279 3C       		.uleb128 0x3c
 3044 027a 19       		.uleb128 0x19
 3045 027b 6E       		.uleb128 0x6e
 3046 027c 0E       		.uleb128 0xe
 3047 027d 03       		.uleb128 0x3
 3048 027e 0E       		.uleb128 0xe
 3049 027f 3A       		.uleb128 0x3a
 3050 0280 0B       		.uleb128 0xb
 3051 0281 3B       		.uleb128 0x3b
 3052 0282 0B       		.uleb128 0xb
 3053 0283 00       		.byte	0
 3054 0284 00       		.byte	0
 3055 0285 00       		.byte	0
 3056              		.section	.debug_loc,"",%progbits
 3057              	.Ldebug_loc0:
 3058              	.LLST0:
 3059 0000 30000000 		.4byte	.LVL1
 3060 0004 F0000000 		.4byte	.LVL18
 3061 0008 0100     		.2byte	0x1
 3062 000a 56       		.byte	0x56
 3063 000b 00000000 		.4byte	0
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 100


 3064 000f 00000000 		.4byte	0
 3065              	.LLST1:
 3066 0013 00000000 		.4byte	.LVL20
 3067 0017 0E000000 		.4byte	.LVL22
 3068 001b 0100     		.2byte	0x1
 3069 001d 50       		.byte	0x50
 3070 001e 0E000000 		.4byte	.LVL22
 3071 0022 10000000 		.4byte	.LVL23
 3072 0026 0200     		.2byte	0x2
 3073 0028 73       		.byte	0x73
 3074 0029 00       		.sleb128 0
 3075 002a 12000000 		.4byte	.LVL24
 3076 002e A8000000 		.4byte	.LFE2
 3077 0032 0400     		.2byte	0x4
 3078 0034 F3       		.byte	0xf3
 3079 0035 01       		.uleb128 0x1
 3080 0036 50       		.byte	0x50
 3081 0037 9F       		.byte	0x9f
 3082 0038 00000000 		.4byte	0
 3083 003c 00000000 		.4byte	0
 3084              	.LLST2:
 3085 0040 00000000 		.4byte	.LVL20
 3086 0044 69000000 		.4byte	.LVL25-1
 3087 0048 0100     		.2byte	0x1
 3088 004a 51       		.byte	0x51
 3089 004b 69000000 		.4byte	.LVL25-1
 3090 004f A8000000 		.4byte	.LFE2
 3091 0053 0400     		.2byte	0x4
 3092 0055 F3       		.byte	0xf3
 3093 0056 01       		.uleb128 0x1
 3094 0057 51       		.byte	0x51
 3095 0058 9F       		.byte	0x9f
 3096 0059 00000000 		.4byte	0
 3097 005d 00000000 		.4byte	0
 3098              	.LLST3:
 3099 0061 00000000 		.4byte	.LVL20
 3100 0065 08000000 		.4byte	.LVL21
 3101 0069 0200     		.2byte	0x2
 3102 006b 30       		.byte	0x30
 3103 006c 9F       		.byte	0x9f
 3104 006d 08000000 		.4byte	.LVL21
 3105 0071 A8000000 		.4byte	.LFE2
 3106 0075 0200     		.2byte	0x2
 3107 0077 31       		.byte	0x31
 3108 0078 9F       		.byte	0x9f
 3109 0079 00000000 		.4byte	0
 3110 007d 00000000 		.4byte	0
 3111              	.LLST4:
 3112 0081 00000000 		.4byte	.LVL26
 3113 0085 0F000000 		.4byte	.LVL27-1
 3114 0089 0100     		.2byte	0x1
 3115 008b 50       		.byte	0x50
 3116 008c 0F000000 		.4byte	.LVL27-1
 3117 0090 24000000 		.4byte	.LFE0
 3118 0094 0400     		.2byte	0x4
 3119 0096 F3       		.byte	0xf3
 3120 0097 01       		.uleb128 0x1
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 101


 3121 0098 50       		.byte	0x50
 3122 0099 9F       		.byte	0x9f
 3123 009a 00000000 		.4byte	0
 3124 009e 00000000 		.4byte	0
 3125              	.LLST5:
 3126 00a2 00000000 		.4byte	.LVL26
 3127 00a6 0F000000 		.4byte	.LVL27-1
 3128 00aa 0100     		.2byte	0x1
 3129 00ac 51       		.byte	0x51
 3130 00ad 0F000000 		.4byte	.LVL27-1
 3131 00b1 24000000 		.4byte	.LFE0
 3132 00b5 0400     		.2byte	0x4
 3133 00b7 F3       		.byte	0xf3
 3134 00b8 01       		.uleb128 0x1
 3135 00b9 51       		.byte	0x51
 3136 00ba 9F       		.byte	0x9f
 3137 00bb 00000000 		.4byte	0
 3138 00bf 00000000 		.4byte	0
 3139              	.LLST6:
 3140 00c3 00000000 		.4byte	.LVL29
 3141 00c7 06000000 		.4byte	.LVL30
 3142 00cb 0200     		.2byte	0x2
 3143 00cd 30       		.byte	0x30
 3144 00ce 9F       		.byte	0x9f
 3145 00cf 06000000 		.4byte	.LVL30
 3146 00d3 58000000 		.4byte	.LFE3
 3147 00d7 0200     		.2byte	0x2
 3148 00d9 31       		.byte	0x31
 3149 00da 9F       		.byte	0x9f
 3150 00db 00000000 		.4byte	0
 3151 00df 00000000 		.4byte	0
 3152              	.LLST7:
 3153 00e3 06000000 		.4byte	.LVL31
 3154 00e7 43000000 		.4byte	.LVL32-1
 3155 00eb 0100     		.2byte	0x1
 3156 00ed 50       		.byte	0x50
 3157 00ee 00000000 		.4byte	0
 3158 00f2 00000000 		.4byte	0
 3159              	.LLST8:
 3160 00f6 06000000 		.4byte	.LVL34
 3161 00fa 10000000 		.4byte	.LVL35
 3162 00fe 0100     		.2byte	0x1
 3163 0100 50       		.byte	0x50
 3164 0101 00000000 		.4byte	0
 3165 0105 00000000 		.4byte	0
 3166              	.LLST9:
 3167 0109 00000000 		.4byte	.LVL36
 3168 010d 10000000 		.4byte	.LVL37
 3169 0111 0200     		.2byte	0x2
 3170 0113 30       		.byte	0x30
 3171 0114 9F       		.byte	0x9f
 3172 0115 10000000 		.4byte	.LVL37
 3173 0119 18000000 		.4byte	.LFE7
 3174 011d 0100     		.2byte	0x1
 3175 011f 50       		.byte	0x50
 3176 0120 00000000 		.4byte	0
 3177 0124 00000000 		.4byte	0
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 102


 3178              	.LLST10:
 3179 0128 00000000 		.4byte	.LVL39
 3180 012c 04000000 		.4byte	.LVL40
 3181 0130 0100     		.2byte	0x1
 3182 0132 50       		.byte	0x50
 3183 0133 04000000 		.4byte	.LVL40
 3184 0137 0C000000 		.4byte	.LFE8
 3185 013b 0400     		.2byte	0x4
 3186 013d F3       		.byte	0xf3
 3187 013e 01       		.uleb128 0x1
 3188 013f 50       		.byte	0x50
 3189 0140 9F       		.byte	0x9f
 3190 0141 00000000 		.4byte	0
 3191 0145 00000000 		.4byte	0
 3192              	.LLST11:
 3193 0149 00000000 		.4byte	.LVL41
 3194 014d 08000000 		.4byte	.LVL42
 3195 0151 0100     		.2byte	0x1
 3196 0153 50       		.byte	0x50
 3197 0154 08000000 		.4byte	.LVL42
 3198 0158 10000000 		.4byte	.LFE9
 3199 015c 0400     		.2byte	0x4
 3200 015e F3       		.byte	0xf3
 3201 015f 01       		.uleb128 0x1
 3202 0160 50       		.byte	0x50
 3203 0161 9F       		.byte	0x9f
 3204 0162 00000000 		.4byte	0
 3205 0166 00000000 		.4byte	0
 3206              	.LLST12:
 3207 016a 00000000 		.4byte	.LVL43
 3208 016e 0C000000 		.4byte	.LVL45
 3209 0172 0100     		.2byte	0x1
 3210 0174 50       		.byte	0x50
 3211 0175 0C000000 		.4byte	.LVL45
 3212 0179 20000000 		.4byte	.LVL50
 3213 017d 0400     		.2byte	0x4
 3214 017f F3       		.byte	0xf3
 3215 0180 01       		.uleb128 0x1
 3216 0181 50       		.byte	0x50
 3217 0182 9F       		.byte	0x9f
 3218 0183 20000000 		.4byte	.LVL50
 3219 0187 22000000 		.4byte	.LVL51
 3220 018b 0100     		.2byte	0x1
 3221 018d 50       		.byte	0x50
 3222 018e 22000000 		.4byte	.LVL51
 3223 0192 28000000 		.4byte	.LFE10
 3224 0196 0400     		.2byte	0x4
 3225 0198 F3       		.byte	0xf3
 3226 0199 01       		.uleb128 0x1
 3227 019a 50       		.byte	0x50
 3228 019b 9F       		.byte	0x9f
 3229 019c 00000000 		.4byte	0
 3230 01a0 00000000 		.4byte	0
 3231              	.LLST13:
 3232 01a4 00000000 		.4byte	.LVL43
 3233 01a8 22000000 		.4byte	.LVL51
 3234 01ac 0200     		.2byte	0x2
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 103


 3235 01ae 30       		.byte	0x30
 3236 01af 9F       		.byte	0x9f
 3237 01b0 22000000 		.4byte	.LVL51
 3238 01b4 28000000 		.4byte	.LFE10
 3239 01b8 0100     		.2byte	0x1
 3240 01ba 50       		.byte	0x50
 3241 01bb 00000000 		.4byte	0
 3242 01bf 00000000 		.4byte	0
 3243              	.LLST14:
 3244 01c3 06000000 		.4byte	.LVL44
 3245 01c7 0C000000 		.4byte	.LVL45
 3246 01cb 0100     		.2byte	0x1
 3247 01cd 50       		.byte	0x50
 3248 01ce 0C000000 		.4byte	.LVL45
 3249 01d2 1E000000 		.4byte	.LVL49
 3250 01d6 0400     		.2byte	0x4
 3251 01d8 F3       		.byte	0xf3
 3252 01d9 01       		.uleb128 0x1
 3253 01da 50       		.byte	0x50
 3254 01db 9F       		.byte	0x9f
 3255 01dc 00000000 		.4byte	0
 3256 01e0 00000000 		.4byte	0
 3257              	.LLST15:
 3258 01e4 10000000 		.4byte	.LVL46
 3259 01e8 16000000 		.4byte	.LVL47
 3260 01ec 0800     		.2byte	0x8
 3261 01ee 70       		.byte	0x70
 3262 01ef 00       		.sleb128 0
 3263 01f0 3F       		.byte	0x3f
 3264 01f1 1A       		.byte	0x1a
 3265 01f2 08       		.byte	0x8
 3266 01f3 FF       		.byte	0xff
 3267 01f4 1A       		.byte	0x1a
 3268 01f5 9F       		.byte	0x9f
 3269 01f6 16000000 		.4byte	.LVL47
 3270 01fa 1A000000 		.4byte	.LVL48
 3271 01fe 0B00     		.2byte	0xb
 3272 0200 73       		.byte	0x73
 3273 0201 00       		.sleb128 0
 3274 0202 08       		.byte	0x8
 3275 0203 FF       		.byte	0xff
 3276 0204 1A       		.byte	0x1a
 3277 0205 70       		.byte	0x70
 3278 0206 00       		.sleb128 0
 3279 0207 38       		.byte	0x38
 3280 0208 24       		.byte	0x24
 3281 0209 21       		.byte	0x21
 3282 020a 9F       		.byte	0x9f
 3283 020b 00000000 		.4byte	0
 3284 020f 00000000 		.4byte	0
 3285              	.LLST16:
 3286 0213 00000000 		.4byte	.LVL52
 3287 0217 4A000000 		.4byte	.LVL56
 3288 021b 0100     		.2byte	0x1
 3289 021d 50       		.byte	0x50
 3290 021e 4A000000 		.4byte	.LVL56
 3291 0222 56000000 		.4byte	.LVL57
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 104


 3292 0226 0400     		.2byte	0x4
 3293 0228 F3       		.byte	0xf3
 3294 0229 01       		.uleb128 0x1
 3295 022a 50       		.byte	0x50
 3296 022b 9F       		.byte	0x9f
 3297 022c 56000000 		.4byte	.LVL57
 3298 0230 7C000000 		.4byte	.LFE11
 3299 0234 0100     		.2byte	0x1
 3300 0236 50       		.byte	0x50
 3301 0237 00000000 		.4byte	0
 3302 023b 00000000 		.4byte	0
 3303              	.LLST17:
 3304 023f 00000000 		.4byte	.LVL52
 3305 0243 28000000 		.4byte	.LVL53
 3306 0247 0100     		.2byte	0x1
 3307 0249 52       		.byte	0x52
 3308 024a 28000000 		.4byte	.LVL53
 3309 024e 32000000 		.4byte	.LVL54
 3310 0252 0400     		.2byte	0x4
 3311 0254 F3       		.byte	0xf3
 3312 0255 01       		.uleb128 0x1
 3313 0256 52       		.byte	0x52
 3314 0257 9F       		.byte	0x9f
 3315 0258 32000000 		.4byte	.LVL54
 3316 025c 46000000 		.4byte	.LVL55
 3317 0260 0100     		.2byte	0x1
 3318 0262 52       		.byte	0x52
 3319 0263 56000000 		.4byte	.LVL57
 3320 0267 7C000000 		.4byte	.LFE11
 3321 026b 0100     		.2byte	0x1
 3322 026d 52       		.byte	0x52
 3323 026e 00000000 		.4byte	0
 3324 0272 00000000 		.4byte	0
 3325              	.LLST18:
 3326 0276 5C000000 		.4byte	.LVL58
 3327 027a 68000000 		.4byte	.LVL59
 3328 027e 0600     		.2byte	0x6
 3329 0280 76       		.byte	0x76
 3330 0281 00       		.sleb128 0
 3331 0282 71       		.byte	0x71
 3332 0283 00       		.sleb128 0
 3333 0284 1C       		.byte	0x1c
 3334 0285 9F       		.byte	0x9f
 3335 0286 6A000000 		.4byte	.LVL60
 3336 028a 6C000000 		.4byte	.LVL61
 3337 028e 0600     		.2byte	0x6
 3338 0290 76       		.byte	0x76
 3339 0291 00       		.sleb128 0
 3340 0292 71       		.byte	0x71
 3341 0293 00       		.sleb128 0
 3342 0294 1C       		.byte	0x1c
 3343 0295 9F       		.byte	0x9f
 3344 0296 00000000 		.4byte	0
 3345 029a 00000000 		.4byte	0
 3346              	.LLST19:
 3347 029e 00000000 		.4byte	.LVL62
 3348 02a2 1A000000 		.4byte	.LVL63
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 105


 3349 02a6 0100     		.2byte	0x1
 3350 02a8 50       		.byte	0x50
 3351 02a9 1A000000 		.4byte	.LVL63
 3352 02ad 28000000 		.4byte	.LFE13
 3353 02b1 0400     		.2byte	0x4
 3354 02b3 F3       		.byte	0xf3
 3355 02b4 01       		.uleb128 0x1
 3356 02b5 50       		.byte	0x50
 3357 02b6 9F       		.byte	0x9f
 3358 02b7 00000000 		.4byte	0
 3359 02bb 00000000 		.4byte	0
 3360              	.LLST20:
 3361 02bf 00000000 		.4byte	.LVL64
 3362 02c3 11000000 		.4byte	.LVL65-1
 3363 02c7 0100     		.2byte	0x1
 3364 02c9 50       		.byte	0x50
 3365 02ca 11000000 		.4byte	.LVL65-1
 3366 02ce 3E000000 		.4byte	.LVL71
 3367 02d2 0400     		.2byte	0x4
 3368 02d4 F3       		.byte	0xf3
 3369 02d5 01       		.uleb128 0x1
 3370 02d6 50       		.byte	0x50
 3371 02d7 9F       		.byte	0x9f
 3372 02d8 3E000000 		.4byte	.LVL71
 3373 02dc 44000000 		.4byte	.LVL72
 3374 02e0 0100     		.2byte	0x1
 3375 02e2 50       		.byte	0x50
 3376 02e3 44000000 		.4byte	.LVL72
 3377 02e7 4C000000 		.4byte	.LFE12
 3378 02eb 0400     		.2byte	0x4
 3379 02ed F3       		.byte	0xf3
 3380 02ee 01       		.uleb128 0x1
 3381 02ef 50       		.byte	0x50
 3382 02f0 9F       		.byte	0x9f
 3383 02f1 00000000 		.4byte	0
 3384 02f5 00000000 		.4byte	0
 3385              	.LLST21:
 3386 02f9 00000000 		.4byte	.LVL64
 3387 02fd 11000000 		.4byte	.LVL65-1
 3388 0301 0100     		.2byte	0x1
 3389 0303 51       		.byte	0x51
 3390 0304 11000000 		.4byte	.LVL65-1
 3391 0308 3E000000 		.4byte	.LVL71
 3392 030c 0400     		.2byte	0x4
 3393 030e F3       		.byte	0xf3
 3394 030f 01       		.uleb128 0x1
 3395 0310 51       		.byte	0x51
 3396 0311 9F       		.byte	0x9f
 3397 0312 3E000000 		.4byte	.LVL71
 3398 0316 44000000 		.4byte	.LVL72
 3399 031a 0100     		.2byte	0x1
 3400 031c 51       		.byte	0x51
 3401 031d 44000000 		.4byte	.LVL72
 3402 0321 4C000000 		.4byte	.LFE12
 3403 0325 0400     		.2byte	0x4
 3404 0327 F3       		.byte	0xf3
 3405 0328 01       		.uleb128 0x1
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 106


 3406 0329 51       		.byte	0x51
 3407 032a 9F       		.byte	0x9f
 3408 032b 00000000 		.4byte	0
 3409 032f 00000000 		.4byte	0
 3410              	.LLST22:
 3411 0333 00000000 		.4byte	.LVL64
 3412 0337 11000000 		.4byte	.LVL65-1
 3413 033b 0100     		.2byte	0x1
 3414 033d 52       		.byte	0x52
 3415 033e 11000000 		.4byte	.LVL65-1
 3416 0342 1E000000 		.4byte	.LVL67
 3417 0346 0400     		.2byte	0x4
 3418 0348 F3       		.byte	0xf3
 3419 0349 01       		.uleb128 0x1
 3420 034a 52       		.byte	0x52
 3421 034b 9F       		.byte	0x9f
 3422 034c 1E000000 		.4byte	.LVL67
 3423 0350 3E000000 		.4byte	.LVL71
 3424 0354 0100     		.2byte	0x1
 3425 0356 54       		.byte	0x54
 3426 0357 3E000000 		.4byte	.LVL71
 3427 035b 44000000 		.4byte	.LVL72
 3428 035f 0100     		.2byte	0x1
 3429 0361 52       		.byte	0x52
 3430 0362 44000000 		.4byte	.LVL72
 3431 0366 48000000 		.4byte	.LVL73
 3432 036a 0100     		.2byte	0x1
 3433 036c 54       		.byte	0x54
 3434 036d 00000000 		.4byte	0
 3435 0371 00000000 		.4byte	0
 3436              	.LLST23:
 3437 0375 1E000000 		.4byte	.LVL67
 3438 0379 26000000 		.4byte	.LVL68
 3439 037d 0200     		.2byte	0x2
 3440 037f 30       		.byte	0x30
 3441 0380 9F       		.byte	0x9f
 3442 0381 26000000 		.4byte	.LVL68
 3443 0385 3B000000 		.4byte	.LVL70-1
 3444 0389 0700     		.2byte	0x7
 3445 038b 72       		.byte	0x72
 3446 038c 00       		.sleb128 0
 3447 038d F3       		.byte	0xf3
 3448 038e 01       		.uleb128 0x1
 3449 038f 51       		.byte	0x51
 3450 0390 1C       		.byte	0x1c
 3451 0391 9F       		.byte	0x9f
 3452 0392 00000000 		.4byte	0
 3453 0396 00000000 		.4byte	0
 3454              	.LLST24:
 3455 039a 00000000 		.4byte	.LVL74
 3456 039e 0A000000 		.4byte	.LVL75
 3457 03a2 0100     		.2byte	0x1
 3458 03a4 50       		.byte	0x50
 3459 03a5 0A000000 		.4byte	.LVL75
 3460 03a9 14000000 		.4byte	.LFE14
 3461 03ad 0400     		.2byte	0x4
 3462 03af F3       		.byte	0xf3
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 107


 3463 03b0 01       		.uleb128 0x1
 3464 03b1 50       		.byte	0x50
 3465 03b2 9F       		.byte	0x9f
 3466 03b3 00000000 		.4byte	0
 3467 03b7 00000000 		.4byte	0
 3468              	.LLST25:
 3469 03bb 00000000 		.4byte	.LVL77
 3470 03bf 0A000000 		.4byte	.LVL78
 3471 03c3 0100     		.2byte	0x1
 3472 03c5 50       		.byte	0x50
 3473 03c6 0A000000 		.4byte	.LVL78
 3474 03ca 1C000000 		.4byte	.LFE16
 3475 03ce 0400     		.2byte	0x4
 3476 03d0 F3       		.byte	0xf3
 3477 03d1 01       		.uleb128 0x1
 3478 03d2 50       		.byte	0x50
 3479 03d3 9F       		.byte	0x9f
 3480 03d4 00000000 		.4byte	0
 3481 03d8 00000000 		.4byte	0
 3482              	.LLST26:
 3483 03dc 00000000 		.4byte	.LVL77
 3484 03e0 14000000 		.4byte	.LVL79
 3485 03e4 0200     		.2byte	0x2
 3486 03e6 30       		.byte	0x30
 3487 03e7 9F       		.byte	0x9f
 3488 03e8 14000000 		.4byte	.LVL79
 3489 03ec 1C000000 		.4byte	.LFE16
 3490 03f0 0100     		.2byte	0x1
 3491 03f2 50       		.byte	0x50
 3492 03f3 00000000 		.4byte	0
 3493 03f7 00000000 		.4byte	0
 3494              	.LLST27:
 3495 03fb 00000000 		.4byte	.LVL82
 3496 03ff 04000000 		.4byte	.LVL83
 3497 0403 0200     		.2byte	0x2
 3498 0405 30       		.byte	0x30
 3499 0406 9F       		.byte	0x9f
 3500 0407 04000000 		.4byte	.LVL83
 3501 040b 08000000 		.4byte	.LVL84
 3502 040f 0900     		.2byte	0x9
 3503 0411 70       		.byte	0x70
 3504 0412 00       		.sleb128 0
 3505 0413 32       		.byte	0x32
 3506 0414 1A       		.byte	0x1a
 3507 0415 48       		.byte	0x48
 3508 0416 24       		.byte	0x24
 3509 0417 30       		.byte	0x30
 3510 0418 2E       		.byte	0x2e
 3511 0419 9F       		.byte	0x9f
 3512 041a 00000000 		.4byte	0
 3513 041e 00000000 		.4byte	0
 3514              		.section	.debug_aranges,"",%progbits
 3515 0000 C4000000 		.4byte	0xc4
 3516 0004 0200     		.2byte	0x2
 3517 0006 00000000 		.4byte	.Ldebug_info0
 3518 000a 04       		.byte	0x4
 3519 000b 00       		.byte	0
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 108


 3520 000c 0000     		.2byte	0
 3521 000e 0000     		.2byte	0
 3522 0010 00000000 		.4byte	.LFB1
 3523 0014 28010000 		.4byte	.LFE1-.LFB1
 3524 0018 00000000 		.4byte	.LFB2
 3525 001c A8000000 		.4byte	.LFE2-.LFB2
 3526 0020 00000000 		.4byte	.LFB0
 3527 0024 24000000 		.4byte	.LFE0-.LFB0
 3528 0028 00000000 		.4byte	.LFB3
 3529 002c 58000000 		.4byte	.LFE3-.LFB3
 3530 0030 00000000 		.4byte	.LFB4
 3531 0034 B0000000 		.4byte	.LFE4-.LFB4
 3532 0038 00000000 		.4byte	.LFB5
 3533 003c 18000000 		.4byte	.LFE5-.LFB5
 3534 0040 00000000 		.4byte	.LFB6
 3535 0044 0C000000 		.4byte	.LFE6-.LFB6
 3536 0048 00000000 		.4byte	.LFB7
 3537 004c 18000000 		.4byte	.LFE7-.LFB7
 3538 0050 00000000 		.4byte	.LFB8
 3539 0054 0C000000 		.4byte	.LFE8-.LFB8
 3540 0058 00000000 		.4byte	.LFB9
 3541 005c 10000000 		.4byte	.LFE9-.LFB9
 3542 0060 00000000 		.4byte	.LFB10
 3543 0064 28000000 		.4byte	.LFE10-.LFB10
 3544 0068 00000000 		.4byte	.LFB11
 3545 006c 7C000000 		.4byte	.LFE11-.LFB11
 3546 0070 00000000 		.4byte	.LFB13
 3547 0074 28000000 		.4byte	.LFE13-.LFB13
 3548 0078 00000000 		.4byte	.LFB12
 3549 007c 4C000000 		.4byte	.LFE12-.LFB12
 3550 0080 00000000 		.4byte	.LFB14
 3551 0084 14000000 		.4byte	.LFE14-.LFB14
 3552 0088 00000000 		.4byte	.LFB15
 3553 008c 0C000000 		.4byte	.LFE15-.LFB15
 3554 0090 00000000 		.4byte	.LFB16
 3555 0094 1C000000 		.4byte	.LFE16-.LFB16
 3556 0098 00000000 		.4byte	.LFB17
 3557 009c 18000000 		.4byte	.LFE17-.LFB17
 3558 00a0 00000000 		.4byte	.LFB18
 3559 00a4 10000000 		.4byte	.LFE18-.LFB18
 3560 00a8 00000000 		.4byte	.LFB19
 3561 00ac 10000000 		.4byte	.LFE19-.LFB19
 3562 00b0 00000000 		.4byte	.LFB20
 3563 00b4 10000000 		.4byte	.LFE20-.LFB20
 3564 00b8 00000000 		.4byte	.LFB21
 3565 00bc 10000000 		.4byte	.LFE21-.LFB21
 3566 00c0 00000000 		.4byte	0
 3567 00c4 00000000 		.4byte	0
 3568              		.section	.debug_ranges,"",%progbits
 3569              	.Ldebug_ranges0:
 3570 0000 00000000 		.4byte	.LFB1
 3571 0004 28010000 		.4byte	.LFE1
 3572 0008 00000000 		.4byte	.LFB2
 3573 000c A8000000 		.4byte	.LFE2
 3574 0010 00000000 		.4byte	.LFB0
 3575 0014 24000000 		.4byte	.LFE0
 3576 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 109


 3577 001c 58000000 		.4byte	.LFE3
 3578 0020 00000000 		.4byte	.LFB4
 3579 0024 B0000000 		.4byte	.LFE4
 3580 0028 00000000 		.4byte	.LFB5
 3581 002c 18000000 		.4byte	.LFE5
 3582 0030 00000000 		.4byte	.LFB6
 3583 0034 0C000000 		.4byte	.LFE6
 3584 0038 00000000 		.4byte	.LFB7
 3585 003c 18000000 		.4byte	.LFE7
 3586 0040 00000000 		.4byte	.LFB8
 3587 0044 0C000000 		.4byte	.LFE8
 3588 0048 00000000 		.4byte	.LFB9
 3589 004c 10000000 		.4byte	.LFE9
 3590 0050 00000000 		.4byte	.LFB10
 3591 0054 28000000 		.4byte	.LFE10
 3592 0058 00000000 		.4byte	.LFB11
 3593 005c 7C000000 		.4byte	.LFE11
 3594 0060 00000000 		.4byte	.LFB13
 3595 0064 28000000 		.4byte	.LFE13
 3596 0068 00000000 		.4byte	.LFB12
 3597 006c 4C000000 		.4byte	.LFE12
 3598 0070 00000000 		.4byte	.LFB14
 3599 0074 14000000 		.4byte	.LFE14
 3600 0078 00000000 		.4byte	.LFB15
 3601 007c 0C000000 		.4byte	.LFE15
 3602 0080 00000000 		.4byte	.LFB16
 3603 0084 1C000000 		.4byte	.LFE16
 3604 0088 00000000 		.4byte	.LFB17
 3605 008c 18000000 		.4byte	.LFE17
 3606 0090 00000000 		.4byte	.LFB18
 3607 0094 10000000 		.4byte	.LFE18
 3608 0098 00000000 		.4byte	.LFB19
 3609 009c 10000000 		.4byte	.LFE19
 3610 00a0 00000000 		.4byte	.LFB20
 3611 00a4 10000000 		.4byte	.LFE20
 3612 00a8 00000000 		.4byte	.LFB21
 3613 00ac 10000000 		.4byte	.LFE21
 3614 00b0 00000000 		.4byte	0
 3615 00b4 00000000 		.4byte	0
 3616              		.section	.debug_line,"",%progbits
 3617              	.Ldebug_line0:
 3618 0000 EF020000 		.section	.debug_str,"MS",%progbits,1
 3618      02007500 
 3618      00000201 
 3618      FB0E0D00 
 3618      01010101 
 3619              	.LASF10:
 3620 0000 75696E74 		.ascii	"uint16\000"
 3620      313600
 3621              	.LASF93:
 3622 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 3622      69744372 
 3622      69746963 
 3622      616C5365 
 3622      6374696F 
 3623              	.LASF79:
 3624 001d 55534246 		.ascii	"USBFS_initVar\000"
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 110


 3624      535F696E 
 3624      69745661 
 3624      7200
 3625              	.LASF85:
 3626 002b 55534246 		.ascii	"USBFS_hidProtocol\000"
 3626      535F6869 
 3626      6450726F 
 3626      746F636F 
 3626      6C00
 3627              	.LASF68:
 3628 003d 55534246 		.ascii	"USBFS_Force\000"
 3628      535F466F 
 3628      72636500 
 3629              	.LASF7:
 3630 0049 6C6F6E67 		.ascii	"long long unsigned int\000"
 3630      206C6F6E 
 3630      6720756E 
 3630      7369676E 
 3630      65642069 
 3631              	.LASF70:
 3632 0060 55534246 		.ascii	"USBFS_GetEPAckState\000"
 3632      535F4765 
 3632      74455041 
 3632      636B5374 
 3632      61746500 
 3633              	.LASF23:
 3634 0074 61646472 		.ascii	"addr\000"
 3634      00
 3635              	.LASF33:
 3636 0079 65704366 		.ascii	"epCfg\000"
 3636      6700
 3637              	.LASF44:
 3638 007f 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 3638      535F7369 
 3638      655F6570 
 3638      735F7374 
 3638      72756374 
 3639              	.LASF46:
 3640 0094 55534246 		.ascii	"USBFS_arb_eps_struct\000"
 3640      535F6172 
 3640      625F6570 
 3640      735F7374 
 3640      72756374 
 3641              	.LASF61:
 3642 00a9 65704E75 		.ascii	"epNumber\000"
 3642      6D626572 
 3642      00
 3643              	.LASF49:
 3644 00b2 64657669 		.ascii	"device\000"
 3644      636500
 3645              	.LASF6:
 3646 00b9 6C6F6E67 		.ascii	"long long int\000"
 3646      206C6F6E 
 3646      6720696E 
 3646      7400
 3647              	.LASF0:
 3648 00c7 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 111


 3648      65642063 
 3648      68617200 
 3649              	.LASF98:
 3650 00d3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3650      43313120 
 3650      352E342E 
 3650      31203230 
 3650      31363036 
 3651 0106 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3651      20726576 
 3651      6973696F 
 3651      6E203233 
 3651      37373135 
 3652 0139 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 3652      66756E63 
 3652      74696F6E 
 3652      2D736563 
 3652      74696F6E 
 3653              	.LASF57:
 3654 0161 55534246 		.ascii	"USBFS_IsConfigurationChanged\000"
 3654      535F4973 
 3654      436F6E66 
 3654      69677572 
 3654      6174696F 
 3655              	.LASF88:
 3656 017e 55534246 		.ascii	"USBFS_deviceAddress\000"
 3656      535F6465 
 3656      76696365 
 3656      41646472 
 3656      65737300 
 3657              	.LASF86:
 3658 0192 55534246 		.ascii	"USBFS_interfaceNumber\000"
 3658      535F696E 
 3658      74657266 
 3658      6163654E 
 3658      756D6265 
 3659              	.LASF73:
 3660 01a8 55534246 		.ascii	"USBFS_RWUEnabled\000"
 3660      535F5257 
 3660      55456E61 
 3660      626C6564 
 3660      00
 3661              	.LASF42:
 3662 01b9 55534246 		.ascii	"USBFS_arb_ep_struct\000"
 3662      535F6172 
 3662      625F6570 
 3662      5F737472 
 3662      75637400 
 3663              	.LASF102:
 3664 01cd 636E7472 		.ascii	"cntr\000"
 3664      00
 3665              	.LASF54:
 3666 01d2 55534246 		.ascii	"USBFS_Stop\000"
 3666      535F5374 
 3666      6F7000
 3667              	.LASF4:
 3668 01dd 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 112


 3668      20696E74 
 3668      00
 3669              	.LASF75:
 3670 01e6 55534246 		.ascii	"USBFS_GetConfiguration\000"
 3670      535F4765 
 3670      74436F6E 
 3670      66696775 
 3670      72617469 
 3671              	.LASF9:
 3672 01fd 75696E74 		.ascii	"uint8\000"
 3672      3800
 3673              	.LASF22:
 3674 0203 6570546F 		.ascii	"epToggle\000"
 3674      67676C65 
 3674      00
 3675              	.LASF37:
 3676 020c 72775761 		.ascii	"rwWa\000"
 3676      00
 3677              	.LASF92:
 3678 0211 43794465 		.ascii	"CyDelayUs\000"
 3678      6C617955 
 3678      7300
 3679              	.LASF13:
 3680 021b 646F7562 		.ascii	"double\000"
 3680      6C6500
 3681              	.LASF72:
 3682 0222 706F7765 		.ascii	"powerStatus\000"
 3682      72537461 
 3682      74757300 
 3683              	.LASF35:
 3684 022e 65705372 		.ascii	"epSr\000"
 3684      00
 3685              	.LASF11:
 3686 0233 75696E74 		.ascii	"uint32\000"
 3686      333200
 3687              	.LASF48:
 3688 023a 55534246 		.ascii	"USBFS_InitComponent\000"
 3688      535F496E 
 3688      6974436F 
 3688      6D706F6E 
 3688      656E7400 
 3689              	.LASF63:
 3690 024e 70446174 		.ascii	"pData\000"
 3690      6100
 3691              	.LASF43:
 3692 0254 73696545 		.ascii	"sieEp\000"
 3692      7000
 3693              	.LASF24:
 3694 025a 65704D6F 		.ascii	"epMode\000"
 3694      646500
 3695              	.LASF36:
 3696 0261 72657365 		.ascii	"reserved\000"
 3696      72766564 
 3696      00
 3697              	.LASF66:
 3698 026a 55534246 		.ascii	"USBFS_ReadOutEP\000"
 3698      535F5265 
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 113


 3698      61644F75 
 3698      74455000 
 3699              	.LASF8:
 3700 027a 756E7369 		.ascii	"unsigned int\000"
 3700      676E6564 
 3700      20696E74 
 3700      00
 3701              	.LASF5:
 3702 0287 6C6F6E67 		.ascii	"long unsigned int\000"
 3702      20756E73 
 3702      69676E65 
 3702      6420696E 
 3702      7400
 3703              	.LASF82:
 3704 0299 55534246 		.ascii	"USBFS_configuration\000"
 3704      535F636F 
 3704      6E666967 
 3704      75726174 
 3704      696F6E00 
 3705              	.LASF76:
 3706 02ad 55534246 		.ascii	"USBFS_GetDeviceAddress\000"
 3706      535F4765 
 3706      74446576 
 3706      69636541 
 3706      64647265 
 3707              	.LASF3:
 3708 02c4 73686F72 		.ascii	"short unsigned int\000"
 3708      7420756E 
 3708      7369676E 
 3708      65642069 
 3708      6E7400
 3709              	.LASF95:
 3710 02d7 4379496E 		.ascii	"CyIntSetVector\000"
 3710      74536574 
 3710      56656374 
 3710      6F7200
 3711              	.LASF32:
 3712 02e6 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 3712      535F7369 
 3712      655F6570 
 3712      5F737472 
 3712      75637400 
 3713              	.LASF91:
 3714 02fa 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3714      74657243 
 3714      72697469 
 3714      63616C53 
 3714      65637469 
 3715              	.LASF45:
 3716 0311 61726245 		.ascii	"arbEp\000"
 3716      7000
 3717              	.LASF27:
 3718 0317 696E7465 		.ascii	"interface\000"
 3718      72666163 
 3718      6500
 3719              	.LASF55:
 3720 0321 63723152 		.ascii	"cr1Reg\000"
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 114


 3720      656700
 3721              	.LASF83:
 3722 0328 55534246 		.ascii	"USBFS_configurationChanged\000"
 3722      535F636F 
 3722      6E666967 
 3722      75726174 
 3722      696F6E43 
 3723              	.LASF16:
 3724 0343 72656733 		.ascii	"reg32\000"
 3724      3200
 3725              	.LASF77:
 3726 0349 55534246 		.ascii	"USBFS_EnableSofInt\000"
 3726      535F456E 
 3726      61626C65 
 3726      536F6649 
 3726      6E7400
 3727              	.LASF21:
 3728 035c 68774570 		.ascii	"hwEpState\000"
 3728      53746174 
 3728      6500
 3729              	.LASF71:
 3730 0366 55534246 		.ascii	"USBFS_SetPowerStatus\000"
 3730      535F5365 
 3730      74506F77 
 3730      65725374 
 3730      61747573 
 3731              	.LASF18:
 3732 037b 73697A65 		.ascii	"sizetype\000"
 3732      74797065 
 3732      00
 3733              	.LASF17:
 3734 0384 6C6F6E67 		.ascii	"long double\000"
 3734      20646F75 
 3734      626C6500 
 3735              	.LASF19:
 3736 0390 61747472 		.ascii	"attrib\000"
 3736      696200
 3737              	.LASF62:
 3738 0397 55534246 		.ascii	"USBFS_LoadInEP\000"
 3738      535F4C6F 
 3738      6164496E 
 3738      455000
 3739              	.LASF40:
 3740 03a6 72775261 		.ascii	"rwRaMsb\000"
 3740      4D736200 
 3741              	.LASF29:
 3742 03ae 6570436E 		.ascii	"epCnt0\000"
 3742      743000
 3743              	.LASF30:
 3744 03b5 6570436E 		.ascii	"epCnt1\000"
 3744      743100
 3745              	.LASF94:
 3746 03bc 4379496E 		.ascii	"CyIntSetPriority\000"
 3746      74536574 
 3746      5072696F 
 3746      72697479 
 3746      00
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 115


 3747              	.LASF31:
 3748 03cd 65704372 		.ascii	"epCr0\000"
 3748      3000
 3749              	.LASF12:
 3750 03d3 666C6F61 		.ascii	"float\000"
 3750      7400
 3751              	.LASF20:
 3752 03d9 61706945 		.ascii	"apiEpState\000"
 3752      70537461 
 3752      746500
 3753              	.LASF89:
 3754 03e4 55534246 		.ascii	"USBFS_EP\000"
 3754      535F4550 
 3754      00
 3755              	.LASF47:
 3756 03ed 55534246 		.ascii	"USBFS_Init\000"
 3756      535F496E 
 3756      697400
 3757              	.LASF96:
 3758 03f8 43794465 		.ascii	"CyDelayCycles\000"
 3758      6C617943 
 3758      79636C65 
 3758      7300
 3759              	.LASF78:
 3760 0406 55534246 		.ascii	"USBFS_DisableSofInt\000"
 3760      535F4469 
 3760      7361626C 
 3760      65536F66 
 3760      496E7400 
 3761              	.LASF15:
 3762 041a 72656738 		.ascii	"reg8\000"
 3762      00
 3763              	.LASF81:
 3764 041f 55534246 		.ascii	"USBFS_transferState\000"
 3764      535F7472 
 3764      616E7366 
 3764      65725374 
 3764      61746500 
 3765              	.LASF1:
 3766 0433 756E7369 		.ascii	"unsigned char\000"
 3766      676E6564 
 3766      20636861 
 3766      7200
 3767              	.LASF2:
 3768 0441 73686F72 		.ascii	"short int\000"
 3768      7420696E 
 3768      7400
 3769              	.LASF90:
 3770 044b 55534246 		.ascii	"USBFS_lastPacketSize\000"
 3770      535F6C61 
 3770      73745061 
 3770      636B6574 
 3770      53697A65 
 3771              	.LASF65:
 3772 0460 55534246 		.ascii	"USBFS_EnableOutEP\000"
 3772      535F456E 
 3772      61626C65 
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 116


 3772      4F757445 
 3772      5000
 3773              	.LASF99:
 3774 0472 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS.c\000"
 3774      72617465 
 3774      645F536F 
 3774      75726365 
 3774      5C50536F 
 3775              	.LASF87:
 3776 0491 55534246 		.ascii	"USBFS_interfaceSetting\000"
 3776      535F696E 
 3776      74657266 
 3776      61636553 
 3776      65747469 
 3777              	.LASF28:
 3778 04a8 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 3778      4246535F 
 3778      45505F43 
 3778      544C5F42 
 3778      4C4F434B 
 3779              	.LASF80:
 3780 04bd 55534246 		.ascii	"USBFS_device\000"
 3780      535F6465 
 3780      76696365 
 3780      00
 3781              	.LASF69:
 3782 04ca 62537461 		.ascii	"bState\000"
 3782      746500
 3783              	.LASF84:
 3784 04d1 55534246 		.ascii	"USBFS_deviceStatus\000"
 3784      535F6465 
 3784      76696365 
 3784      53746174 
 3784      757300
 3785              	.LASF64:
 3786 04e4 6C656E67 		.ascii	"length\000"
 3786      746800
 3787              	.LASF14:
 3788 04eb 63686172 		.ascii	"char\000"
 3788      00
 3789              	.LASF50:
 3790 04f0 6D6F6465 		.ascii	"mode\000"
 3790      00
 3791              	.LASF26:
 3792 04f5 62756666 		.ascii	"bufferSize\000"
 3792      65725369 
 3792      7A6500
 3793              	.LASF52:
 3794 0500 55534246 		.ascii	"USBFS_Start\000"
 3794      535F5374 
 3794      61727400 
 3795              	.LASF25:
 3796 050c 62756666 		.ascii	"buffOffset\000"
 3796      4F666673 
 3796      657400
 3797              	.LASF59:
 3798 0517 696E7465 		.ascii	"interfaceNumber\000"
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 117


 3798      72666163 
 3798      654E756D 
 3798      62657200 
 3799              	.LASF97:
 3800 0527 55534246 		.ascii	"USBFS_Dp_ClearInterrupt\000"
 3800      535F4470 
 3800      5F436C65 
 3800      6172496E 
 3800      74657272 
 3801              	.LASF100:
 3802 053f 433A5C55 		.ascii	"C:\\Users\\rabbit\\Documents\\v5.0c\\SCSI2SD\\softw"
 3802      73657273 
 3802      5C726162 
 3802      6269745C 
 3802      446F6375 
 3803 056c 6172655C 		.ascii	"are\\SCSI2SD\\v5.0\\USB_Bootloader.cydsn\000"
 3803      53435349 
 3803      3253445C 
 3803      76352E30 
 3803      5C555342 
 3804              	.LASF60:
 3805 0592 55534246 		.ascii	"USBFS_GetEPState\000"
 3805      535F4765 
 3805      74455053 
 3805      74617465 
 3805      00
 3806              	.LASF53:
 3807 05a3 55534246 		.ascii	"USBFS_ReInitComponent\000"
 3807      535F5265 
 3807      496E6974 
 3807      436F6D70 
 3807      6F6E656E 
 3808              	.LASF51:
 3809 05b9 656E6162 		.ascii	"enableInterrupts\000"
 3809      6C65496E 
 3809      74657272 
 3809      75707473 
 3809      00
 3810              	.LASF56:
 3811 05ca 55534246 		.ascii	"USBFS_CheckActivity\000"
 3811      535F4368 
 3811      65636B41 
 3811      63746976 
 3811      69747900 
 3812              	.LASF41:
 3813 05de 72774472 		.ascii	"rwDr\000"
 3813      00
 3814              	.LASF67:
 3815 05e3 55534246 		.ascii	"USBFS_DisableOutEP\000"
 3815      535F4469 
 3815      7361626C 
 3815      654F7574 
 3815      455000
 3816              	.LASF39:
 3817 05f6 72775261 		.ascii	"rwRa\000"
 3817      00
 3818              	.LASF38:
ARM GAS  C:\Users\rabbit\AppData\Local\Temp\ccUovuGe.s 			page 118


 3819 05fb 72775761 		.ascii	"rwWaMsb\000"
 3819      4D736200 
 3820              	.LASF34:
 3821 0603 6570496E 		.ascii	"epIntEn\000"
 3821      74456E00 
 3822              	.LASF58:
 3823 060b 55534246 		.ascii	"USBFS_GetInterfaceSetting\000"
 3823      535F4765 
 3823      74496E74 
 3823      65726661 
 3823      63655365 
 3824              	.LASF101:
 3825 0625 55534246 		.ascii	"USBFS_GetEPCount\000"
 3825      535F4765 
 3825      74455043 
 3825      6F756E74 
 3825      00
 3826              	.LASF74:
 3827 0636 72657375 		.ascii	"result\000"
 3827      6C7400
 3828              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
